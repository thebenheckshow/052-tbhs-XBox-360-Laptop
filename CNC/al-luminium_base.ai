%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 15.0.2
%%For: (benheck) ()
%%Title: (al-luminium_base.ai)
%%CreationDate: 9/19/2012 10:49 AM
%%Canvassize: 16383
%%BoundingBox: -1 -1729 865 1
%%HiResBoundingBox: -0.5 -1728.5 864.5 0.5
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%RGBProcessColor: 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 432.5 -864.5 432.5 -864.5
%AI3_TileBox: 126 -1260 738 -468
%AI3_DocumentPreview: None
%AI5_ArtSize: 864 1728
%AI5_RulerUnits: 0
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -1451 271 0.5 1894 1028 25 0 0 13 119 0 0
%AI5_OpenViewLayers: 5
%%PageOrigin:126 -1260
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 64 128 8
%%BeginData: 3504 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45A8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8A8FD7FFFA8FD7FFFA8FD7FFFA8FD7FFFA8FD7FFFA8FD7F
%FFA8FD7FFFA8FD7FFFA8FD7FFFA8FD7FFFA8FD7FFFA8FD0BFFA8FFFFFFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8
%FFA8FFA8FFA8FD16FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD0AFFA8FD07FFA8
%FD05FFA8FD19FFA8FD0DFFA8FD1CFFA8FD11FFA8FD11FFA8FD08FFA8FD07
%FFA8FD09FFA8FD23FFA8FFA8FD47FFA8FD07FFA8FD04FFA8FD17FFA8FD0B
%FFA8FD06FFA8FD47FFA8FD07FFA8FD2FFFA8FD47FFA8FD07FFA8FD2FFFA8
%FD47FFA8FD07FFA8FD2FFFA8FD47FFA8FD07FFA8FD2FFFA8FD47FFA8FD07
%FFA8FD2FFFA8FD47FFA8FD07FFA8FD2FFFA8FD47FFA8FD07FFA8FD2FFFA8
%FD47FFA8FD07FFA8FD2FFFA8FD47FFA8FD07FFA8FD2FFFA8FD47FFA8FD07
%FFA8FD2FFFA8FD12FFA8FD34FFA8FD07FFA8FD2FFFA8FD47FFA8FD07FFA8
%FD2FFFA8FD47FFA8FD07FFA8FD2FFFA8FD47FFA8FD07FFA8FD2FFFA8FD47
%FFA8FD07FFA8FD2FFFA8FD47FFA8FD07FFA8FD2FFFA8FD47FFA8FD07FFA8
%FD2FFFA8FD47FFA8FD07FFA8FD2FFFA8FD47FFA8FD07FFA8FD2FFFA8FD47
%FFA8FD07FFA8FD2FFFA8FD47FFA8FD07FFA8A8FD2EFFA8FD14FFA8FD1DFF
%A8FD14FFA8FD07FFA8FD2FFFA8FD47FFA8FD07FFA8FD2DFFA8FD40FFA8FD
%08FFA8FD07FFA8FD2FFFA8FD47FFA8FD07FFA8FD2FFFA8FD47FFA8FD07FF
%A8FD2FFFA8FD47FFA8FD07FFA8FD2FFFA8FD47FFA8FD07FFA8FD2FFFA8FD
%47FFA8FD07FFA8FD2FFFA8FD47FFA8FD07FFA8FD2FFFA8FD47FFA8FD07FF
%A8FD2FFFA8FD47FFA8FD07FFA8FD2FFFA8FD47FFA8FD07FFA8FD2FFFA8FD
%47FFA8FD07FFA8FD2FFFA8FD47FFA8FD07FFA8FD2FFFA8FD3EFFA8FD08FF
%A8FD07FFA8FD2DFFA8FD14FFA8FD13FFA8FD20FFA8FD09FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FD49FFA8FD7FFFA8FD7FFFA8FD7FFFA8FD7FFFA8FD
%7FFFA8FD7FFFA8FD7FFFA8FD7FFFA8FD7FFFA8FD7FFFA8FD7FFF7DFFA8CA
%A8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FF
%A8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CA
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
7 Bn
%AI5_BeginGradient: (Fade to Black)
(Fade to Black) 0 2 Bd
[
0.697627
0.675227
0.638575
0.739559
0.137255
0.121569
0.12549
4 %_Br
[
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 25 0 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 25 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green, Yellow, Orange)
(Green, Yellow, Orange) 0 7 Bd
[
<
000102030405060708090A0C0D0E1011121415161718191A1B1C1D1E1F202122232425262728292A
2B2C2D2E2F30313233343435363738393A3B3C3D3E3F404142434445464748494A4B4C4E4F505152
5354555758595A5C5D5E5F616263646667696A6B6C6E6F707273747778797A7C7E7F808283848687
888A8B8C8E8F909294959697999A9B9C9E9FA0A2A3A4A5A6A8A9AAABACADAEB0B1B2B3B4B5B5B6B7
B8B9BABBBCBDBEBEBFC0C1C1C2C3C4C4C5C6C7C7C8C8C9CACACBCBCCCCCDCDCECECECFCFCFD0D0D1
D1D1D2D2D2D2D3D3D3D3D4D4D4D4D5D5D5D5D5D5D5D5D5D6D5D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6
D6D6D6
>
<
BEBEBEBDBDBDBDBCBCBCBBBABAB9B9B8B7B7B6B5B4B4B4B2B2B1B1AFAFAFAEACACABABA9A8A8A7A6
A5A5A4A2A2A1A19F9E9E9D9B9A9A9997969695939291918E8E8D8C8A898888858484838180807F7D
7C7C7B797877777474737270706F6F6C6B6B6A68686767656464636160605F5D5D5C5C5A5A595957
575656555353535250504F4F4D4D4D4C4B4A4A4A484847474646454544434343414140403F3E3E3E
3C3C3C3C3A3A3A3A38383838373636363434343432323232303030302F2E2E2E2D2D2D2C2B2B2B2B
2929292928282828262626262424242422222222202020201F1F1F1F1D1D1D1D1B1B1B1B1A1A1A1A
181818
>
<
FCFCFDFCFCFDFDFEFFFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE
FEFEFEFEFEFCFBFCFBFBFBFAFAFAFAFAFBF9F9FAFAFAF9F9FAFAFAFBF9F9FAFAFAFAF9FAFAFAFAFB
F9F9F9FAFAFAF8F8F8F8F8F9F7F7F7F9F9F9F7F8F8F8F8F9F7F7F7F9F9FAF8F9FAFAFAFCFAFBFBFD
FEFCFCFDFEFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FEFEFE
>
<
00000000000000000000000101010101010101020202020303030404040405050506060708080909
0A0A0B0B0C0D0D0E0E0F1010111212131414151516161717181819191A1B1B1C1C1D1D1D1E1E1F1F
1F202020212122222222232223232323232424232424242424242424242424232323232222222221
21222222212121211F1F1F1F1E1E1E1E1D1D1D1C1B1B1B1B1A1A1A1A191818181717171715151515
1414141412121212111111111010100F0E0E0E0E0D0D0D0D0C0C0C0C0B0B0A0A0909090908080808
07070707060606060505050505050505040404040404040403030303030303030303030302020202
020202
>
<
F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCB
CAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3
A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453
5251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B
2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403
020100
>
<
656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D6D6E6E6E6E6F
6F6F6F70707070717171717272727273737373747474747575757576767676777777777878787879
7979797A7A7A7A7B7B7B7B7C7C7C7C7D7D7D7D7E7E7E7E7F7F7F7F80808080818181818282828283
838383838484848485858585868686868787878788888888898989898A8A8A8A8B8B8B8B8C8C8C8C
8D8D8D8D8E8E8E8E8F8F8F8F90909090919191919292929293939393949494949595959596969696
9797979798989898999999999A9A9A9A9B9B9B9B9C9C9C9C9D9D9D9D9E9E9E9E9F9F9F9FA0A0A0A0
A1A1A1
>
<
22222223232323232324242424242425252525252526262626262627272727272728282828282829
29292929292A2A2A2A2A2A2B2B2B2B2B2B2C2C2C2C2C2D2D2D2D2D2D2E2E2E2E2E2E2F2F2F2F2F2F
30303030303031313131313132323232323233333333333334343434343435353535353536363636
363737373737373838383838383939393939393A3A3A3A3A3A3B3B3B3B3B3B3C3C3C3C3C3C3D3D3D
3D3D3D3E3E3E3E3E3E3F3F3F3F3F3F40404040404041414141414242424242424343434343434444
444444444545454545454646464646464747474747474848484848484949494949494A4A4A4A4A4A
4B4B4B
>
4 %_Br
<
04040404040504040404040303030404030303020202020203030303030303030304040303030302
02020303030302020202020202020101010101010001010101010000000000000000000000000000
00000000000000000100000000000000000101010000000000000000000000000000000000010101
00
>
<
1618191B1C1D1F202223252628292A2B2C2E2F313234353738393B3D3E404143454547484A4B4D4E
50515253545657595A5C5D5E5F616263656668696B6D6F707173747677797A7B7D7E808182848687
898B8D8E90919294959698999A9C9D9FA0A1A3A4A5A7A8A9ABACADAEB0B1B3B4B5B6B7B9BABABCBD
BE
>
<
F7F7F7F7F7F8F8F8F8F7F7F7F7F6F7F7F7F6F6F7F7F7F7F7F8F7F8F8F8F8F9F9FAFBFBFBFBFCFCFC
FDFDFEFFFEFDFDFDFCFCFCFCFDFDFDFDFDFDFCFCFBFCFBFCFCFCFCFBFBFBFCFBFBFBFBFCFCFCFCFD
FDFEFDFDFDFDFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFCFCFCFCFBFBFBFBFBFBFAFBFBFBFB
FC
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00
>
<
FFFFFFFFFFFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFB
FBFBFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F6
F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F2F2F2F2
F2
>
<
DEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7
B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A09F9E9D9C9B9A999897969594939291908F8E
8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766
65
>
<
171717171717181818181818181818181819191919191919191919191A1A1A1A1A1A1A1A1A1A1A1B
1B1B1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1C1C1C1D1D1D1D1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1E
1E1E1F1F1F1F1F1F1F1F1F1F1F202020202020202020202021212121212121212121212222222222
22
>
4 %_Br
<
D6D6D6D5D5D5D5D4D4D4D4D3D3D3D3D2D2D2D2D1D1D1D1D0D0D0CFCFCECECECECDCDCDCCCBCBCBCB
CACAC9C9C8C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0BFBFBEBEBDBDBCBBBBBABAB9B8B8B7B6B6B5
B5B4B3B2B2B1B0AFAEAEADACABABAAA9A9A8A7A6A5A5A4A3A2A1A19F9E9E9D9C9B9A999897969695
9493929291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7A797877767574737271706F
6E6D6C6B6A6968666564636261605F5E5D5C5B5A5857565554535251504F4E4D4C4B4A4948474645
444241403F3E3D3B3A39373635333231302F2E2D2C2A2928272625242322201F1E1D1C1B1A191716
15141312100F0E0D0C0B0A0907060504
>
<
181818161616161515151513131313121212121111111110101010100E0E0E0F0D0D0D0D0C0C0C0C
0B0B0B0B0A0A0A0A0A09090A0A080909090808080807070708060607070606060606050506060505
05050405050504040505040404050504040405040404040303040402030303020203030202030303
02030303020303030203030302030404030404050504050505040505050505050605050606050606
060506060707060708080708080908080909080809090909090A0A0A0A0B0B0A0B0B0C0B0B0C0C0B
0C0C0D0C0D0D0E0D0D0E0E0F0D0E0E0F0E0E0F0F0E0F10100F101111101111121211121213121213
13121313141314141514151516151616
>
<
FEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFDFDFDFCFCFCFBFCFBFBFBFBFBFAFAFAFAFA
FAFAF9FAFAF9F9F9F9F9F8F8F8F8F8F7
>
<
02020202020202010101010101010101010101010101010101010101010101010101010101010101
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
A1A1A1A2A2A2A2A3A3A3A3A4A4A4A4A5A5A5A5A6A6A6A6A7A7A7A7A7A8A8A8A8A9A9A9A9AAAAAAAA
ABABABABACACACACACADADADADAEAEAEAEAFAFAFAFB0B0B0B0B1B1B1B1B2B2B2B2B2B3B3B3B3B4B4
B4B4B5B5B5B5B6B6B6B6B7B7B7B7B7B8B8B8B8B9B9B9B9BABABABABBBBBBBBBCBCBCBCBDBDBDBDBD
BEBEBEBEBFBFBFBFC0C0C0C0C1C1C1C1C2C2C2C2C2C3C3C3C3C4C4C4C4C5C5C5C5C6C6C6C6C7C7C7
C7C8C8C8C8C8C9C9C9C9CACACACACBCBCBCBCCCCCCCCCDCDCDCDCDCECECECECFCFCFCFD0D0D0D0D1
D1D1D1D2D2D2D2D3D3D3D3D3D4D4D4D4D5D5D5D5D6D6D6D6D7D7D7D7D8D8D8D8D8D9D9D9D9DADADA
DADBDBDBDBDCDCDCDCDDDDDDDDDEDEDE
>
<
4B4B4B4A4A4A4A4A4949494949484848484847474747474646464645454545454444444444434343
43434242424242414141414140404040403F3F3F3F3F3E3E3E3E3E3D3D3D3D3D3C3C3C3C3C3B3B3B
3B3A3A3A3A3A39393939393838383838373737373736363636363535353535343434343433333333
3332323232323131313130303030302F2F2F2F2F2E2E2E2E2E2D2D2D2D2D2C2C2C2C2C2B2B2B2B2B
2A2A2A2A2A2929292929282828282827272727262626262625252525252424242424232323232322
22222222212121212120202020201F1F1F1F1F1E1E1E1E1E1D1D1D1D1D1C1C1C1C1B1B1B1B1B1A1A
1A1A1A19191919191818181818171717
>
4 %_Br
<
000102030405060708090A0C0D0E1011121415161718191A1B1C1D1E1F202122232425262728292A
2B2C2D2E2F30313233343435363738393A3B3C3D3E3F404142434445464748494A4B4C4E4F505152
5354555758595A5C5D5E5F616263646667696A6B6C6E6F707273747778797A7C7E7F808283848687
888A8B8C8E8F909294959697999A9B9C9E9FA0A2A3A4A5A6A8A9AAABACADAEB0B1B2B3B4B5B5B6B7
B8B9BABBBCBDBEBEBFC0C1C1C2C3C4C4C5C6C7C7C8C8C9CACACBCBCCCCCDCDCECECECFCFCFD0D0D1
D1D1D2D2D2D2D3D3D3D3D4D4D4D4D5D5D5D5D5D5D5D5D5D6D5D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6
D6D6D6
>
<
BEBEBEBDBDBDBDBCBCBCBBBABAB9B9B8B7B7B6B5B4B4B4B2B2B1B1AFAFAFAEACACABABA9A8A8A7A6
A5A5A4A2A2A1A19F9E9E9D9B9A9A9997969695939291918E8E8D8C8A898888858484838180807F7D
7C7C7B797877777474737270706F6F6C6B6B6A68686767656464636160605F5D5D5C5C5A5A595957
575656555353535250504F4F4D4D4D4C4B4A4A4A484847474646454544434343414140403F3E3E3E
3C3C3C3C3A3A3A3A38383838373636363434343432323232303030302F2E2E2E2D2D2D2C2B2B2B2B
2929292928282828262626262424242422222222202020201F1F1F1F1D1D1D1D1B1B1B1B1A1A1A1A
181818
>
<
FCFCFDFCFCFDFDFEFFFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE
FEFEFEFEFEFCFBFCFBFBFBFAFAFAFAFAFBF9F9FAFAFAF9F9FAFAFAFBF9F9FAFAFAFAF9FAFAFAFAFB
F9F9F9FAFAFAF8F8F8F8F8F9F7F7F7F9F9F9F7F8F8F8F8F9F7F7F7F9F9FAF8F9FAFAFAFCFAFBFBFD
FEFCFCFDFEFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FEFEFE
>
<
00000000000000000000000101010101010101020202020303030404040405050506060708080909
0A0A0B0B0C0D0D0E0E0F1010111212131414151516161717181819191A1B1B1C1C1D1D1D1E1E1F1F
1F202020212122222222232223232323232424232424242424242424242424232323232222222221
21222222212121211F1F1F1F1E1E1E1E1D1D1D1C1B1B1B1B1A1A1A1A191818181717171715151515
1414141412121212111111111010100F0E0E0E0E0D0D0D0D0C0C0C0C0B0B0A0A0909090908080808
07070707060606060505050505050505040404040404040403030303030303030303030302020202
020202
>
<
F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCB
CAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3
A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453
5251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B
2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403
020100
>
<
656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D6D6E6E6E6E6F
6F6F6F70707070717171717272727273737373747474747575757576767676777777777878787879
7979797A7A7A7A7B7B7B7B7C7C7C7C7D7D7D7D7E7E7E7E7F7F7F7F80808080818181818282828283
838383838484848485858585868686868787878788888888898989898A8A8A8A8B8B8B8B8C8C8C8C
8D8D8D8D8E8E8E8E8F8F8F8F90909090919191919292929293939393949494949595959596969696
9797979798989898999999999A9A9A9A9B9B9B9B9C9C9C9C9D9D9D9D9E9E9E9E9F9F9F9FA0A0A0A0
A1A1A1
>
<
22222223232323232324242424242425252525252526262626262627272727272728282828282829
29292929292A2A2A2A2A2A2B2B2B2B2B2B2C2C2C2C2C2D2D2D2D2D2D2E2E2E2E2E2E2F2F2F2F2F2F
30303030303031313131313132323232323233333333333334343434343435353535353536363636
363737373737373838383838383939393939393A3A3A3A3A3A3B3B3B3B3B3B3C3C3C3C3C3C3D3D3D
3D3D3D3E3E3E3E3E3E3F3F3F3F3F3F40404040404041414141414242424242424343434343434444
444444444545454545454646464646464747474747474848484848484949494949494A4A4A4A4A4A
4B4B4B
>
4 %_Br
<
04040404040504040404040303030404030303020202020203030303030303030304040303030302
02020303030302020202020202020101010101010001010101010000000000000000000000000000
00000000000000000100000000000000000101010000000000000000000000000000000000010101
00
>
<
1618191B1C1D1F202223252628292A2B2C2E2F313234353738393B3D3E404143454547484A4B4D4E
50515253545657595A5C5D5E5F616263656668696B6D6F707173747677797A7B7D7E808182848687
898B8D8E90919294959698999A9C9D9FA0A1A3A4A5A7A8A9ABACADAEB0B1B3B4B5B6B7B9BABABCBD
BE
>
<
F7F7F7F7F7F8F8F8F8F7F7F7F7F6F7F7F7F6F6F7F7F7F7F7F8F7F8F8F8F8F9F9FAFBFBFBFBFCFCFC
FDFDFEFFFEFDFDFDFCFCFCFCFDFDFDFDFDFDFCFCFBFCFBFCFCFCFCFBFBFBFCFBFBFBFBFCFCFCFCFD
FDFEFDFDFDFDFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFCFCFCFCFBFBFBFBFBFBFAFBFBFBFB
FC
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00
>
<
FFFFFFFFFFFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFB
FBFBFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F6
F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F2F2F2F2
F2
>
<
DEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7
B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A09F9E9D9C9B9A999897969594939291908F8E
8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766
65
>
<
171717171717181818181818181818181819191919191919191919191A1A1A1A1A1A1A1A1A1A1A1B
1B1B1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1C1C1C1D1D1D1D1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1E
1E1E1F1F1F1F1F1F1F1F1F1F1F202020202020202020202021212121212121212121212222222222
22
>
4 %_Br
<
D6D6D6D5D5D5D5D4D4D4D4D3D3D3D3D2D2D2D2D2D1D1D1D1D0D0D0CFCFCECECECECDCDCDCCCBCBCB
CBCBCACAC9C9C8C8C8C7C7C7C6C6C5C5C4C4C3C3C3C2C2C1C1C0BFBFBFBEBEBDBDBCBBBBBBBABAB9
B8B8B8B7B6B6B5B5B5B4B3B2B2B2B1B0AFAEAEAEADACABABABAAA9A9A9A8A7A6A6A5A5A4A4A3A2A1
A1A19F9E9E9E9D9C9C9B9A99999897969696959594939292929191908F8E8E8D8C8C8B8A8A898888
8786868584848382828180807F7E7E7D7C7C7B7A7A7A79797878777676757474737372717170706F
6E6E6D6D6C6B6B6A6A696968666665656464636262616160605F5F5E5D5D5C5C5B5B595A58585757
565655555454535252515150504F4F4F4E4E4D4D4C4C4B4B4A4A4949484847474646464545444442
4241414140403F3F3E3E3E3D3D3B3B3A3A3A39393737373636353535333332323231313130302F2F
2F2E2E2E2D2D2D2C2C2A2A2A29292928282827272726262625252524242424232323222222202020
201F1F1F1E1E1E1E1D1D1D1C1C1C1C1B1B1B1B1A1A1A1A1919191917171717161616161515151515
141414141313131313121212121210101010100F0F0F0F0F0F0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C
0C0C0C0A0A0B0B0B0B0B0A0A0A0A0A0A0A0A09090909090909090907070707070707070707070606
06060606060606060606050505050505050505050505050505050505050504040404040404040404
040404040404040404040404040404040404
>
<
181818161616161515151513131313121212121211111111101010100E0E0E0E0F0D0D0D0D0C0C0C
0C0C0B0B0B0B0A0A0A0A0A0909090A0A080909090908080808070707070806060707070606060606
05050506060505050505040505050504040505050404040405050404040405040404040404030304
04040203030303030202030303020203030303020203030303020203030303020303030303020303
04040403040404050504040405050505040405050505050505050506060505050606060605060606
06060705060606070707060607070808080707080808080909080808090909090808080809090909
0909090909090A0A0A0A0A0A0A0B0B0B0B0A0A0A0B0B0B0B0C0C0B0B0B0B0C0C0C0C0C0B0B0C0C0C
0C0D0D0D0C0C0D0D0D0D0D0E0E0F0D0D0D0D0E0E0E0E0E0F0D0D0D0D0E0E0E0E0E0F0F0D0E0E0E0E
0E0F0F0F0F0F0E0E0E0F0F0F101010101010110F0F10101011111111111111121010111111111111
11121212121211111211111212121212121212131311111212121212121212131313131313131312
12121212131313131313131313131414141414131313131313141414141414141414141414151515
15151516161414141414151515151515151515151515151515151516161616161616161616161717
17171515151515151515161616161616161616161616161616161616161616161616161616161616
161616161616161616161616161616161616
>
<
FEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFEFEFEFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFBFCFCFCFCFCFBFBFB
FBFBFBFBFBFBFBFBFAFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFA
FAFAFAFAF9F9F9F9F9F9FAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9
F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
>
<
02020202020202010101010101010101010101010101010101010101010101010101010101010101
01010000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000
>
<
000102030405060708090A0B0C0D0E0F10111213141516161718191A1B1C1D1E1F20212223242526
262728292A2B2C2D2E2F3030313233343536373838393A3B3C3D3E3F3F4041424344454546474849
4A4A4B4C4D4E4F4F5051525353545556575858595A5B5C5C5D5E5F5F606162636364656666676869
696A6B6C6C6D6E6F6F707172727374757576777778797A7A7B7C7C7D7E7F7F808181828383848585
8687878889898A8B8B8C8D8D8E8F8F9091919293939495959696979898999A9A9B9B9C9D9D9E9E9F
A0A0A1A1A2A3A3A4A4A5A5A6A7A7A8A8A9A9AAABABACACADADAEAEAFB0B0B1B1B2B2B3B3B4B4B5B5
B6B6B7B7B8B8B9BABABBBBBCBCBDBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C6C7C7C8C8C9
C9CACACACBCBCCCCCDCDCDCECECFCFD0D0D0D1D1D2D2D2D3D3D4D4D4D5D5D6D6D6D7D7D7D8D8D9D9
D9DADADADBDBDBDCDCDDDDDDDEDEDEDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6
E6E7E7E7E8E8E8E8E9E9E9EAEAEAEAEBEBEBEBECECECECEDEDEDEDEEEEEEEEEFEFEFEFF0F0F0F0F0
F1F1F1F1F2F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5F5F6F6F6F6F6F7F7F7F7F7F7F7F8F8F8
F8F8F8F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFDFD
FDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
A1A1A1A2A2A2A2A3A3A3A3A4A4A4A4A5A5A5A5A5A6A6A6A6A7A7A7A7A8A8A8A8A8A9A9A9A9AAAAAA
AAAAABABABABACACACACACADADADADADAEAEAEAEAEAFAFAFAFB0B0B0B0B0B1B1B1B1B1B2B2B2B2B2
B3B3B3B3B3B4B4B4B4B4B5B5B5B5B5B6B6B6B6B6B7B7B7B7B7B7B8B8B8B8B8B9B9B9B9B9B9BABABA
BABABBBBBBBBBBBBBCBCBCBCBCBDBDBDBDBDBDBEBEBEBEBEBEBFBFBFBFBFBFC0C0C0C0C0C0C1C1C1
C1C1C1C2C2C2C2C2C2C3C3C3C3C3C3C3C4C4C4C4C4C4C5C5C5C5C5C5C5C6C6C6C6C6C6C6C7C7C7C7
C7C7C7C8C8C8C8C8C8C8C9C9C9C9C9C9C9CACACACACACACACACBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CDCDCDCDCDCDCDCDCDCECECECECECECECECFCFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D1D1D1D1D1
D1D1D1D1D2D2D2D2D2D2D2D2D2D2D3D3D3D3D3D3D3D3D3D3D4D4D4D4D4D4D4D4D4D4D4D5D5D5D5D5
D5D5D5D5D5D5D6D6D6D6D6D6D6D6D6D6D6D6D6D7D7D7D7D7D7D7D7D7D7D7D7D7D8D8D8D8D8D8D8D8
D8D8D8D8D8D8D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9DADADADADADADADADADADADADADADADADADADB
DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDC
DCDCDCDCDCDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
DDDDDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDE
DEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDE
>
<
4B4B4B4A4A4A4A4A4949494949484848484847474747474646464646454545454544444444444443
43434343424242424241414141414140404040403F3F3F3F3F3F3E3E3E3E3E3E3D3D3D3D3D3D3C3C
3C3C3C3B3B3B3B3B3B3A3A3A3A3A3A39393939393939383838383838373737373737363636363636
35353535353535343434343434343333333333333232323232323231313131313131303030303030
30302F2F2F2F2F2F2F2E2E2E2E2E2E2E2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B
2A2A2A2A2A2A2A2A2929292929292929292828282828282828282727272727272727272626262626
26262626252525252525252525252424242424242424242423232323232323232323232222222222
2222222222222121212121212121212121212020202020202020202020201F1F1F1F1F1F1F1F1F1F
1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C
1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A1A1A
1A1A1A1A1A1A1A1A1A1A191919191919191919191919191919191919191919191919191919181818
18181818181818181818181818181818181818181818181818181818181818181818181818181717
17171717171717171717171717171717171717171717171717171717171717171717171717171717
171717171717171717171717171717171717
>
4 %_Br
[
0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 50 100 %_BS
%_0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 50 100 Bs
0.001678 0.745113 0.986419 0.000305 0.94902 0.396078 0.133333 2 50 80.117 %_BS
%_0.001678 0.745113 0.986419 0.000305 0.94902 0.396078 0.133333 2 50 80.117 Bs
0.017365 0.087495 0.969451 0 1 0.870588 0.090196 2 50 64 %_BS
%_0.017365 0.087495 0.969451 0 1 0.870588 0.090196 2 50 64 Bs
0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 50 47 %_BS
%_0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 50 47 Bs
0.001678 0.745113 0.986419 0.000305 0.94902 0.396078 0.133333 2 50 30 %_BS
%_0.001678 0.745113 0.986419 0.000305 0.94902 0.396078 0.133333 2 50 30 Bs
0.017365 0.087495 0.969451 0 1 0.870588 0.090196 2 50 15 %_BS
%_0.017365 0.087495 0.969451 0 1 0.870588 0.090196 2 50 15 Bs
0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 28 0 %_BS
%_0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 28 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple Radial)
(Purple Radial) 1 2 Bd
[
<
0000000102020303030404040506050606070808090A0A0B0C0B0C0C0D0E0E0F1010111112131313
13141515161617181819191A1A1B1C1C1D1D1E1E1F20202122232324252526262727282829292A2B
2B2C2C2D2D2E2E2F2F3030313132323333353436353737383839393A3A3B3B3C3C3D3E3F3F414141
434344444545464647474748484A4A4B4B4C4C4C4E4E4F4F50505051515252525353545454565657
575758585A5A5A5B5B5D5D5D5E5E5E5F5F6160606262626363636565656666666767676969696A6A
6A6B6C6C6D6D6D6E6E6E707070707171717373737474747476767676787878797979797B7B7B7B7C
7C7D7C7E7E7E7E808080808181818182838383838485858585868686868688888888888989898A8A
8B8B8B8B8B8B8D8D8D8D8D8D8E8E8E8E8E8E8E909090909090909191919191919191939393939393
93939394949494949494959595949496969696969696969696969696969696989898989898989898
98989898989898989898989898
>
<
00000001020303040506070809090B0B0D0E0F111213131314161618191A1B1C1C1E1F201F202122
24242527282929292B2C2D2E2F30303132343536373738393B3C3D3D3D3F40414242434445474647
48494B4A4C4D4E4F4F50515252535556575758595B5B5C5D5D5E5F60606163646465676668696B6B
6C6E6D6F7070717272737574767777797A7A7B7D7C7E7F7F81818283838486868787888A8A8B8B8C
8E8E8F8F9092929393959596979799999B9A9C9C9D9D9FA0A0A2A1A3A3A4A4A6A6A7A7A8A8AAAAAB
ABACACAEAEAFAFAFB1B1B2B2B4B4B5B5B7B7B7B8B8B9B9BBBBBBBCBCBDBDBDBEBFC0C0C0C1C1C2C2
C2C4C4C3C5C5C6C6C6C7C7C7C9C9C9CACACACCCCCCCDCDCDCFCECED0D0D0D0D1D1D1D2D2D2D2D4D4
D4D5D5D5D5D6D6D6D6D8D8D8D8D9D9D9D9D9DADADADADCDCDCDCDCDDDDDDDDDDDDDEDEDEDEDEDEDF
DFDFDFDFDFE1E1E1E1E1E1E1E1E2E2E2E2E2E2E2E2E2E3E3E3E3E3E3E3E3E3E3E3E3E3E5E5E5E5E5
E5E5E5E5E5E5E5E5E5E5E5E5E5
>
0
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000
>
<
FFFEFEFDFCFCFBFAFAF9F8F8F7F6F6F5F5F4F3F3F2F1F1F0EFEFEEEEEDECECEBEAEAE9E9E8E7E7E6
E6E5E4E4E3E3E2E1E1E0E0DFDFDEDDDDDCDCDBDBDAD9D9D8D8D7D7D6D5D5D4D4D3D3D2D2D1D1D0CF
CFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBC
BBBBBABAB9B9B8B8B7B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0B0AFAFAEAEAEADADACACACABABAA
AAAAA9A9A8A8A8A7A7A6A6A6A5A5A5A4A4A3A3A3A2A2A2A1A1A1A0A0A09F9F9F9E9E9E9D9D9D9C9C
9C9B9B9B9A9A9A999999989898989797979696969595959594949494939393929292929191919190
9090908F8F8F8F8E8E8E8E8D8D8D8D8D8C8C8C8C8B8B8B8B8B8A8A8A8A8A89898989898888888888
87878787878786868686868685858585858585848484848484848383838383838383828282828282
828282818181818181818181818181808080808080808080808080808080807F7F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F7F7F7F7F7F7F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAEAE9E8E7E6E5E4E3E2E1E0DFDEDDDDDCDBDA
D9D8D7D6D5D4D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C7C6C5C4C3C2C2C1C0BFBEBDBDBCBBBAB9B9B8
B7B6B5B5B4B3B2B1B1B0AFAEAEADACABAAAAA9A8A7A7A6A5A5A4A3A2A2A1A09F9F9E9D9D9C9B9A9A
9998989796969594949392929190908F8E8E8D8C8C8B8A8A89898887878685858484838282818180
7F7F7E7E7D7C7C7B7B7A7A7978787777767675757474737272717170706F6F6E6E6D6D6C6C6B6B6A
6A696968686767676666656564646363626262616160605F5F5F5E5E5D5D5D5C5C5B5B5B5A5A5959
5958585857575656565555555454545353535252525151515050504F4F4F4F4E4E4E4D4D4D4D4C4C
4C4B4B4B4B4A4A4A4A49494949484848484847474747464646464645454545454544444444444443
43434343434242424242424242414141414141414141404040404040404040404040403F3F3F3F3F
3F3F3F3F3F3F3F3F3F3F3F3F3F
>
<
FFFEFEFDFDFCFCFBFBFAFAF9F9F8F8F7F7F6F6F5F5F4F3F3F2F2F1F1F0F0EFEFEEEEEDEDEDECECEB
EBEAEAE9E9E8E8E7E7E6E6E5E5E4E4E3E3E3E2E2E1E1E0E0DFDFDEDEDEDDDDDCDCDBDBDADADAD9D9
D8D8D7D7D7D6D6D5D5D5D4D4D3D3D2D2D2D1D1D0D0D0CFCFCECECECDCDCDCCCCCBCBCBCACAC9C9C9
C8C8C8C7C7C6C6C6C5C5C5C4C4C4C3C3C3C2C2C1C1C1C0C0C0BFBFBFBEBEBEBDBDBDBCBCBCBBBBBB
BBBABABAB9B9B9B8B8B8B7B7B7B7B6B6B6B5B5B5B4B4B4B4B3B3B3B3B2B2B2B1B1B1B1B0B0B0B0AF
AFAFAEAEAEAEADADADADACACACACACABABABABAAAAAAAAA9A9A9A9A9A8A8A8A8A7A7A7A7A7A6A6A6
A6A6A5A5A5A5A5A4A4A4A4A4A3A3A3A3A3A3A2A2A2A2A2A1A1A1A1A1A1A0A0A0A0A0A0A09F9F9F9F
9F9F9F9E9E9E9E9E9E9E9D9D9D9D9D9D9D9D9C9C9C9C9C9C9C9C9C9B9B9B9B9B9B9B9B9B9B9B9A9A
9A9A9A9A9A9A9A9A9A9A999999999999999999999999999999999999999898989898989898989898
98989898989898989898989898
>
4 %_Br
[
0 0 0 0 1 1 1 2 30 63.1579 %_BS
%_0 0 0 0 1 1 1 2 30 63.1579 Bs
0.594476 0.896818 0 0.000122 0.498039 0.247059 0.596078 2 50 100 %_BS
%_0.594476 0.896818 0 0.000122 0.498039 0.247059 0.596078 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Super Soft Black Vignette)
(Super Soft Black Vignette) 1 3 Bd
[
0.707332
0.690944
0.645747
0.836149
0.07451
0.047059
0.054902
4 %_Br
0.707332
0.690944
0.645747
0.836149
0.07451
0.047059
0.054902
4 %_Br
[
0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 56.0729 57.4443 %_BS
%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 56.0729 57.4443 Bs
0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 31.8603 79.7713 %_BS
%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 31.8603 79.7713 Bs
0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 100 %_BS
%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 26)
(Unnamed gradient 26) 0 3 Bd
[
<
00000000000001010101010102020203030303030404040405050505050506060605050606060606
070808080808080909090908080809090909090909090A0A0A0A0A0A0A0A0B0B0B0B0A0B0B0A0A0A
0C0C0B0C0C0B0B0B0B0B0B0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0F0E0E0E
0E1010101010101010101010100F10101010100F0F0F0F0F0F111111111111111111111010101010
11111111111010101010101010101010101110101010101010101010121212121212121211111111
11111111121212121212121212121212121212121212121212121212121111111111111111111111
11111111111111121212121212121212121212121212121212121212121212121212121212121212
12121212121212121212121212121212121212121212121212121212121212121212121212121212
12121212121212121212121212121212121212121212121212121212121212121212121212121212
1212
>
<
0000000102030304050607060708090A0B0C0C0D0E1011111213141415161717181A1A1B1C1B1D1E
1E1F202021212223232424252527262727282829292A2A2B2B2C2C2E2D2F2E2E2F2F313131323234
33333434343636363737373838383939393B3B3B3B3C3C3C3D3D3D3D3E3E3E3E3F3F3F3F3F414141
41404241414141434343434343444444444444454545454545454546464646464646464747474747
4747474747484848484848484848484848484A4A4A4A4A4A4949494949494949494949494A4A4A4A
4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4C4C4C4C4C4C4C4C4C4C4C
4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C
4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C
4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C
4C4C
>
<
000002030506080A0C0E10131417191A1C1E20212426272A2D2D2F31333437383A3B3E3E41424346
47484A4C4D4F50515253565758595B5C5D6061626364666768696B6C6D6C6E707072737476757677
797A7A7B7D7E7E8081818284848687878889898B8B8C8E8E8F8F9090929293939494969697979898
989A999B9B9B9D9C9D9D9D9F9F9EA0A0A0A1A1A1A2A2A2A2A4A4A4A5A5A5A5A6A6A6A6A7A7A7A7A7
A9A9A9A9A9AAAAAAAAAAABABABABABABABADACACACACACACAEAEAEAEAEAEAEAEAEAFAFAFAFAFAFAF
AFAFAFAFB0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2
B2B2B2B2B2B2B2B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3
B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3
B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3
B3B3
>
0
<
FFFFFEFEFEFEFDFDFDFDFDFCFCFCFCFBFBFBFBFBFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7
F7F6F6F6F6F6F6F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2
F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEF
EFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECEC
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEC
ECEC
>
<
FFFEFDFCFBFAF9F8F7F6F5F5F4F3F2F1F0EFEFEEEDECEBEBEAE9E8E8E7E6E5E5E4E3E3E2E1E1E0DF
DFDEDDDDDCDCDBDADAD9D9D8D8D7D7D6D6D5D5D4D4D3D3D2D2D1D1D0D0CFCFCFCECECDCDCDCCCCCB
CBCBCACACAC9C9C9C8C8C8C7C7C7C6C6C6C5C5C5C5C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C1C0C0C0
C0C0BFBFBFBFBFBEBEBEBEBEBEBDBDBDBDBDBDBCBCBCBCBCBCBCBCBBBBBBBBBBBBBBBBBABABABABA
BABABABABAB9B9B9B9B9B9B9B9B9B9B9B9B9B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B7B7B7B7
B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B6B6B6B6B6B6B6B6B6B6B6
B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6
B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6
B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6
B6B6
>
<
FFFDFBF9F7F5F3F1EFEDEBE9E7E5E3E2E0DEDCDBD9D7D6D4D2D1CFCECCCBC9C8C6C5C3C2C0BFBEBC
BBBAB8B7B6B4B3B2B1B0AEADACABAAA9A8A6A5A4A3A2A1A09F9E9D9C9B9B9A999897969594949392
9190908F8E8D8D8C8B8B8A89898887878685858484838282818180807F7F7E7E7D7D7C7C7B7B7A7A
7A7979787878777776767675757574747473737372727272717171707070706F6F6F6F6E6E6E6E6E
6D6D6D6D6D6C6C6C6C6C6B6B6B6B6B6B6B6A6A6A6A6A6A6A69696969696969696968686868686868
68686868676767676767676767676767676767666666666666666666666666666666666666666666
66666666666666656565656565656565656565656565656565656565656565656565656565656565
65656565656565656565656565656565656565656565656565656565656565656565656565656565
65656565656565656565656565656565656565656565656565656565656565656565656565656565
6565
>
4 %_Br
0
0
0
0
1
1
1
4 %_Br
[
0.068635 0.296483 0.702296 0 0.92549 0.713726 0.396078 2 50 100 %_BS
%_0.068635 0.296483 0.702296 0 0.92549 0.713726 0.396078 2 50 100 Bs
1 0 13 45 %_BS
%_1 0 13 45 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 30)
(Unnamed gradient 30) 1 2 Bd
[
<
0E0E0E0E0D0F0E0E0E0E0E0E0F0F0F0F0E0E0F0F0F0E0E0F0F0F0F0F111110101011111111101111
1111121212
>
<
18181A1A1B1B1C1E1E1F2121222325252729292B2B2C2E2F313234363737393A3C3D3E4041434445
4648494A4C
>
<
CFCFCFCECECFCDCDCCCCCBCACAC9C9C8C8C8C7C6C5C5C3C3C2C3C2C2C2C2C0BEBEBCBCBABAB9B9B8
B7B6B5B5B3
>
0
<
F4F4F4F4F4F3F3F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEDED
EDEDECECEC
>
<
DADAD9D9D8D8D7D6D6D5D4D4D3D2D1D1D0CFCECDCDCCCBCAC9C8C7C6C5C5C4C3C2C1C0BFBEBDBCBB
BAB9B8B7B6
>
<
5050505151515252535353545455555656565757585859595A5A5B5B5C5C5D5E5E5F5F6060616162
6363646465
>
4 %_Br
[
0.054902 0.094209 0.812833 0 0.956863 0.854902 0.313726 2 57.3034 0 %_BS
%_0.054902 0.094209 0.812833 0 0.956863 0.854902 0.313726 2 57.3034 0 Bs
0.068635 0.296483 0.702296 0 0.92549 0.713726 0.396078 2 50 100 %_BS
%_0.068635 0.296483 0.702296 0 0.92549 0.713726 0.396078 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 31)
(Unnamed gradient 31) 0 3 Bd
[
<
12121211111111101111111110101010110F0F0F0F0F0F0F0E0E0E0F0F0F0F0E0E0E0E0F0F0F0F0F
0F0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E
0E0E0E0E0E
>
<
4C4A49484645444341403E3D3C3A3A39373634343231312F2E2E2C2B2B2929292927272525232322
222121211F1F1F1E1E1E1E1C1C1C1C1B1B1B1B1B1A1A1A1A1A1A1A1A1A1818181818181818181818
1818181818
>
<
B3B5B5B6B7B8B9B9BABABCBCBEBEC0C0C2C1C2C2C3C2C2C3C3C3C5C5C6C7C7C8C8C8C8C9C9C9CACA
CACACACBCCCCCCCCCDCDCDCDCDCDCDCFCECECECECECECECECECFCFCFCFCFCFCFCFCFCFCFCFCFCFCF
CFCFCFCFCF
>
0
<
ECECECEDEDEDEDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F0F0F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2
F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4
F4F4F4F4F4
>
<
B6B7B8B9BABBBCBDBEBFC0C1C2C3C3C4C5C6C7C7C8C9C9CACBCBCCCDCDCECECFCFD0D0D1D1D2D2D3
D3D4D4D4D5D5D5D6D6D6D6D7D7D7D7D8D8D8D8D8D9D9D9D9D9D9D9D9D9DADADADADADADADADADADA
DADADADADA
>
<
656464636362616160605F5F5E5E5D5D5C5C5B5B5A5A5A5959595858575757565656565555555454
54545453535353535252525252525251515151515151515151505050505050505050505050505050
5050505050
>
4 %_Br
<
0E0E0D0E0E0E0E0F0F0F0E0F0F0F0E0E0F0F0F0F11101010101111111011111111121212
>
<
181A1B1C1E1F212223252728292B2C2E2F31343637393A3C3D3E40414344454648494A4C
>
<
CFCECECDCDCCCACAC9C9C8C7C7C5C5C3C2C2C2C2C2C0C0BEBEBCBABAB9B9B8B7B6B5B5B3
>
0
<
F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F1F0F0F0F0EFEFEFEFEFEEEEEEEEEDEDEDEDECECEC
>
<
DAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6
>
<
505151525253545455555657575858595A5A5B5B5C5D5D5E5E5F60606161626363646465
>
4 %_Br
[
0.054902 0.094209 0.812833 0 0.956863 0.854902 0.313726 2 50 100 %_BS
%_0.054902 0.094209 0.812833 0 0.956863 0.854902 0.313726 2 50 100 Bs
0.068635 0.296483 0.702296 0 0.92549 0.713726 0.396078 2 23.7288 50 %_BS
%_0.068635 0.296483 0.702296 0 0.92549 0.713726 0.396078 2 23.7288 50 Bs
0.054902 0.094209 0.812833 0 0.956863 0.854902 0.313726 2 50 0 %_BS
%_0.054902 0.094209 0.812833 0 0.956863 0.854902 0.313726 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Laguna)
(Laguna) 0 3.1914 84.1563 84.791 [
%AI3_Tile
(0 O 0 R 0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa
 0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
42.0781 30.3906 m
12.2227 12.8779 9.0488 12.4082 V
7.2871 14.1709 0 30.3906 Y
13.1641 20.5186 29.1484 23.3389 42.0781 30.3906 C
f
42.0781 57.5908 m
12.2227 40.0781 9.0488 39.6094 V
7.2871 41.3711 0 57.5908 Y
13.1641 47.7178 29.1484 50.5391 42.0781 57.5908 C
f
42.0781 84.791 m
12.2227 67.2773 9.0488 66.8096 V
7.2871 68.5703 0 84.791 Y
13.1641 74.918 29.1484 77.7402 42.0781 84.791 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.594476 0.896818 0 0.000122 0.498039 0.247059 0.596078 Xa
 0.594476 0.896818 0 0.000122 0.498039 0.247059 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
84.1563 30.3906 m
54.3008 12.8779 51.127 12.4082 V
49.3652 14.1709 42.0781 30.3906 Y
55.2422 20.5186 71.2266 23.3389 84.1563 30.3906 C
f
84.1563 57.5908 m
54.3008 40.0781 51.127 39.6094 V
49.3652 41.3711 42.0781 57.5908 Y
55.2422 47.7178 71.2266 50.5391 84.1563 57.5908 C
f
84.1563 84.791 m
54.3008 67.2773 51.127 66.8096 V
49.3652 68.5703 42.0781 84.791 Y
55.2422 74.918 71.2266 77.7402 84.1563 84.791 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 Xa
 0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
21.0391 33.582 m
19.2773 33.582 17.8477 32.1523 17.8477 30.3906 c
17.8477 28.6289 19.2773 27.2002 21.0391 27.2002 c
22.8008 27.2002 24.2285 28.6289 24.2285 30.3906 c
24.2285 32.1523 22.8008 33.582 21.0391 33.582 c
f
21.0391 6.3818 m
19.2773 6.3818 17.8477 4.9531 17.8477 3.1914 c
17.8477 1.4287 19.2773 0 21.0391 0 c
22.8008 0 24.2285 1.4287 24.2285 3.1914 c
24.2285 4.9531 22.8008 6.3818 21.0391 6.3818 c
f
21.0391 60.7822 m
19.2773 60.7822 17.8477 59.3525 17.8477 57.5908 c
17.8477 55.8291 19.2773 54.3994 21.0391 54.3994 c
22.8008 54.3994 24.2285 55.8291 24.2285 57.5908 c
24.2285 59.3525 22.8008 60.7822 21.0391 60.7822 c
f
21.0391 87.9824 m
19.2773 87.9824 17.8477 86.5547 17.8477 84.791 c
17.8477 83.0283 19.2773 81.5996 21.0391 81.5996 c
22.8008 81.5996 24.2285 83.0283 24.2285 84.791 c
24.2285 86.5547 22.8008 87.9824 21.0391 87.9824 c
f
63.1172 33.582 m
61.3555 33.582 59.9258 32.1523 59.9258 30.3906 c
59.9258 28.6289 61.3555 27.2002 63.1172 27.2002 c
64.8789 27.2002 66.3066 28.6289 66.3066 30.3906 c
66.3066 32.1523 64.8789 33.582 63.1172 33.582 c
f
63.1172 6.3818 m
61.3555 6.3818 59.9258 4.9531 59.9258 3.1914 c
59.9258 1.4287 61.3555 0 63.1172 0 c
64.8789 0 66.3066 1.4287 66.3066 3.1914 c
66.3066 4.9531 64.8789 6.3818 63.1172 6.3818 c
f
63.1172 60.7822 m
61.3555 60.7822 59.9258 59.3525 59.9258 57.5908 c
59.9258 55.8291 61.3555 54.3994 63.1172 54.3994 c
64.8789 54.3994 66.3066 55.8291 66.3066 57.5908 c
66.3066 59.3525 64.8789 60.7822 63.1172 60.7822 c
f
63.1172 87.9824 m
61.3555 87.9824 59.9258 86.5547 59.9258 84.791 c
59.9258 83.0283 61.3555 81.5996 63.1172 81.5996 c
64.8789 81.5996 66.3066 83.0283 66.3066 84.791 c
66.3066 86.5547 64.8789 87.9824 63.1172 87.9824 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.594476 0.896818 0 0.000122 0.498039 0.247059 0.596078 Xa
 0.594476 0.896818 0 0.000122 0.498039 0.247059 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
0 3.1914 m
29.8535 20.7041 33.0273 21.1738 V
34.79 19.4111 42.0781 3.1914 Y
28.9141 13.0645 12.9277 10.2422 0 3.1914 C
f
0 30.3906 m
29.8535 47.9033 33.0273 48.374 V
34.79 46.6104 42.0781 30.3906 Y
28.9141 40.2646 12.9277 37.4434 0 30.3906 C
f
0 57.5908 m
29.8535 75.1035 33.0273 75.5752 V
34.79 73.8105 42.0781 57.5908 Y
28.9141 67.4648 12.9277 64.6436 0 57.5908 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa
 0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
42.0781 3.1914 m
71.9316 20.7041 75.1055 21.1738 V
76.8691 19.4111 84.1563 3.1914 Y
70.9922 13.0645 55.0059 10.2422 42.0781 3.1914 C
f
42.0781 30.3906 m
71.9316 47.9033 75.1055 48.374 V
76.8691 46.6104 84.1563 30.3906 Y
70.9922 40.2646 55.0059 37.4434 42.0781 30.3906 C
f
42.0781 57.5908 m
71.9316 75.1035 75.1055 75.5752 V
76.8691 73.8105 84.1563 57.5908 Y
70.9922 67.4648 55.0059 64.6436 42.0781 57.5908 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(New Pattern 1)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7759 7327 m
-7759 7268.0254 L
-7743.4902 7268.0254 L
-7743.4902 7327 L
-7759 7327 L
n
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
10 M-7759 7278.0586 m
-7759 7277.5742 L
-7743.4878 7277.5742 L
-7743.4878 7278.0586 L
-7759 7278.0586 L
f
-7759 7295.3838 m
-7759 7294.8965 L
-7743.4878 7294.8965 L
-7743.4878 7295.3838 L
-7759 7295.3838 L
f
-7758.9995 7280.3682 m
-7758.9995 7279.6494 L
-7743.4878 7279.6494 L
-7743.4878 7280.3682 L
-7758.9995 7280.3682 L
f
-7758.9995 7290.6328 m
-7758.9995 7289.9121 L
-7743.4878 7289.9121 L
-7743.4878 7290.6328 L
-7758.9995 7290.6328 L
f
-7758.9995 7288.4951 m
-7758.9995 7287.4141 L
-7743.4878 7287.4141 L
-7743.4878 7288.4951 L
-7758.9995 7288.4951 L
f
-7758.9995 7282.9395 m
-7758.9995 7281.8594 L
-7743.4878 7281.8594 L
-7743.4878 7282.9395 L
-7758.9995 7282.9395 L
f
-7758.9995 7285.9854 m
-7758.9995 7284.3345 L
-7743.4878 7284.3345 L
-7743.4878 7285.9854 L
-7758.9995 7285.9854 L
f
*u
1 D
-7743.4888 7294.1455 m
-7758.9995 7294.1455 L
-7758.9995 7293.6816 L
-7758.6514 7293.6816 L
-7758.6514 7292.4844 L
-7758.9995 7292.4844 L
-7758.9995 7292.0215 L
-7743.4888 7292.0215 L
-7743.4888 7292.4844 L
-7743.8408 7292.4844 L
-7743.8408 7293.6846 L
-7743.4888 7293.6846 L
-7743.4888 7294.1455 L
f
0 D
-7755.1255 7293.6846 m
-7754.4199 7293.6846 L
-7754.4199 7292.4844 L
-7755.1255 7292.4844 L
-7755.1255 7293.6846 L
f
-7755.8306 7292.4844 m
-7756.5361 7292.4844 L
-7756.5361 7293.6846 L
-7755.8306 7293.6846 L
-7755.8306 7292.4844 L
f
-7753.7144 7293.6846 m
-7753.0098 7293.6846 L
-7753.0098 7292.4844 L
-7753.7144 7292.4844 L
-7753.7144 7293.6846 L
f
-7752.3042 7293.6846 m
-7751.5986 7293.6846 L
-7751.5986 7292.4844 L
-7752.3042 7292.4844 L
-7752.3042 7293.6846 L
f
-7750.8936 7293.6846 m
-7750.1885 7293.6846 L
-7750.1885 7292.4844 L
-7750.8936 7292.4844 L
-7750.8936 7293.6846 L
f
-7749.4834 7293.6846 m
-7748.7778 7293.6846 L
-7748.7778 7292.4844 L
-7749.4834 7292.4844 L
-7749.4834 7293.6846 L
f
-7748.0718 7293.6846 m
-7747.3672 7293.6846 L
-7747.3672 7292.4844 L
-7748.0718 7292.4844 L
-7748.0718 7293.6846 L
f
-7746.6616 7293.6846 m
-7745.9575 7293.6846 L
-7745.9575 7292.4844 L
-7746.6616 7292.4844 L
-7746.6616 7293.6846 L
f
-7745.2515 7293.6846 m
-7744.5454 7293.6846 L
-7744.5454 7292.4844 L
-7745.2515 7292.4844 L
-7745.2515 7293.6846 L
f
-7757.9463 7293.6846 m
-7757.2407 7293.6846 L
-7757.2407 7292.4844 L
-7757.9463 7292.4844 L
-7757.9463 7293.6846 L
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 2)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7759 7326.9985 m
-7759 7268.0225 L
-7700.0254 7268.0225 L
-7700.0254 7326.9985 L
-7759 7326.9985 L
n
*u
1 D
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
10 M-7732.4902 7286.4453 m
-7730.9678 7287.9678 -7731.5166 7290.9834 -7733.7153 7293.1836 c
-7735.9146 7295.3809 -7738.9302 7295.9297 -7740.4526 7294.4082 c
-7741.9751 7292.8857 -7741.4263 7289.8682 -7739.2271 7287.6709 c
-7737.0288 7285.4717 -7734.0127 7284.9238 -7732.4902 7286.4453 c
f
0 D
-7733.1519 7287.0781 m
-7734.5728 7285.6582 -7737.2241 7286.0059 -7739.0728 7287.8545 c
-7740.9214 7289.7031 -7741.2695 7292.3545 -7739.8486 7293.7754 c
-7738.4282 7295.1953 -7735.7769 7294.8486 -7733.9282 7293 c
-7732.0786 7291.1504 -7731.7314 7288.5 -7733.1519 7287.0781 c
f
*U
-7750.5327 7277.2607 m
-7749.7969 7277.1309 l
-7749.71 7276.4385 l
-7744.9458 7281.9814 l
-7750.5327 7277.2607 l
f
-7739.9409 7274.3145 m
-7740.1235 7272.7266 L
-7739.7002 7272.4512 -7739.3184 7272.1309 -7738.9346 7271.8145 C
-7738.6841 7274.9189 L
-7738.3535 7274.9453 L
-7738.4678 7271.4395 L
-7738.0503 7271.1162 -7737.6089 7270.8213 -7737.0913 7270.6152 C
-7737.1235 7275.7266 L
-7736.9063 7275.7734 L
-7736.5938 7270.4521 L
-7736.2007 7270.3516 -7735.7632 7270.3008 -7735.2642 7270.3213 C
-7736.0376 7279.4463 L
-7734.7666 7270.3594 L
-7734.3359 7270.4063 -7733.96 7270.4746 -7733.6289 7270.5625 C
-7734.4551 7277.3345 L
-7734.2998 7277.2109 L
-7733.1465 7270.7148 L
-7732.7471 7270.8633 -7732.4238 7271.0449 -7732.1528 7271.25 C
-7732.7334 7276.0762 L
-7732.4688 7275.9414 L
-7731.7114 7271.6426 L
-7731.2256 7272.1494 -7730.9194 7272.7344 -7730.5127 7273.2822 C
-7731.0713 7275.3496 L
-7730.6001 7275.1709 L
-7730.1338 7273.7383 L
-7729.8096 7274.0825 -7729.4063 7274.3945 -7728.8394 7274.6406 c
-7728.8506 7274.6357 -7727.7393 7274.6826 -7727.7466 7274.6533 c
-7727.7959 7274.4375 -7728.6655 7274.2998 -7728.6455 7274.3105 c
-7731.2974 7272.8965 -7730.3232 7270.3301 -7734.8735 7269.8735 c
-7738.4072 7269.5176 -7739.2515 7272.75 -7742.0962 7273.0615 c
-7742.1152 7273.0625 -7742.7632 7273.3174 -7742.8442 7273.4502 C
-7742.8486 7273.6255 -7742.4595 7273.5186 -7742.2417 7273.4766 c
-7741.6001 7273.3477 -7741.0498 7273.2402 -7740.5728 7272.9912 C
-7740.4023 7274.1914 L
-7739.9409 7274.3145 L
f
-7752.6626 7286.9463 m
-7754.2495 7286.7637 L
-7754.5254 7287.1865 -7754.8462 7287.5693 -7755.1626 7287.9521 C
-7752.0576 7288.2031 L
-7752.0322 7288.5352 L
-7755.5376 7288.4189 L
-7755.8608 7288.8369 -7756.1558 7289.2783 -7756.3618 7289.7959 C
-7751.2505 7289.7637 L
-7751.2031 7289.9814 L
-7756.5249 7290.2935 L
-7756.6265 7290.6865 -7756.6758 7291.1255 -7756.6558 7291.6235 C
-7747.5298 7290.8496 L
-7756.6177 7292.1201 L
-7756.5713 7292.5498 -7756.5024 7292.9277 -7756.4146 7293.2578 C
-7749.6426 7292.4316 L
-7749.7656 7292.5869 L
-7756.2622 7293.7402 L
-7756.1138 7294.1406 -7755.9312 7294.4629 -7755.7271 7294.7344 C
-7750.9014 7294.1533 L
-7751.0352 7294.4185 L
-7755.3335 7295.1768 L
-7754.8271 7295.6621 -7754.2417 7295.9688 -7753.6943 7296.3755 C
-7751.6274 7295.8145 L
-7751.8066 7296.2871 L
-7753.2383 7296.7524 L
-7752.8945 7297.0762 -7752.5825 7297.4814 -7752.3359 7298.0479 c
-7752.3408 7298.0361 -7752.2935 7299.1484 -7752.3242 7299.1416 c
-7752.54 7299.0908 -7752.6768 7298.2227 -7752.6675 7298.2412 c
-7754.0806 7295.5898 -7756.6475 7296.5645 -7757.1045 7292.0127 c
-7757.4595 7288.4805 -7754.2271 7287.6367 -7753.9165 7284.7915 c
-7753.9136 7284.7725 -7753.6602 7284.1255 -7753.5273 7284.0435 C
-7753.3535 7284.0381 -7753.4575 7284.4277 -7753.5015 7284.6455 c
-7753.6294 7285.2871 -7753.7368 7285.8369 -7753.9858 7286.3145 C
-7752.7842 7286.4854 L
-7752.6626 7286.9463 L
f
-7723.0127 7285.2285 m
-7718.2495 7286.6348 -7716.9502 7288.9209 -7716.9746 7290.5654 C
-7716.5366 7287.4595 -7714.6558 7289.8652 -7714.1313 7291.0029 C
-7715.0498 7287.4165 -7712.4463 7290.5439 -7712.2715 7290.8496 C
-7713.2593 7287.4063 -7720.3955 7284.9404 -7723.0127 7285.2285 C
f
-7728.9775 7284.2197 m
-7732.3242 7278.1738 -7729.4233 7276.5703 -7728.7354 7276.3774 c
-7728.9233 7276.4287 -7729.3135 7277.2949 -7729.2026 7277.6367 C
-7728.9482 7277.0928 -7728.4111 7276.8193 -7727.8994 7276.6094 C
-7729.1626 7277.6094 -7729.6943 7280.4111 -7728.9082 7283.9512 c
-7728.9775 7284.2197 l
f
-7731.2222 7284.5254 m
-7733.6035 7282.1016 -7735.0474 7281.2773 -7733.1035 7278.6685 c
-7733.2202 7278.8262 -7733.3838 7279.7168 -7733.1758 7280.0117 C
-7733.0942 7279.4185 -7732.6626 7278.9985 -7732.2358 7278.6455 C
-7733.9395 7282.0732 -7731.2222 7284.5254 y
f
-7723.6577 7283.4199 m
-7723.9897 7281.5615 -7722.4922 7280.4688 -7720.8662 7279.8496 C
-7721.4194 7279.8662 -7722.0176 7279.9307 -7722.4482 7280.3496 C
-7722.4302 7279.9893 -7721.7598 7279.3184 -7721.5654 7279.3359 c
-7722.2778 7279.2744 -7724.4951 7278.8447 -7723.8408 7283.6191 c
-7723.6577 7283.4199 l
f
-7720.5576 7284.1133 m
-7720.1538 7282.7266 -7717.9502 7282.4595 V
-7718.5342 7282.2871 -7719.2314 7282.3662 -7719.6626 7282.7852 C
-7719.6455 7282.4258 -7718.8408 7281.7178 -7718.6479 7281.7568 c
-7720.3921 7281.4141 -7720.6782 7283.9072 y
-7720.5576 7284.1133 l
f
-7717.1152 7285.3213 m
-7716.8408 7284.6274 -7716.0942 7284.1201 -7715.2646 7284 C
-7715.6475 7283.8975 -7716.0854 7283.9873 -7716.4297 7284.3242 C
-7716.4175 7284.0352 -7715.7744 7283.4863 -7715.6182 7283.5024 c
-7717.2729 7283.3496 -7717.1152 7285.3213 Y
f
-7726.5562 7283.4629 m
-7726.6504 7280.1309 -7725.4175 7278.4541 -7723.9761 7277.6514 C
-7724.5264 7277.7148 -7725.1162 7277.8271 -7725.5103 7278.2793 C
-7725.5249 7277.9189 -7724.9087 7277.1953 -7724.7134 7277.1973 c
-7725.4287 7277.1943 -7728.0034 7277.0898 -7726.7866 7283.7109 c
-7726.5562 7283.4629 l
f
-7741.7944 7304.0137 m
-7740.3882 7308.7754 -7738.1006 7310.0762 -7736.4575 7310.0518 C
-7739.5635 7310.4893 -7737.1567 7312.3701 -7736.0195 7312.8945 C
-7739.6074 7311.9766 -7736.4795 7314.5791 -7736.1729 7314.7549 C
-7739.6162 7313.7676 -7742.0825 7306.6309 -7741.7944 7304.0137 C
f
-7742.8022 7298.0488 m
-7748.8481 7294.7002 -7750.4521 7297.6025 -7750.6465 7298.2915 c
-7750.5938 7298.1025 -7749.7295 7297.7119 -7749.3857 7297.8242 C
-7749.9297 7298.0781 -7750.2017 7298.6152 -7750.4126 7299.1274 C
-7749.4126 7297.8633 -7746.6113 7297.3345 -7743.0703 7298.1182 c
-7742.8022 7298.0488 l
f
-7742.4966 7295.8037 m
-7744.9214 7293.4229 -7745.7446 7291.9805 -7748.3535 7293.9229 c
-7748.1968 7293.8066 -7747.3057 7293.6426 -7747.0112 7293.8496 C
-7747.6064 7293.9307 -7748.0239 7294.3633 -7748.3774 7294.79 C
-7744.9487 7293.0879 -7742.4966 7295.8037 y
f
-7743.6025 7303.3682 m
-7745.4614 7303.0361 -7746.5537 7304.5342 -7747.1729 7306.1602 C
-7747.1558 7305.6074 -7747.0918 7305.0098 -7746.6719 7304.5791 C
-7747.0327 7304.5957 -7747.7041 7305.2656 -7747.6865 7305.4609 c
-7747.7485 7304.75 -7748.1777 7302.5313 -7743.4038 7303.1846 c
-7743.6025 7303.3682 l
f
-7742.9087 7306.4688 m
-7744.2959 7306.8735 -7744.5649 7309.0762 V
-7744.7354 7308.4922 -7744.6558 7307.7949 -7744.2368 7307.3633 C
-7744.5967 7307.3809 -7745.3042 7308.1865 -7745.2666 7308.3789 c
-7745.6079 7306.6348 -7743.1152 7306.3477 y
-7742.9087 7306.4688 l
f
-7741.7007 7309.9111 m
-7742.3955 7310.1846 -7742.9009 7310.9307 -7743.0234 7311.7617 C
-7743.1265 7311.3789 -7743.0337 7310.9404 -7742.6982 7310.5967 C
-7742.9873 7310.6104 -7743.5361 7311.2524 -7743.5215 7311.4082 c
-7743.6729 7309.7529 -7741.7007 7309.9111 Y
f
-7743.5591 7300.4697 m
-7746.8921 7300.3774 -7748.5679 7301.6094 -7749.3696 7303.0508 C
-7749.3081 7302.5024 -7749.1953 7301.9102 -7748.7422 7301.5146 C
-7749.1035 7301.5029 -7749.8262 7302.1162 -7749.8257 7302.3135 c
-7749.8286 7301.5967 -7749.9321 7299.0234 -7743.3115 7300.2402 c
-7743.5591 7300.4697 l
f
u
u
-7753.0234 7276.7095 m
-7753.2856 7276.1953 -7753.0479 7275.6689 -7751.2905 7275.6504 C
-7752.0322 7274.9082 L
-7753.9927 7274.9941 -7754.3423 7276.1777 -7754.1665 7276.7578 c
-7753.9736 7277.3906 -7753.5488 7277.9023 -7753.2085 7278.25 C
-7754.2031 7278.6113 -7754.2505 7279.3916 -7754.0479 7279.79 c
-7753.7729 7280.3345 -7753.2998 7280.7524 -7752.9487 7281.0176 C
-7753.9448 7281.3774 -7753.8623 7282.1133 -7753.6074 7282.4575 c
-7753.2856 7282.8906 -7752.8174 7283.2031 -7752.4751 7283.4023 C
-7753.4585 7283.8301 -7753.3022 7284.5234 -7753.0239 7284.8154 c
-7752.6929 7285.1665 -7752.2466 7285.3916 -7751.9199 7285.5322 C
-7752.7695 7286.0225 -7752.5537 7286.6318 -7752.2715 7286.8633 c
-7751.9458 7287.1318 -7751.5342 7287.2842 -7751.23 7287.3774 C
-7751.9395 7287.9082 -7751.6802 7288.4297 -7751.4014 7288.6074 c
-7751.0698 7288.8174 -7750.6714 7288.9082 -7750.3857 7288.9541 C
-7750.9673 7289.5098 -7750.6768 7289.9482 -7750.4097 7290.0762 c
-7749.9326 7290.3037 -7749.3511 7290.2764 -7749.1768 7290.2813 c
-7748.6343 7290.2959 -7747.8838 7290.1255 -7747.4272 7290.0703 c
-7746.3442 7289.9434 -7742.5718 7289.2754 -7740.9023 7289.4385 C
-7741.1704 7289.2285 -7741.1714 7289.2285 v
-7743.1304 7289.0415 -7746.0479 7289.4678 -7747.1294 7289.5957 c
-7747.9839 7289.6953 -7749.1182 7289.9951 -7749.9951 7289.7295 c
-7750.2593 7289.6494 -7750.3696 7289.4453 -7749.8906 7289.0215 C
-7749.3135 7289.0732 -7748.5737 7289.0024 -7748.1118 7289.0039 c
-7746.9009 7289.0098 -7742.6504 7288.7832 -7740.8311 7289.1895 C
-7741.0986 7288.9209 -7741.0986 7288.9199 v
-7743.2344 7288.4492 -7746.5098 7288.5254 -7747.7202 7288.5186 c
-7748.6758 7288.5137 -7749.9673 7288.6914 -7750.8984 7288.2783 c
-7751.1777 7288.1563 -7751.2729 7287.9185 -7750.6953 7287.5166 C
-7750.0615 7287.6602 -7749.2153 7287.6816 -7748.6968 7287.7471 c
-7747.3623 7287.9185 -7742.6431 7288.2441 -7740.6929 7288.9375 C
-7740.9502 7288.6064 -7740.9512 7288.6064 v
-7743.2422 7287.7969 -7746.8647 7287.4375 -7748.1992 7287.2656 c
-7749.2529 7287.1309 -7750.7007 7287.1504 -7751.6719 7286.5703 c
-7751.9624 7286.3975 -7752.0352 7286.1235 -7751.3481 7285.7578 C
-7750.6704 7285.9985 -7749.7578 7286.1328 -7749.2026 7286.2754 c
-7747.7534 7286.6445 -7742.5938 7287.6426 -7740.5361 7288.6689 C
-7740.7754 7288.2695 -7740.7759 7288.2695 v
-7743.1934 7287.0664 -7747.1392 7286.1797 -7748.5879 7285.8105 c
-7749.7314 7285.5186 -7751.3311 7285.3457 -7752.3242 7284.5723 c
-7752.6182 7284.3457 -7752.6626 7284.0352 -7751.8745 7283.7305 C
-7751.1606 7284.0825 -7750.1802 7284.3535 -7749.5889 7284.5845 c
-7748.0415 7285.1865 -7742.4863 7286.9863 -7740.3564 7288.3984 C
-7740.5654 7287.9258 -7740.5674 7287.9248 v
-7743.0698 7286.2695 -7747.3018 7284.7578 -7748.8486 7284.1543 c
-7750.0703 7283.6777 -7751.8115 7283.2695 -7752.8018 7282.2842 c
-7753.0786 7282.0098 -7753.1006 7281.6846 -7752.3384 7281.4551 C
-7751.5942 7281.9404 -7750.5234 7282.3584 -7749.8926 7282.6895 c
-7748.2446 7283.5518 -7742.2441 7286.2246 -7740.1055 7288.0957 C
-7740.2407 7287.5186 -7740.2417 7287.5186 v
-7742.7559 7285.3281 -7747.2954 7283.1274 -7748.9438 7282.2617 c
-7750.2456 7281.5801 -7752.1602 7280.9248 -7753.0815 7279.6709 c
-7753.3135 7279.3555 -7753.2974 7279.0127 -7752.6118 7278.8105 C
-7751.8594 7279.4668 -7750.6641 7280.0762 -7749.9888 7280.5322 c
-7748.27 7281.6953 -7741.9126 7285.3774 -7739.8442 7287.7637 C
-7740.1377 7286.9902 -7740.1382 7286.9893 v
-7742.5718 7284.1934 -7747.0825 7281.2842 -7748.8018 7280.1221 c
-7750.1582 7279.2031 -7752.2295 7278.2607 -7753.0234 7276.7095 c
f
U
u
-7750.2329 7273.9185 m
-7750.7446 7273.6543 -7751.2715 7273.8926 -7751.2905 7275.6504 C
-7752.0313 7274.9082 L
-7751.9473 7272.9473 -7750.7622 7272.5977 -7750.1826 7272.7754 c
-7749.5503 7272.9658 -7749.0386 7273.3916 -7748.6919 7273.7324 C
-7748.3306 7272.7373 -7747.5498 7272.6904 -7747.1504 7272.8906 c
-7746.6064 7273.1685 -7746.1895 7273.6406 -7745.9224 7273.9922 C
-7745.5649 7272.9951 -7744.8281 7273.0781 -7744.4834 7273.3345 c
-7744.0498 7273.6543 -7743.7368 7274.1235 -7743.5376 7274.4648 C
-7743.1113 7273.4824 -7742.4175 7273.6387 -7742.1255 7273.9185 c
-7741.7759 7274.2485 -7741.5488 7274.6943 -7741.4082 7275.0215 C
-7740.9185 7274.1719 -7740.3086 7274.3877 -7740.0767 7274.6689 c
-7739.8086 7274.9951 -7739.6553 7275.4053 -7739.5649 7275.7109 C
-7739.0327 7275.0024 -7738.5103 7275.2607 -7738.3345 7275.5391 c
-7738.1235 7275.8701 -7738.0322 7276.2695 -7737.9858 7276.5537 C
-7737.4312 7275.9727 -7736.9912 7276.2637 -7736.8638 7276.5313 c
-7736.6367 7277.0078 -7736.6655 7277.5898 -7736.6592 7277.7637 c
-7736.6431 7278.3066 -7736.8159 7279.0566 -7736.8696 7279.5137 c
-7736.9966 7280.5957 -7737.6655 7284.3682 -7737.5034 7286.0381 C
-7737.7129 7285.7695 l
-7737.8999 7283.8105 -7737.4727 7280.8926 -7737.3457 7279.8105 c
-7737.2446 7278.9575 -7736.9458 7277.8223 -7737.2114 7276.9453 c
-7737.2915 7276.6816 -7737.4946 7276.5703 -7737.9199 7277.0508 C
-7737.8682 7277.6279 -7737.9395 7278.3662 -7737.9375 7278.8281 c
-7737.9302 7280.04 -7738.1567 7284.29 -7737.7524 7286.1094 C
-7738.0195 7285.8428 -7738.0195 7285.8418 v
-7738.4922 7283.7061 -7738.4155 7280.4316 -7738.4214 7279.2207 c
-7738.4272 7278.2646 -7738.25 7276.9736 -7738.6616 7276.0435 c
-7738.7847 7275.7637 -7739.0234 7275.6685 -7739.4238 7276.2461 C
-7739.2798 7276.8789 -7739.2593 7277.7246 -7739.1929 7278.2441 c
-7739.0225 7279.5781 -7738.6958 7284.2959 -7738.0034 7286.2485 C
-7738.3345 7285.9902 -7738.3354 7285.9893 v
-7739.1455 7283.6982 -7739.5039 7280.0762 -7739.6753 7278.7402 c
-7739.8096 7277.6885 -7739.79 7276.2402 -7740.3706 7275.2695 c
-7740.5435 7274.9785 -7740.8174 7274.9053 -7741.1816 7275.5938 C
-7740.9434 7276.2695 -7740.8081 7277.1836 -7740.6665 7277.7383 c
-7740.2969 7279.1865 -7739.2993 7284.3477 -7738.27 7286.4053 C
-7738.6704 7286.1665 -7738.6714 7286.1665 v
-7739.8745 7283.7471 -7740.7607 7279.8008 -7741.1294 7278.3535 c
-7741.4214 7277.2095 -7741.5962 7275.6094 -7742.3662 7274.6172 c
-7742.5962 7274.3232 -7742.9058 7274.2783 -7743.2114 7275.0664 C
-7742.8594 7275.7793 -7742.5874 7276.7617 -7742.3574 7277.3516 c
-7741.7534 7278.8984 -7739.9546 7284.4541 -7738.5415 7286.5854 C
-7739.0161 7286.3755 l
-7740.6704 7283.8711 -7742.1826 7279.6387 -7742.7866 7278.0918 c
-7743.2622 7276.8701 -7743.6714 7275.1289 -7744.6558 7274.1387 c
-7744.9312 7273.8623 -7745.2559 7273.8398 -7745.4858 7274.6016 C
-7745.0015 7275.3457 -7744.5825 7276.4185 -7744.2529 7277.0469 c
-7743.3887 7278.6953 -7740.7158 7284.6973 -7738.8447 7286.8359 C
-7739.4209 7286.6992 -7739.4214 7286.6992 v
-7741.6128 7284.1846 -7743.8145 7279.6455 -7744.6782 7277.9961 c
-7745.3599 7276.6943 -7746.0161 7274.7793 -7747.2695 7273.8594 c
-7747.5854 7273.6274 -7747.9272 7273.6426 -7748.1313 7274.3281 C
-7747.4736 7275.0825 -7746.8638 7276.2764 -7746.4072 7276.9512 c
-7745.2441 7278.6709 -7741.5635 7285.0273 -7739.1768 7287.0967 C
-7739.9502 7286.8037 -7739.9512 7286.8018 v
-7742.7471 7284.3682 -7745.6558 7279.8584 -7746.8184 7278.1387 c
-7747.7368 7276.7822 -7748.6802 7274.7119 -7750.2329 7273.9185 c
f
U
U
*u
1 D
-7700.0264 7278.0566 m
-7706.5264 7278.0566 L
-7706.1826 7278.4189 -7705.7622 7278.7578 -7705.1777 7279.0332 c
-7705.1978 7279.0234 -7704.3994 7279.1563 -7704.2622 7279.3325 c
-7704.0967 7279.5415 -7705.7886 7279.5825 -7706.6929 7278.5342 C
-7707.3486 7281.7095 L
-7707.8135 7282.0273 L
-7707.0918 7278.0977 L
-7707.5249 7277.5703 -7707.8594 7277.0024 -7708.3687 7276.5186 C
-7709.0337 7282.6289 L
-7709.29 7282.7754 L
-7708.8286 7276.1475 L
-7709.1104 7275.9575 -7709.4424 7275.7915 -7709.8486 7275.6621 C
-7710.7119 7283.0225 L
-7710.9482 7283.0078 L
-7710.3369 7275.5322 L
-7710.6729 7275.4609 -7711.0518 7275.4111 -7711.4834 7275.3857 C
-7712.0303 7282.9541 L
-7712.1992 7282.9521 L
-7711.9814 7275.3711 L
-7712.4814 7275.3774 -7712.9175 7275.4473 -7713.3042 7275.5674 C
-7713.4155 7282.7061 L
-7713.6338 7282.6689 L
-7713.7935 7275.7549 L
-7714.2998 7275.9863 -7714.7266 7276.3018 -7715.1279 7276.6455 C
-7715.0454 7282.2412 L
-7715.3774 7282.0273 L
-7715.5752 7277.0435 L
-7715.9434 7277.3774 -7716.3096 7277.7168 -7716.7178 7278.0127 C
-7716.7217 7281.3389 L
-7717.1455 7281.0645 L
-7717.1553 7278.2988 L
-7717.6191 7278.5693 -7718.5854 7279.0098 -7719.4014 7278.8672 C
-7718.1714 7278.5435 -7717.7925 7278.3301 -7717.5034 7278.0566 C
-7720.7295 7278.0566 L
-7716.8955 7282.4512 -7710.3394 7286.6865 -7705.3018 7280.0225 C
-7705.1807 7279.8838 -7704.8174 7279.5625 -7704.1255 7279.6475 C
-7700.0264 7279.6475 L
-7700.0264 7280.3672 L
-7703.4834 7280.3672 L
-7703.1318 7280.6777 -7702.8223 7281.4863 -7703.0386 7281.8574 C
-7700.0264 7281.8574 L
-7700.0264 7282.9385 L
-7703.1689 7282.9385 L
-7703.2935 7283.4492 -7703.5439 7283.8857 -7703.8218 7284.3311 C
-7700.0264 7284.3311 L
-7700.0264 7285.9873 L
-7704.7354 7285.9873 L
-7704.9424 7286.4453 -7705.1016 7286.9082 -7705.1768 7287.4121 C
-7700.0264 7287.4121 L
-7700.0264 7288.4922 L
-7705.1714 7288.4922 L
-7705.1074 7288.9834 -7704.9614 7289.4668 -7704.7378 7289.9111 C
-7700.0264 7289.9111 L
-7700.0264 7290.6309 L
-7704.2744 7290.6309 L
-7703.9375 7291.0039 -7702.8535 7291.5938 -7702.9375 7292.0225 C
-7700.0239 7292.0225 L
-7700.0239 7292.4824 L
-7700.3721 7292.4824 L
-7700.3721 7293.6826 L
-7700.0239 7293.6826 L
-7700.0239 7294.1426 L
-7707.9736 7294.1426 L
-7708.4082 7294.4375 -7709.2192 7294.4521 -7709.9897 7294.1426 C
-7713.8564 7294.1426 L
-7714.1162 7294.4609 -7715.1807 7294.5693 -7715.6846 7294.1426 C
-7716.8232 7294.1426 L
-7717.0439 7294.3994 -7717.3174 7294.6387 -7717.6782 7294.8975 C
-7700.0264 7294.8975 L
-7700.0264 7295.3809 L
-7718.8394 7295.3809 L
-7719.1982 7295.5615 -7720.2417 7295.8389 -7721.3774 7295.3809 C
-7731.6406 7295.3809 L
-7731.6406 7305.6494 L
-7731.1826 7306.7861 -7731.4614 7307.8281 -7731.6455 7308.1895 C
-7731.6455 7327 L
-7732.1279 7327 L
-7732.1279 7309.3477 L
-7732.3838 7309.7095 -7732.6235 7309.9824 -7732.8794 7310.2031 C
-7732.8794 7311.3418 L
-7732.4536 7311.8457 -7732.5615 7312.9082 -7732.8794 7313.1689 C
-7732.8794 7317.0361 L
-7732.5698 7317.8076 -7732.5854 7318.6182 -7732.8833 7319.0518 C
-7732.8833 7326.9985 L
-7733.3394 7326.9985 L
-7733.3394 7326.6543 L
-7734.5435 7326.6543 L
-7734.5435 7326.9985 L
-7735.0039 7326.9985 L
-7735.0039 7324.0879 L
-7735.4287 7324.1738 -7736.0186 7323.0898 -7736.3955 7322.7524 C
-7736.3955 7326.9951 L
-7737.1113 7326.9951 L
-7737.1113 7322.2891 L
-7737.5552 7322.0654 -7738.0376 7321.9189 -7738.5298 7321.8555 C
-7738.5298 7326.9951 L
-7739.6138 7326.9951 L
-7739.6138 7321.8496 L
-7740.1143 7321.9248 -7740.5767 7322.0854 -7741.0391 7322.29 C
-7741.0391 7326.9951 L
-7742.6958 7326.9951 L
-7742.6958 7323.2041 L
-7743.1362 7323.4824 -7743.5728 7323.7324 -7744.0854 7323.8555 C
-7744.0854 7326.9951 L
-7745.1689 7326.9951 L
-7745.1689 7323.9893 L
-7745.5552 7324.1289 -7746.3486 7323.8945 -7746.6543 7323.5435 C
-7746.6543 7326.9951 L
-7747.3794 7326.9951 L
-7747.3794 7322.9014 L
-7747.4634 7322.2095 -7747.1382 7321.8457 -7747.0015 7321.7227 C
-7740.3359 7316.6885 -7744.5713 7310.1309 -7748.9658 7306.2959 C
-7748.9658 7309.5244 L
-7748.6919 7309.2344 -7748.48 7308.8555 -7748.1558 7307.6255 C
-7748.0127 7308.4414 -7748.4526 7309.4082 -7748.7246 7309.8711 C
-7745.9575 7309.8828 L
-7745.6831 7310.3047 L
-7749.0103 7310.3066 L
-7749.3066 7310.7168 -7749.6455 7311.0845 -7749.98 7311.4512 C
-7744.9951 7311.6475 L
-7744.7817 7311.9814 L
-7750.3774 7311.8984 L
-7750.7202 7312.2998 -7751.0361 7312.7266 -7751.2681 7313.2314 C
-7744.3535 7313.3926 L
-7744.3169 7313.6113 L
-7751.4546 7313.7227 L
-7751.5742 7314.1094 -7751.6465 7314.5439 -7751.6514 7315.0449 C
-7744.0688 7314.8262 L
-7744.0688 7314.9951 L
-7751.6362 7315.5435 L
-7751.6113 7315.9746 -7751.5615 7316.3545 -7751.4888 7316.6895 C
-7744.0142 7316.0781 L
-7743.9995 7316.3145 L
-7751.3599 7317.1777 L
-7751.2314 7317.5854 -7751.0654 7317.9165 -7750.8755 7318.1973 C
-7744.2485 7317.7354 L
-7744.3945 7317.9932 L
-7750.5034 7318.6572 L
-7750.0215 7319.1685 -7749.4521 7319.5024 -7748.9238 7319.9336 C
-7744.9946 7319.2139 L
-7745.3135 7319.6768 L
-7748.4878 7320.3345 L
-7747.4409 7321.2373 -7747.4814 7322.9297 -7747.6914 7322.7637 c
-7747.8657 7322.6274 -7747.9985 7321.8281 -7747.9897 7321.8486 c
-7748.2656 7321.2637 -7748.6035 7320.8438 -7748.9697 7320.5024 C
-7748.9697 7327 L
-7749.4536 7327 L
-7749.4536 7320.0854 L
-7750.6582 7319.1377 -7751.9551 7318.5674 -7752.1167 7315.4111 c
-7752.25 7312.8311 -7750.5562 7311.7656 -7749.4497 7310.2871 C
-7749.4497 7305.7441 L
-7750.5767 7304.4185 -7751.5225 7302.9912 -7751.9614 7301.1455 C
-7752.8809 7296.3662 -7749.7568 7290.8545 -7744.7959 7290.4863 C
-7744.7183 7290.6133 L
-7749.1494 7291.5352 -7751.8442 7296.6641 -7750.9814 7301.1455 C
-7750.0635 7305.0029 -7746.9395 7307.0234 -7744.5503 7310.1475 C
-7742.8975 7312.5361 -7742.3457 7315.1094 -7743.0806 7317.8652 c
-7743.8545 7320.6133 -7746.25 7321.5977 -7746.5649 7322.5303 c
-7746.8506 7323.3755 -7745.6689 7323.7002 -7744.6968 7323.6348 C
-7742.5454 7323.4395 -7741.1602 7320.4922 -7737.3184 7321.7559 c
-7736.2222 7322.1162 -7735.5913 7322.9375 -7735.3042 7323.5469 c
-7735.1104 7323.9575 -7733.7241 7323.4395 -7734.9165 7321.2207 C
-7737.8774 7321.0879 -7737.4521 7319.0645 -7737.2026 7319.2109 c
-7735.5015 7320.2095 -7734.1826 7318.3047 -7735.1055 7317.2959 c
-7737.2129 7314.9902 -7738.8481 7315.2861 -7740.9248 7311.3174 c
-7743.2095 7306.9521 -7744.2695 7301.0723 -7741.7959 7296.9082 C
-7741.7954 7296.1387 L
-7742.0479 7295.5439 -7742.0249 7295.0854 -7742.2134 7294.1685 c
-7742.3818 7293.3535 -7742.6689 7293.0854 -7742.9575 7292.9121 C
-7743.1304 7292.7969 -7743.5015 7292.9053 -7743.5054 7293.1445 c
-7743.52 7293.7461 -7742.7842 7293.5225 -7742.8271 7293.5845 c
-7743.1895 7294.0869 -7743.7329 7293.7295 -7743.8345 7293.3774 c
-7743.9648 7292.9287 -7743.6606 7292.5762 -7743.3145 7292.4902 C
-7742.6655 7292.3594 -7742.1968 7292.9277 -7741.9575 7293.4575 c
-7741.4365 7294.6074 -7741.4746 7296.2524 -7740.2607 7296.8574 c
-7739.4385 7297.2471 -7738.5537 7296.9277 -7737.7271 7296.6328 c
-7734.8296 7295.6016 -7731.3096 7292.0825 -7730.2783 7289.1836 c
-7729.9834 7288.3574 -7729.6641 7287.4727 -7730.0537 7286.6494 c
-7730.6606 7285.4375 -7732.3042 7285.4746 -7733.4546 7284.9541 c
-7733.9834 7284.7148 -7734.5513 7284.2461 -7734.4214 7283.5967 C
-7734.3345 7283.25 -7733.9824 7282.9473 -7733.5327 7283.0762 c
-7733.1826 7283.1797 -7732.8242 7283.7227 -7733.3281 7284.0845 c
-7733.3882 7284.1274 -7733.1655 7283.3906 -7733.7681 7283.4053 c
-7734.0054 7283.4111 -7734.1143 7283.7813 -7733.9995 7283.9541 C
-7733.8257 7284.2422 -7733.5591 7284.5293 -7732.7422 7284.6973 c
-7731.7085 7284.9102 -7731.2578 7284.8535 -7730.5386 7285.2266 C
-7730.1167 7285.2266 L
-7725.9546 7282.7529 -7720.0674 7283.8008 -7715.7095 7286.0977 c
-7715.0527 7286.4551 -7714.4834 7286.8008 -7713.9126 7287.1475 c
-7712.5488 7287.9766 -7710.5542 7290.8857 Y
-7710.1782 7291.3325 -7709.9521 7291.7979 -7709.5225 7292.0625 c
-7708.3569 7292.7783 -7706.8184 7291.5215 -7707.8154 7289.8193 c
-7707.9614 7289.5703 -7705.9385 7289.1455 -7705.8057 7292.1064 C
-7703.5874 7293.2988 -7703.0698 7291.9121 -7703.4795 7291.7178 c
-7704.0889 7291.4316 -7704.9087 7290.7998 -7705.2705 7289.7041 c
-7706.5342 7285.8623 -7703.3599 7284.0234 -7703.4463 7282.3262 C
-7703.3008 7281.5322 -7703.6514 7280.1719 -7704.4961 7280.4595 c
-7705.4282 7280.7725 -7706.4126 7283.1685 -7709.1606 7283.9414 c
-7711.9175 7284.6768 -7714.4897 7284.1255 -7716.8774 7282.4717 C
-7720.0034 7280.0845 -7722.0234 7276.9595 -7725.8818 7276.0415 C
-7730.3623 7275.1777 -7735.4902 7277.8735 -7736.4126 7282.3037 C
-7736.5391 7282.2266 L
-7736.1729 7277.2656 -7730.6592 7274.1426 -7725.8818 7275.0615 C
-7724.0361 7275.5024 -7722.6104 7276.4453 -7721.2822 7277.5723 C
-7716.7393 7277.5723 L
-7715.2607 7276.4668 -7714.1943 7274.7725 -7711.6143 7274.9053 c
-7708.4585 7275.0664 -7707.8882 7276.3633 -7706.9409 7277.5723 C
-7700.0264 7277.5723 L
-7700.0264 7278.0566 L
f
0 D
-7729.1362 7287.4121 m
-7721.5166 7287.4121 L
-7722.5635 7286.8301 -7723.5435 7286.3184 -7724.8057 7285.9873 C
-7729.6079 7285.9873 L
-7729.2998 7286.3809 -7729.1055 7286.8701 -7729.1362 7287.4121 C
f
-7730.0591 7289.9111 m
-7718.5254 7289.9111 L
-7718.6338 7289.6201 -7719.0063 7288.9404 -7719.8042 7288.4922 C
-7729.4321 7288.4922 L
-7729.6118 7288.9727 -7729.8232 7289.4463 -7730.0591 7289.9111 C
f
-7718.8096 7292.0225 m
-7718.3174 7291.4395 -7718.2568 7291.2207 -7718.3857 7290.6309 C
-7730.4521 7290.6309 L
-7730.7295 7291.1074 -7731.0322 7291.5723 -7731.3599 7292.0225 C
-7723.2568 7292.0225 L
-7722.9111 7291.2041 -7722.1665 7291.3711 -7721.8218 7292.0225 C
-7718.8096 7292.0225 L
f
-7720.1201 7292.4824 m
-7720.1201 7292.8242 L
-7719.5664 7292.7861 -7719.4995 7292.7524 -7719.1982 7292.4824 C
-7720.1201 7292.4824 L
f
-7721.4863 7292.4824 m
-7721.3311 7292.6719 -7721.0264 7292.8154 -7720.8257 7292.8457 C
-7720.8257 7292.4824 L
-7721.4863 7292.4824 L
f
-7724.3535 7292.4824 m
-7724.3535 7293.6826 L
-7723.6465 7293.6826 L
-7723.6465 7292.4824 L
-7724.3535 7292.4824 L
f
-7725.7622 7292.4824 m
-7725.7622 7293.6826 L
-7725.0576 7293.6826 L
-7725.0576 7292.4824 L
-7725.7622 7292.4824 L
f
-7727.1729 7292.4824 m
-7727.1729 7293.6826 L
-7726.4678 7293.6826 L
-7726.4678 7292.4824 L
-7727.1729 7292.4824 L
f
-7728.5835 7292.4824 m
-7728.5835 7293.6826 L
-7727.8774 7293.6826 L
-7727.8774 7292.4824 L
-7728.5835 7292.4824 L
f
-7729.9946 7292.4824 m
-7729.9946 7293.6826 L
-7729.2886 7293.6826 L
-7729.2886 7292.4824 L
-7729.9946 7292.4824 L
f
-7735 7303.7695 m
-7735 7295.6504 L
-7735.4497 7295.9756 -7735.9146 7296.2754 -7736.3911 7296.5449 C
-7736.3911 7308.6406 L
-7735.8018 7308.7695 -7735.5825 7308.7095 -7735 7308.2158 C
-7735 7305.2041 L
-7735.6514 7304.8613 -7735.8169 7304.1152 -7735 7303.7695 C
f
-7734.5391 7303.3799 m
-7733.3394 7303.3799 L
-7733.3394 7302.6748 L
-7734.5391 7302.6748 L
-7734.5391 7303.3799 L
f
-7733.3394 7301.9688 m
-7733.3394 7301.2637 L
-7734.5391 7301.2637 L
-7734.5391 7301.9688 L
-7733.3394 7301.9688 L
f
-7733.3394 7300.5586 m
-7733.3394 7299.8535 L
-7734.5391 7299.8535 L
-7734.5391 7300.5586 L
-7733.3394 7300.5586 L
f
-7733.3394 7299.1484 m
-7733.3394 7298.4434 L
-7734.5391 7298.4434 L
-7734.5391 7299.1484 L
-7733.3394 7299.1484 L
f
-7733.3394 7297.7373 m
-7733.3394 7297.0313 L
-7734.5391 7297.0313 L
-7734.5391 7297.7373 L
-7733.3394 7297.7373 L
f
-7733.3394 7296.3262 m
-7733.3394 7295.6201 L
-7734.5391 7295.6201 L
-7734.5391 7296.3262 L
-7733.3394 7296.3262 L
f
-7733.3394 7294.9185 m
-7733.3394 7294.2725 L
-7733.5728 7294.4941 -7733.8135 7294.7095 -7734.0591 7294.9185 C
-7733.3394 7294.9185 L
f
-7731.4058 7293.6826 m
-7730.6992 7293.6826 L
-7730.6992 7292.4824 L
-7731.4058 7292.4824 L
-7731.4058 7293.6826 L
f
-7732.7495 7293.6826 m
-7732.1094 7293.6826 L
-7732.1094 7292.9746 L
-7732.3159 7293.2158 -7732.5288 7293.4521 -7732.7495 7293.6826 C
f
-7738.5298 7297.5273 m
-7738.5298 7307.2227 L
-7738.0815 7308.0186 -7737.4014 7308.3926 -7737.1113 7308.5024 C
-7737.1113 7296.9258 L
-7737.5762 7297.1563 -7738.0488 7297.3564 -7738.5298 7297.5273 C
f
-7741.0352 7297.2095 m
-7741.0352 7302.2207 L
-7740.7041 7303.4844 -7740.1929 7304.4629 -7739.6094 7305.5098 C
-7739.6094 7297.7725 L
-7740.1606 7297.7705 -7740.6494 7297.5439 -7741.0352 7297.2095 C
f
-7733.3394 7325.2441 m
-7734.5391 7325.2441 L
-7734.5391 7325.9482 L
-7733.3394 7325.9482 L
-7733.3394 7325.2441 L
f
-7733.3394 7323.8345 m
-7734.3896 7323.8345 L
-7734.4375 7323.8838 -7734.4878 7323.9297 -7734.5391 7323.9678 C
-7734.5391 7324.5381 L
-7733.3394 7324.5381 L
-7733.3394 7323.8345 L
f
-7733.3394 7322.4209 m
-7734.0039 7322.4209 L
-7733.9702 7322.6475 -7733.9595 7322.9121 -7734.0137 7323.1279 C
-7733.3394 7323.1279 L
-7733.3394 7322.4209 L
f
-7733.3394 7321.0117 m
-7734.5015 7321.0117 L
-7734.3872 7321.2461 -7734.2798 7321.4814 -7734.1919 7321.7168 C
-7733.3394 7321.7168 L
-7733.3394 7321.0117 L
f
-7733.3394 7319.9033 m
-7733.4614 7320.0625 -7733.5938 7320.2197 -7733.6753 7320.3066 C
-7733.3394 7320.3066 L
-7733.3394 7319.9033 L
f
-7733.4399 7304.4395 m
-7733.6968 7304.2891 -7735.0845 7303.8135 -7735.0737 7304.5381 c
-7735.0674 7304.9502 -7734.4512 7305.2412 -7734.2495 7305.4473 c
-7733.6338 7306.0703 -7733.1885 7307.5254 -7734.2974 7308.4238 c
-7736.6328 7310.3145 -7738.1865 7308.5879 Y
-7742.1118 7304.7324 -7742.1104 7299.1113 Y
-7743.2295 7303.3345 -7741.9663 7308.3936 -7740.4048 7311.1426 c
-7737.8818 7315.5845 -7736.9575 7314.0566 -7734.6113 7316.9482 c
-7733.8047 7317.9434 -7734.1294 7320.3818 -7736.9546 7319.75 c
-7737.2026 7319.6934 -7736.7759 7320.2949 -7736.2681 7320.5498 c
-7734.1104 7321.6406 -7732.8618 7319.1631 -7733.1338 7317.8594 c
-7733.4761 7316.2109 -7734.0986 7315.3662 -7736.1616 7314.2246 C
-7735.8311 7314.2373 -7734.2134 7314.5415 -7733.2295 7313.0088 c
-7733.0195 7312.6826 -7732.8745 7311.7578 -7733.3042 7311.8774 c
-7733.3906 7311.9023 -7733.6416 7312.1973 -7733.9414 7312.3613 c
-7735.9321 7313.3945 -7736.7075 7311.0137 Y
-7734.4165 7310.8418 -7733.7515 7310.7637 -7732.2559 7308.7637 c
-7732.0542 7308.4941 -7731.1162 7305.8047 -7733.4399 7304.4395 c
f
-7734.5391 7311.1367 m
-7734.5391 7312.0225 L
-7734.2993 7311.9985 -7733.9302 7311.9575 -7733.3394 7311.4033 C
-7733.3394 7311.1367 L
-7734.5391 7311.1367 L
f
-7735.9946 7311.2305 m
-7735.8042 7311.7031 -7735.4185 7311.9473 -7735 7312.0127 C
-7735 7311.1709 L
-7735.3857 7311.2354 -7735.9946 7311.2305 Y
f
-7733.3394 7314.6665 m
-7733.3394 7313.9595 L
-7733.6382 7313.9595 L
-7733.9136 7314.1475 -7734.2246 7314.2935 -7734.5391 7314.3818 C
-7734.5391 7314.6665 L
-7733.3394 7314.6665 L
f
-7733.9897 7315.3682 m
-7733.7935 7315.5342 -7733.5576 7315.7813 -7733.3394 7316.1084 C
-7733.3394 7315.3682 L
-7733.9897 7315.3682 L
f
-7735.2495 7314.4746 m
-7735.1914 7314.5273 -7735.1025 7314.5967 -7735 7314.6719 C
-7735 7314.4668 L
-7735.0835 7314.4746 -7735.1675 7314.4785 -7735.2495 7314.4746 C
f
-7734.5391 7306.9063 m
-7734.5391 7307.8262 L
-7734.2715 7307.5273 -7734.2358 7307.46 -7734.1982 7306.9063 C
-7734.5391 7306.9063 L
f
-7734.1758 7306.2012 m
-7734.2065 7306.0024 -7734.3506 7305.6943 -7734.5391 7305.54 C
-7734.5391 7306.2012 L
-7734.1758 7306.2012 L
f
-7722.1865 7294.8975 m
-7722.4233 7294.6943 -7722.6401 7294.4463 -7722.8271 7294.1426 C
-7732.8794 7294.1426 L
-7732.8794 7304.1992 L
-7732.5762 7304.3857 -7732.3271 7304.6025 -7732.1255 7304.8408 C
-7732.1265 7294.8975 L
-7722.1865 7294.8975 L
f
-7715.6226 7293.6826 m
-7715.0698 7293.0928 -7715.0298 7292.7227 -7715.0034 7292.4824 C
-7715.8887 7292.4824 L
-7715.8887 7293.6826 L
-7715.6226 7293.6826 L
f
-7715.8564 7292.0225 m
-7715.0127 7292.0225 L
-7715.0791 7291.6045 -7715.3232 7291.2188 -7715.7959 7291.0273 C
-7715.7915 7291.6367 -7715.8564 7292.0225 V
f
-7712.3623 7292.4824 m
-7712.6455 7292.4824 L
-7712.7334 7292.7979 -7712.8799 7293.1084 -7713.0674 7293.3838 C
-7713.0674 7293.6826 L
-7712.3623 7293.6826 L
-7712.3623 7292.4824 L
f
-7712.3545 7292.0225 m
-7712.4302 7291.9199 -7712.4995 7291.8311 -7712.5518 7291.7734 C
-7712.5479 7291.8555 -7712.5518 7291.9395 -7712.5601 7292.0225 C
-7712.3545 7292.0225 L
f
-7710.9185 7293.6826 m
-7711.2446 7293.4648 -7711.4912 7293.2305 -7711.6577 7293.0332 C
-7711.6577 7293.6826 L
-7710.9185 7293.6826 L
f
-7706.7202 7293.3477 m
-7706.8066 7293.4287 -7706.9639 7293.5615 -7707.1226 7293.6826 C
-7706.7202 7293.6826 L
-7706.7202 7293.3477 L
f
-7706.4751 7290.7549 m
-7706.7329 7290.2461 -7707.0913 7289.8945 -7707.2778 7290.0684 c
-7707.4248 7290.2041 -7706.4424 7291.9434 -7707.9009 7292.7725 c
-7708.7158 7293.2354 -7709.8721 7292.8735 -7710.2842 7292.3066 c
-7712.5615 7289.1836 -7712.4746 7288.5586 -7715.8848 7286.6172 c
-7718.6318 7285.0537 -7723.6943 7283.7935 -7727.9155 7284.9121 C
-7722.2935 7284.9102 -7718.4385 7288.8359 V
-7716.7119 7290.3906 -7718.6025 7292.7246 v
-7719.5015 7293.8345 -7720.9551 7293.3887 -7721.5791 7292.7734 c
-7721.7842 7292.5703 -7722.0752 7291.9551 -7722.4873 7291.9482 c
-7723.2134 7291.9385 -7722.7378 7293.3242 -7722.5874 7293.5825 c
-7721.2217 7295.9063 -7718.5322 7294.9678 -7718.2622 7294.7656 c
-7716.2622 7293.2705 -7716.1846 7292.6064 -7716.0127 7290.3145 C
-7713.6328 7291.0898 -7714.6655 7293.0801 v
-7714.8286 7293.3809 -7715.1245 7293.6318 -7715.1489 7293.7178 c
-7715.2695 7294.1475 -7714.3423 7294.0029 -7714.0176 7293.7949 c
-7712.4858 7292.8086 -7712.7881 7291.1914 -7712.8018 7290.8613 C
-7711.6602 7292.9248 -7710.8154 7293.5469 -7709.1675 7293.8887 c
-7707.8633 7294.1602 -7705.3857 7292.9121 -7706.4751 7290.7549 c
f
-7705.3096 7292.8301 m
-7705.5454 7292.7422 -7705.7817 7292.6357 -7706.0142 7292.5215 C
-7706.0142 7293.6826 L
-7705.3096 7293.6826 L
-7705.3096 7292.8301 L
f
-7703.8994 7293.0088 m
-7704.1143 7293.0625 -7704.3794 7293.0518 -7704.6055 7293.0186 C
-7704.6055 7293.6826 L
-7703.8994 7293.6826 L
-7703.8994 7293.0088 L
f
-7701.7822 7293.6826 m
-7701.0767 7293.6826 L
-7701.0767 7292.4824 L
-7701.7822 7292.4824 L
-7701.7822 7293.6826 L
f
-7703.1934 7293.6826 m
-7702.4878 7293.6826 L
-7702.4878 7292.4824 L
-7703.0586 7292.4824 L
-7703.0967 7292.5342 -7703.1426 7292.5854 -7703.1934 7292.6328 C
-7703.1934 7293.6826 L
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 3)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-3886.5 3454.2913 m
-3787.5696 3454.2913 L
-3787.5696 3437.927 L
-3886.5 3437.927 L
-3886.5 3454.2913 L
n
u
u
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-3790.0071 3443.6094 m
-3789.7832 3443.5537 -3789.5879 3443.8643 -3789.6721 3444.0039 C
-3789.2161 3443.6272 -3789.2063 3444.0557 -3789.1472 3443.3262 C
-3788.8545 3442.9683 -3788.5422 3443.4639 -3788.8752 3443.7598 C
-3788.0313 3443.3135 L
-3788.5359 3443.1997 L
-3788.3984 3442.5933 -3787.7295 3443.3809 -3787.5696 3442.6743 C
-3788.4832 3442.7334 L
-3788.4375 3442.5313 L
-3788.6455 3442.7493 -3789.0496 3442.6582 -3789.1904 3442.573 C
-3789.1682 3442.4736 -3789.1824 3442.3115 -3789.0212 3442.2935 C
-3790.1243 3442.2471 -3789.3184 3443.3545 -3790.2336 3443.5557 C
-3790.1763 3443.5413 -3790.1052 3443.5493 -3790.0071 3443.6094 C
f
-3790.9441 3442.1252 m
-3791.3289 3442.8853 L
-3791.9744 3442.6895 L
-3791.9817 3442.9517 -3792.4519 3443.1641 -3792.1335 3443.3955 C
-3792.0713 3443.3545 -3791.9482 3443.2759 -3791.8489 3443.2998 C
-3791.9209 3443.8672 -3792.7073 3443.5833 -3792.5176 3444.1572 C
-3792.0071 3444.0066 -3791.9287 3444.1316 -3791.6145 3443.6709 C
-3791.1465 3443.7236 -3790.8057 3443.8545 -3790.5872 3444.0615 C
-3790.4482 3443.9751 -3790.4287 3443.6272 -3790.2522 3443.5576 C
-3790.2913 3443.5664 -3790.3271 3443.5752 -3790.3721 3443.5796 C
-3790.3911 3442.7261 L
-3790.5383 3442.9063 -3790.6775 3442.8213 -3790.8408 3442.8389 C
-3790.0852 3441.8423 L
-3790.3289 3441.0435 -3791.0713 3441.5127 -3791.3679 3441.1807 C
-3791 3441.8982 -3791.6609 3441.5376 -3790.9441 3442.1252 C
f
-3790.2522 3443.5576 m
-3790.2473 3443.5576 -3790.2393 3443.5564 -3790.2336 3443.5557 C
-3790.2393 3443.5564 -3790.2473 3443.5564 -3790.2522 3443.5576 C
f
-3846.7073 3448.5225 m
-3846.8679 3448.5376 -3846.9153 3448.7393 -3846.9385 3448.8408 C
-3845.1296 3448.8247 L
-3845.1863 3448.6006 -3845.7073 3448.323 -3845.3591 3448.1895 C
-3845.5144 3447.9414 -3845.9873 3448.1533 -3846.0559 3448.4561 C
-3845.9248 3448.1143 L
-3846.3416 3448.5518 -3846.6262 3447.6919 -3846.3545 3447.4336 C
-3846.3896 3447.4385 L
-3847.5439 3449.123 L
-3847.1201 3449.2212 -3847.2175 3448.5435 -3846.7073 3448.5225 C
f
-3883.8567 3447.6653 m
-3883.6223 3447.5869 -3883.5935 3447.5059 -3883.6201 3447.4229 C
-3883.7041 3447.4854 -3883.7839 3447.5576 -3883.8567 3447.6653 C
f
-3847.8137 3449.5181 m
-3848.1753 3450.0454 L
-3848.0305 3449.9033 -3847.9033 3449.7139 -3847.8137 3449.5181 C
f
-3845.3088 3441.4993 m
-3845.3081 3441.4712 -3845.3042 3441.4463 -3845.3137 3441.4087 C
-3845.4761 3441.6782 L
-3845.4736 3441.6782 -3845.4729 3441.6782 -3845.4719 3441.6782 C
-3845.4121 3441.6187 -3845.3584 3441.5591 -3845.3088 3441.4993 C
f
-3856.0212 3451.4993 m
-3856.0601 3451.5127 -3856.0935 3451.5181 -3856.1399 3451.5354 C
-3856.0967 3451.5313 -3856.0576 3451.5176 -3856.0212 3451.4993 C
f
-3840.4087 3438.4854 m
-3841.2129 3438.9927 L
-3841.1057 3438.7522 -3841.4937 3438.8247 -3841.3242 3438.5449 C
-3841.3855 3438.5833 -3841.6729 3438.6782 -3841.5945 3438.8013 C
-3841.4304 3438.7854 L
-3841.8545 3439.4854 -3841.5977 3439.7544 -3842.3008 3440.2871 C
-3841.8643 3440.7017 -3841.6729 3440.3223 -3841.4417 3440.0039 C
-3841.3633 3439.9551 -3841.2976 3439.9336 -3841.2312 3439.9072 C
-3840.5625 3438.9292 L
-3840.4087 3438.4854 L
f
-3872.6504 3443.6934 m
-3872.6416 3443.6392 L
-3872.6497 3443.6582 -3872.6511 3443.6763 -3872.6504 3443.6934 C
f
-3872.6064 3443.4153 m
-3872.6416 3443.6392 L
-3872.5984 3443.5269 -3872.4329 3443.4199 -3872.6064 3443.4153 C
f
-3847.6809 3449.0654 m
-3847.6919 3449.1953 -3847.7383 3449.3545 -3847.8137 3449.5181 C
-3847.5439 3449.123 L
-3847.5823 3449.1152 -3847.6328 3449.0879 -3847.6809 3449.0654 C
f
-3847.0671 3447.5376 m
-3846.3896 3447.4385 L
-3846.1399 3447.0752 L
-3846.3992 3447.2124 -3846.7024 3447.3062 -3847.0671 3447.5376 C
f
-3854.9512 3451.9102 m
-3856.3545 3452.0176 -3854.6064 3451.0869 -3855.2512 3450.8887 C
-3855.6409 3450.9854 -3855.7783 3451.3765 -3856.0212 3451.4993 C
-3854.9082 3451.1653 -3856.1721 3452.7854 -3855.0496 3452.5791 C
-3855.2092 3453.2854 -3855.8591 3453.3496 -3856.24 3453.1582 C
-3856.6711 3452.4771 -3855.8633 3452.6592 -3855.7656 3451.9912 C
-3856.2161 3452.1021 -3856.1367 3452.2261 -3856.3279 3452.6062 C
-3857.0352 3452.4478 -3857.7913 3453.4429 -3858.2136 3452.4993 C
-3858.7256 3452.6494 -3858.6919 3452.9751 -3858.9863 3453.3342 C
-3859.0449 3454.0632 -3858.2249 3453.7168 -3858.0352 3454.2913 C
-3858.0745 3454.2295 -3858.1511 3454.1062 -3858.1289 3454.0039 C
-3857.6863 3454.1572 L
-3858.1064 3453.9033 -3857.6279 3453.4287 -3857.4033 3453.3716 C
-3857.24 3453.3562 -3856.9153 3453.323 -3856.96 3453.5254 C
-3857.2073 3453.6814 L
-3856.8889 3453.9126 -3856.5049 3453.1504 -3856.1687 3453.5454 C
-3856.1511 3453.7092 -3856.2783 3453.7854 -3856.2976 3453.8877 C
-3855.9209 3453.3894 -3855.5576 3453.4185 -3855 3453.0664 C
-3855.3232 3453.7896 L
-3854.8772 3452.9893 -3853.8672 3453.2168 -3853.1672 3453.6392 C
-3853.2449 3453.5166 -3853.3848 3453.4307 -3853.3008 3453.2913 C
-3852.8896 3453.1182 -3852.5791 3453.6143 -3852.7695 3453.9951 C
-3852.3679 3453.3955 -3851.2393 3454.5 -3850.6919 3453.7207 C
-3848.1753 3450.0454 L
-3848.2695 3450.1377 -3848.3704 3450.2124 -3848.4744 3450.2437 C
-3848.7031 3449.6094 -3848.8264 3449.6865 -3848.4255 3449.0879 C
-3848.8191 3449.4238 -3848.6687 3449.9336 -3849.26 3449.96 C
-3849.0281 3449.6406 -3848.9695 3448.9121 -3849.5359 3448.8369 C
-3850.9519 3449.4712 -3851.8904 3451.2759 -3853.2129 3452.198 C
-3853.2617 3451.7092 -3854.3 3451.8462 -3854.8047 3451.7312 C
-3854.6121 3451.2061 -3854.2375 3451.0564 -3853.8489 3450.9502 C
-3854.0928 3450.9172 -3854.5127 3450.9033 -3854.8242 3450.8799 C
-3854.9512 3451.9102 L
f
-3851.6631 3450.2661 m
-3851.6985 3450.2227 -3851.7351 3450.198 -3851.7727 3450.1753 C
-3851.7527 3450.2158 -3851.72 3450.2471 -3851.6631 3450.2661 C
f
-3853.7305 3450.9646 m
-3853.7256 3450.9473 -3853.7273 3450.9326 -3853.7256 3450.9126 C
-3853.7664 3450.9238 -3853.8071 3450.9385 -3853.8489 3450.9502 C
-3853.8071 3450.9541 -3853.76 3450.96 -3853.7305 3450.9646 C
f
-3848.0127 3447.9602 m
-3847.9287 3447.8213 -3847.8665 3447.7822 -3847.7825 3447.6416 C
-3847.8342 3447.6895 -3847.8992 3447.7271 -3847.9617 3447.7695 C
-3848.0212 3447.8352 -3848.0496 3447.9014 -3848.0127 3447.9602 C
f
-3847.7295 3448.8213 m
-3847.7744 3449.0225 L
-3847.7383 3449.0449 -3847.7129 3449.0493 -3847.6809 3449.0654 C
-3847.6711 3448.9573 -3847.6816 3448.8662 -3847.7295 3448.8213 C
f
-3860.3137 3447.4873 m
-3860.4482 3447.5933 L
-3860.3672 3447.5852 -3860.3323 3447.5422 -3860.3137 3447.4873 C
f
-3856.5144 3451.0796 m
-3856.0264 3451.0313 -3856.4561 3450.3496 -3855.7656 3450.3462 C
-3855.9683 3450.3013 L
-3855.4729 3449.9893 -3854.6023 3450.1328 -3854.0137 3450.1062 C
-3854.0801 3450.3982 -3853.6567 3450.4602 -3853.7256 3450.9126 C
-3853.3232 3450.8062 -3852.9248 3450.7061 -3852.7175 3450.2393 C
-3852.4683 3450.3926 -3852.0896 3449.9824 -3851.7727 3450.1753 C
-3851.9065 3449.9019 -3851.3215 3449.2515 -3852.0928 3449.5852 C
-3852.0305 3449.5479 -3852.0696 3449.4854 -3852.0081 3449.4473 C
-3852.5049 3449.0664 -3852.7041 3449.7124 -3853.1321 3449.7212 C
-3853.3879 3449.4517 -3852.7136 3449.2854 -3852.9551 3449.1782 C
-3853.4895 3449.4292 -3854.6321 3448.8535 -3854.5967 3449.8677 C
-3854.9856 3449.9395 -3855.0393 3449.7158 -3855.1553 3449.5303 C
-3855.7705 3450.6106 -3857.4385 3449.0664 -3857.4329 3450.4478 C
-3857.2083 3450.3936 -3856.8423 3450.4229 -3856.5127 3450.1272 C
-3856.5144 3451.0796 L
f
-3848.8323 3448.0313 m
-3848.8623 3448.0254 -3848.9023 3448.0303 -3848.9272 3448.0181 C
-3848.8992 3448.0254 -3848.8643 3448.0303 -3848.8323 3448.0313 C
f
*u
1 D
-3842.6736 3452.0354 m
-3842.8777 3452.9395 L
-3844.0398 3453.1553 -3844.46 3452.9014 -3845.4761 3452.9375 C
-3845.5537 3452.8135 -3845.4304 3452.7349 -3845.3679 3452.6953 C
-3846.0823 3452.7998 -3847.1511 3452.6104 -3847.6711 3453.0254 C
-3847.8984 3453.0181 -3848.4951 3452.7312 -3848.2693 3452.4646 C
-3848.3799 3452.5454 -3848.5063 3452.623 -3848.6335 3452.594 C
-3848.6672 3452.2695 -3848.3489 3452.5015 -3848.3416 3452.2349 C
-3848.4424 3452.2134 -3848.4817 3452.1504 -3848.5049 3452.2522 C
-3848.3352 3451.9736 -3848.6809 3451.1509 -3847.8896 3451.1719 C
-3847.5833 3451.9307 -3848.4385 3451.2598 -3848.2576 3452.0967 C
-3847.9951 3452.1021 -3848.0256 3451.7783 -3848.0032 3451.6763 C
-3847.6687 3451.6953 -3847.6775 3451.9053 -3847.6953 3452.0967 C
-3847.5671 3451.8369 -3847.1465 3452.198 -3846.9695 3451.8037 C
-3846.3191 3451.7393 -3847.0049 3452.4326 -3846.5801 3452.4229 C
-3846.3352 3451.5752 L
-3845.6289 3451.7349 L
-3844.6064 3451.4375 -3845.7751 3450.2705 -3844.6064 3449.7913 C
-3844.76 3450.2334 -3844.2913 3450.9766 -3843.7473 3451.1533 C
-3844.0728 3451.1846 -3844.6743 3451.7373 -3845.0945 3451.4854 C
-3844.5022 3452.1494 -3845.9097 3451.5654 -3845.6023 3452.3252 C
-3845.3096 3451.9646 -3844.8215 3451.9172 -3844.4409 3452.1106 C
-3844.5657 3452.1895 L
-3844.1609 3452.2793 -3843.8545 3451.3926 -3843.2959 3451.7312 C
-3843.0183 3451.7041 -3843.0703 3451.9429 -3843.1191 3452.1416 C
-3842.8843 3452.0142 -3842.6743 3451.8486 -3842.6736 3452.0354 C
f
0 D
-3843.2783 3452.2134 m
-3843.6497 3452.1294 L
-3843.5615 3452.2695 -3843.4231 3452.2644 -3843.2783 3452.2134 C
f
*U
-3796.1377 3442.2349 m
-3796.1008 3442.2573 -3796.0583 3442.2803 -3796.0249 3442.3037 C
-3796.0496 3442.2644 -3796.0923 3442.2471 -3796.1377 3442.2349 C
f
-3829.0967 3441.9102 m
-3828.8816 3441.9385 L
-3828.9656 3441.9092 -3829.0344 3441.9053 -3829.0967 3441.9102 C
f
-3824.2693 3439.1104 m
-3823.9551 3438.9126 L
-3824.0791 3438.9253 -3824.1763 3439.0039 -3824.2693 3439.1104 C
f
-3798.7024 3442.1768 m
-3798.7129 3442.1709 L
-3798.7305 3442.1846 -3798.7439 3442.2041 -3798.7625 3442.2158 C
-3798.7024 3442.1768 L
f
-3814.5872 3441.0933 m
-3814.5393 3441.1653 -3814.4856 3441.23 -3814.4121 3441.2803 C
-3814.4209 3441.1963 -3814.4863 3441.1353 -3814.5872 3441.0933 C
f
-3824.3271 3439.1475 m
-3824.3191 3439.1553 -3824.3145 3439.1572 -3824.3081 3439.1631 C
-3824.2959 3439.1455 -3824.2825 3439.1265 -3824.2693 3439.1104 C
-3824.3271 3439.1475 L
f
-3831.2231 3439.4385 m
-3831.2693 3439.4646 -3831.3113 3439.4854 -3831.3608 3439.5225 C
-3831.2959 3439.5059 -3831.2561 3439.4741 -3831.2231 3439.4385 C
f
-3830.9199 3441.8408 m
-3830.9695 3441.8623 -3831.0168 3441.8887 -3831.0537 3441.9253 C
-3830.9199 3441.8408 L
f
-3838.3577 3440.1934 m
-3838.6472 3440.3145 L
-3838.5049 3440.3013 -3838.4199 3440.2544 -3838.3577 3440.1934 C
f
-3831.6863 3441.2854 m
-3831.7031 3441.3252 -3831.72 3441.3633 -3831.7312 3441.4014 C
-3831.6912 3441.3752 -3831.6721 3441.3252 -3831.6863 3441.2854 C
f
-3794.2976 3444.7617 m
-3794.3042 3444.7617 -3794.3113 3444.7644 -3794.3152 3444.7644 C
-3794.3225 3444.8633 L
-3794.2976 3444.7617 L
f
-3793.5935 3443.5269 m
-3793.5105 3443.5015 -3793.4241 3443.4792 -3793.3391 3443.4573 C
-3793.4336 3443.4517 -3793.5256 3443.4785 -3793.5935 3443.5269 C
f
-3810.3809 3442.4573 m
-3810.3042 3442.5796 -3810.1243 3442.7261 -3810.2083 3442.8662 C
-3810.0615 3442.6895 -3810.0713 3442.2603 -3810.3809 3442.4573 C
f
-3795.7092 3450.0664 m
-3795.6631 3449.9517 -3795.6057 3449.8643 -3795.5481 3449.7783 C
-3795.6553 3449.9019 -3795.7493 3450.0039 -3795.7092 3450.0664 C
f
-3795.5481 3449.7783 m
-3795.4951 3449.7173 -3795.4385 3449.6533 -3795.3911 3449.5869 C
-3795.4463 3449.6416 -3795.4993 3449.7061 -3795.5481 3449.7783 C
f
-3812.3313 3449.4912 m
-3812.3503 3449.4336 -3812.3799 3449.3853 -3812.4199 3449.3701 C
-3812.4082 3449.4854 -3812.3762 3449.5103 -3812.3313 3449.4912 C
f
-3793.1335 3443.5928 m
-3793.0879 3443.3911 -3791.9817 3442.9517 -3792.9121 3442.8486 C
-3792.8762 3442.219 -3792.3152 3442.5576 -3792.0671 3442.4019 C
-3792.2473 3442.2544 -3791.9775 3441.998 -3792.0322 3441.7732 C
-3792.1553 3441.8496 -3792.3015 3442.0303 -3792.5049 3441.9854 C
-3792.5984 3441.698 -3792.2898 3441.5022 -3792.0488 3441.6104 C
-3792.3457 3441.2783 -3791.6721 3441.1118 -3792.0923 3440.8574 C
-3792.9905 3441.0791 -3793.6252 3441.3076 -3794.2568 3442.2261 C
-3793.7449 3442.0752 -3793.1721 3441.8877 -3792.7522 3442.1406 C
-3792.9287 3442.6846 L
-3793.4033 3442.2061 -3793.6963 3442.5632 -3794.1631 3442.5127 C
-3793.1145 3442.8013 L
-3792.6233 3443.2544 -3792.9519 3443.3584 -3793.3391 3443.4573 C
-3793.2439 3443.4639 -3793.1577 3443.4966 -3793.1335 3443.5928 C
f
-3793.8401 3448.3662 m
-3793.8225 3448.3809 L
-3793.8071 3448.3623 -3793.7881 3448.3496 -3793.7783 3448.3267 C
-3793.8401 3448.3662 L
f
-3838.3042 3451.2017 m
-3838.3943 3451.4077 L
-3838.3191 3451.3145 -3838.2959 3451.2515 -3838.3042 3451.2017 C
f
-3794.4656 3445.7312 m
-3794.4648 3445.7312 L
-3794.4719 3445.7373 -3794.4736 3445.7373 -3794.4656 3445.7312 C
f
-3836.0632 3451.2437 m
-3836.0664 3451.2583 -3836.0696 3451.2744 -3836.0752 3451.2913 C
-3836.0671 3451.2744 -3836.0671 3451.2583 -3836.0632 3451.2437 C
f
-3835.4641 3439.5142 m
-3835.4683 3439.4893 -3835.4695 3439.4646 -3835.4792 3439.4404 C
-3835.5271 3439.4712 -3835.5039 3439.4966 -3835.4641 3439.5142 C
f
-3836.0615 3451.1934 m
-3836.0615 3451.21 -3836.0601 3451.2261 -3836.0632 3451.2437 C
-3836.0615 3451.2261 -3836.0576 3451.2092 -3836.0615 3451.1934 C
f
-3825.1641 3449.1963 m
-3825.1985 3449.1021 -3825.2527 3449.0127 V
-3825.2737 3449.0632 -3825.2527 3449.1221 -3825.1641 3449.1963 C
f
-3827.3152 3448.3911 m
-3827.3152 3448.3911 L
-3827.3289 3448.3711 -3827.3369 3448.3535 -3827.3545 3448.3311 C
-3827.3152 3448.3911 L
f
-3810.8896 3440.0066 m
-3810.9961 3439.9993 -3811.0759 3440.0127 -3811.1433 3440.0354 C
-3811.0657 3440.0493 -3810.9817 3440.0479 -3810.8896 3440.0066 C
f
-3836.0752 3451.2913 m
-3836.0977 3451.3486 -3836.1296 3451.4077 -3836.1824 3451.4812 c
-3836.1243 3451.4033 -3836.0935 3451.3433 -3836.0752 3451.2913 C
f
-3821.8843 3446.4478 m
-3821.9072 3446.469 -3821.9287 3446.4893 -3821.9504 3446.5078 C
-3821.9373 3446.5181 -3821.9241 3446.5225 -3821.9111 3446.5352 C
-3821.8843 3446.4478 L
f
-3820.7617 3446.8486 m
-3820.8 3446.9102 -3820.8176 3446.9741 -3820.8391 3447.0303 C
-3820.4385 3446.8037 -3819.7024 3447.0493 -3819.6152 3446.4712 C
-3819.7512 3446.4854 -3820.4561 3446.1455 -3820.3359 3445.8062 C
-3820.6152 3445.9512 -3821.0281 3445.5454 -3821.1785 3445.6406 C
-3820.72 3445.9573 -3821.1289 3446.1289 -3821.4385 3446.323 C
-3821.72 3446.1553 -3821.3855 3445.8584 -3821.6279 3445.7515 C
-3822.2793 3445.8145 L
-3821.7119 3445.8916 L
-3821.8843 3446.4478 L
-3821.8633 3446.4292 -3821.8489 3446.4172 -3821.8264 3446.3955 C
-3820.8665 3446.1353 -3821.7449 3447.21 -3820.7617 3446.8486 C
f
-3820.8391 3447.0303 m
-3820.8992 3447.0654 -3820.9519 3447.1079 -3820.9929 3447.1672 C
-3820.9023 3447.1582 -3820.8672 3447.1016 -3820.8391 3447.0303 C
f
-3816.9172 3447.9478 m
-3816.8679 3447.9292 -3816.8145 3447.9033 -3816.7473 3447.8599 c
-3816.7793 3447.8809 -3816.8535 3447.9077 -3816.9172 3447.9478 C
f
-3845.6584 3447.1672 m
-3845.6416 3447.3311 -3845.0823 3447.6685 -3845.0923 3447.2407 C
-3845.0923 3447.2407 L
-3845.2583 3447.198 -3845.4255 3447.1533 -3845.5935 3447.1062 C
-3845.6584 3447.1672 L
f
-3806.2336 3445.4602 m
-3806.2959 3445.4478 -3806.3584 3445.4429 -3806.4209 3445.4502 C
-3806.4343 3445.4712 -3806.4473 3445.4951 -3806.4573 3445.5166 C
-3806.4192 3445.5796 -3806.2959 3445.5015 -3806.2336 3445.4602 C
f
-3820.1631 3445.6052 m
-3820.2656 3445.6709 -3820.3113 3445.7383 -3820.3359 3445.8062 C
-3820.2695 3445.7725 -3820.2083 3445.7173 -3820.1631 3445.6052 C
f
-3806.1985 3446.4785 m
-3806.1191 3446.6006 -3806.0022 3446.7871 -3805.9856 3446.9502 C
-3805.8232 3446.9541 -3805.7092 3446.7295 -3805.5439 3446.6494 C
-3805.7305 3446.7119 -3805.9463 3446.6685 -3806.1985 3446.4785 C
f
-3805.5305 3446.6416 m
-3805.5352 3446.6455 -3805.5398 3446.6475 -3805.5439 3446.6494 C
-3805.5393 3446.6494 -3805.5352 3446.644 -3805.5305 3446.6416 C
f
*u
1 D
-3845.9912 3446.9854 m
-3846.0393 3447.0181 -3846.0889 3447.0479 -3846.1399 3447.0752 C
-3846.0625 3446.9602 L
-3846.1912 3446.9185 -3846.3191 3446.8772 -3846.4473 3446.8311 C
-3846.4937 3446.8584 -3846.5439 3446.8843 -3846.6057 3446.8982 C
-3846.5808 3446.8843 -3846.5615 3446.8389 -3846.5496 3446.7922 C
-3846.5913 3446.7764 -3846.6321 3446.7593 -3846.6729 3446.7422 C
-3846.9792 3447.1851 -3847.7417 3447.5088 -3847.9617 3447.7695 C
-3848.2527 3447.9592 -3848.6089 3448.0664 -3848.8323 3448.0313 C
-3848.6252 3448.0413 -3848.3503 3447.9517 -3848.4329 3447.7073 C
-3848.8533 3447.4517 -3849.0576 3446.7173 -3849.7832 3447.3486 C
-3849.3577 3447.3389 L
-3850.3145 3448.2896 L
-3850.6497 3447.8955 -3849.8369 3447.8145 -3849.7041 3447.4727 C
-3850.4482 3447.9414 -3851.0671 3446.6895 -3851.4121 3447.5127 C
-3851.4607 3447.0244 -3851.5422 3446.21 -3852.0305 3446.2583 C
-3851.6785 3446.8145 -3852.3232 3446.6157 -3852.0344 3447.2119 C
-3852.2031 3447.4912 -3852.5791 3447.0354 -3852.6072 3447.4014 C
-3852.5615 3447.1992 L
-3853.3953 3446.4263 -3853.6682 3447.6377 -3854.0249 3448.0354 C
-3855.0232 3448.2349 -3855.4817 3447.9185 -3856.2959 3448.0015 C
-3856.3279 3447.6743 -3856.5496 3446.7744 -3856.8762 3446.8086 C
-3857.0281 3447.2515 -3857.7649 3447.4561 -3857.8401 3448.0225 C
-3857.2561 3448.2598 -3857.3623 3447.5479 -3857.0127 3447.4153 C
-3856.7217 3448.0093 -3856.9863 3448.0022 -3856.5889 3448.3584 C
-3856.9097 3448.1272 -3858.0383 3448.6685 -3858.3896 3448.1104 C
-3858.2656 3448.0313 L
-3858.8264 3447.6934 -3858.9336 3446.2913 -3859.8679 3447.1394 C
-3860.3137 3447.4873 L
-3860.2922 3447.4307 -3860.2898 3447.3643 -3860.2783 3447.3135 C
-3861.0081 3447.2544 -3860.8088 3446.6094 -3861.6145 3447.1182 c
-3861.5522 3447.0791 -3861.5913 3447.0166 -3861.5281 3446.9785 C
-3861.9873 3446.6597 -3862.4504 3447.2998 -3862.7976 3447.4336 C
-3863.0095 3446.9602 -3862.7473 3446.9683 -3862.6162 3446.6265 C
-3863.4241 3446.4429 -3864.2959 3447.2544 -3864.7976 3447.8311 C
-3865.3184 3447.5537 L
-3865.0095 3447.3584 -3864.6321 3446.8599 -3864.7263 3446.5742 C
-3865.0127 3446.6685 -3864.9573 3446.8926 -3865.3623 3446.8013 C
-3865.2932 3446.4993 -3865.1233 3446.2173 -3864.9329 3445.8369 C
-3865.7705 3445.3311 -3865.1201 3446.9092 -3865.7063 3445.9812 C
-3865.9695 3445.9751 -3866.1223 3446.4172 -3866.1511 3446.7822 C
-3866.6279 3446.3037 L
-3866.6809 3446.7695 -3867.2695 3446.7959 -3867.6553 3446.8662 C
-3867.7024 3447.0664 -3867.3447 3447.3623 -3867.1985 3447.1814 C
-3867.2273 3447.5479 -3867.6377 3447.719 -3867.9016 3447.7124 C
-3867.9983 3446.7373 -3869.6296 3447.8535 -3869.3176 3446.7041 C
-3870.5032 3447.0212 -3872.1687 3447.1201 -3872.9512 3447.5269 C
-3873.2092 3447.2573 -3873.7351 3447.2437 -3873.4199 3446.7854 C
-3874.3743 3446.7822 -3874.8665 3447.7832 -3875.8137 3447.5166 C
-3875.8921 3447.394 -3875.3855 3447.5078 -3875.4192 3447.1814 C
-3876.0383 3447.573 -3876.5457 3446.7695 -3877.5063 3447.0303 C
-3877.3447 3447.0127 -3877.2976 3446.8115 -3877.2751 3446.71 C
-3877.2583 3446.8716 -3877.6687 3447.0454 -3877.9172 3447.2017 C
-3878.0569 3447.1182 -3877.7312 3447.0852 -3877.8096 3446.9602 C
-3879.6653 3446.4873 -3881.0791 3447.8135 -3882.9248 3447.7695 c
-3882.3977 3447.7822 -3882.1985 3447.1353 -3882.1929 3446.8716 C
-3882.7092 3446.8599 L
-3882.9082 3447.1814 -3883.2959 3447.1814 -3883.6201 3447.4229 C
-3883.6599 3447.3013 -3883.8176 3447.1709 -3883.6567 3447.0181 C
-3884.6768 3446.3643 -3885.25 3448.198 -3886.5 3447.8623 C
-3884.9863 3446.5591 L
-3885.3608 3446.1052 L
-3884.6953 3445.5127 L
-3885.0928 3445.1553 -3885.4385 3445.9812 -3885.4863 3445.4912 C
-3885.4023 3445.3535 -3885.2 3445.3975 -3885.1936 3445.1328 C
-3885.5752 3444.9414 -3885.6052 3445.3062 -3885.8921 3445.4014 C
-3885.1362 3444.4053 -3883.6543 3444.4209 -3882.8567 3444.1768 C
-3882.7312 3444.0977 -3882.9641 3444.4172 -3882.9863 3444.5181 C
-3882.6609 3444.4854 -3882.4656 3444.7959 -3882.0559 3444.623 C
-3881.8015 3444.2017 -3882.25 3444.3135 -3882.4519 3444.2695 C
-3882.4241 3443.9033 -3882.3225 3443.9253 -3882.0977 3443.8701 C
-3882.0488 3444.3584 -3880.8633 3444.0435 -3880.5735 3444.6392 C
-3879.3721 3444.4854 -3880.7656 3443.3752 -3879.5928 3443.5869 C
-3879.2424 3444.1455 L
-3878.5615 3443.7139 -3877.6809 3443.3311 -3876.9104 3443.4502 C
-3877.0728 3443.4683 L
-3877.1809 3443.7073 -3877.0022 3443.8545 -3876.9231 3443.9766 C
-3876.3408 3444.2158 -3875.8176 3443.5376 -3875.4648 3444.0967 C
-3874.8008 3443.5022 -3873.6936 3443.0632 -3872.9343 3442.7566 C
-3872.7295 3443.4932 -3873.9248 3443.3809 -3874.2407 3443.8413 C
-3873.5496 3443.8389 L
-3873.9768 3443.8486 -3874.1455 3444.1289 -3874.4016 3444.5479 C
-3873.7959 3444.6846 -3873.5967 3444.04 -3873.0225 3443.8535 C
-3873.0671 3444.0537 -3872.9905 3444.1768 -3872.7256 3444.1814 C
-3872.6504 3443.6934 L
-3872.6455 3443.7334 -3872.6162 3443.7705 -3872.5344 3443.8013 C
-3871.5127 3443.5022 L
-3871.7295 3443.2935 -3871.74 3442.8677 -3872.0039 3442.8623 C
-3871.9097 3443.1475 -3872.1335 3443.2041 -3872.3977 3443.1963 C
-3872.1663 3442.8772 -3872.6553 3442.927 -3872.6497 3442.6631 C
-3872.1201 3442.6763 -3871.4695 3442.6104 -3871.1223 3442.4766 C
-3871.0095 3442.927 L
-3870.5049 3443.0413 -3869.9719 3442.7896 -3869.6296 3442.9209 C
-3869.7375 3443.1597 L
-3869.1321 3443.2979 -3868.5359 3443.0078 -3867.9983 3443.4473 C
-3867.4583 3442.9326 -3866.7783 3442.5039 -3866.3369 3441.9646 C
-3866.1008 3441.3843 -3864.7522 3442.6953 -3864.1433 3441.8772 C
-3864.1023 3441.9395 -3864.5615 3442.3145 -3864.7693 3442.5342 C
-3864.3643 3442.6243 -3864.0422 3441.9014 -3863.9153 3442.5132 C
-3864.8242 3442.3076 -3863.8665 3443.0015 -3864.2759 3443.1753 C
-3863.8503 3443.1641 -3863.4016 3443.0537 -3863.1929 3442.8352 C
-3863.8816 3442.8396 -3862.9482 3441.9893 -3863.6455 3442.2559 C
-3863.1052 3441.7412 -3862.3679 3441.5354 -3861.7241 3441.7349 C
-3861.7305 3441.9993 -3861.6511 3442.1221 -3861.4111 3442.2312 C
-3861.2175 3441.8486 L
-3860.9163 3441.9185 -3861.8 3442.3013 -3861.1936 3442.4385 C
-3860.5696 3441.7832 -3859.3145 3442.8096 -3859.0413 3441.5977 C
-3858.5657 3442.0767 -3859.9463 3442.0833 -3859.2295 3442.6685 C
-3859.6465 3443.1062 -3860.2217 3442.6052 -3860.3591 3443.21 C
-3859.9504 3443.0376 -3860.21 3443.7212 -3859.9463 3443.7271 C
-3859.4905 3443.3545 L
-3859.5913 3443.3311 L
-3858.8264 3442.7603 -3857.6145 3443.0342 -3856.6377 3442.9375 C
-3855.8103 3442.3281 -3855.2407 3441.4478 -3854.2483 3441.5142 C
-3854.5413 3441.8716 -3853.4241 3441.8584 -3854.0488 3442.5132 C
-3853.5896 3442.8286 -3853.1362 3442.4551 -3853.1272 3442.1909 C
-3853.5313 3442.1006 -3853.2693 3442.1062 -3853.6096 3441.9766 C
-3853.3799 3441.6563 -3852.8503 3441.6709 -3852.6328 3441.8799 C
-3852.7336 3441.8562 -3852.6953 3441.9185 -3852.7175 3442.0181 C
-3852.2351 3442.2334 -3852.4863 3441.6997 -3852.1377 3441.5664 C
-3852.0271 3442.0142 -3851.3679 3441.6865 -3851.0496 3441.9185 C
-3850.5879 3441.2793 L
-3850.8416 3441.6992 -3850.1455 3441.4326 -3850.0728 3441.8186 C
-3849.7417 3441.5225 -3849.4641 3441.0022 -3848.96 3441.1157 C
-3849.1682 3441.3352 -3848.5 3441.4326 -3848.4912 3441.8584 C
-3847.6279 3442.2661 -3847.0615 3440.6963 -3846.2439 3441.3062 C
-3846.2693 3441.4063 -3846.4343 3441.6865 -3846.1953 3441.7935 C
-3846.0071 3441.6743 -3845.6775 3441.7246 -3845.4761 3441.6782 C
-3845.4824 3441.6904 L
-3845.4785 3441.6865 -3845.4761 3441.6814 -3845.4719 3441.6782 C
-3845.3733 3441.6553 -3845.3113 3441.6021 -3845.3088 3441.4993 C
-3844.9641 3441.0823 -3844.7864 3440.6553 -3844.1079 3440.3013 C
-3844.1577 3439.8135 -3844.7305 3440.0022 -3844.9785 3440.1597 C
-3845.1929 3440.6416 L
-3845.3977 3439.9053 -3845.8047 3440.7695 -3845.9607 3440.5212 C
-3845.5537 3439.6582 -3844.3816 3439.8701 -3843.6785 3439.3396 C
-3844.1072 3438.6597 -3845.0398 3438.5537 -3845.8535 3438.6353 C
-3845.4951 3438.9287 L
-3845.9209 3438.9385 L
-3845.5088 3439.4573 L
-3845.9121 3439.3662 -3846.2607 3439.4993 -3846.6252 3439.469 C
-3846.1985 3439.46 -3846.0322 3440.1328 -3846.2737 3440.0264 C
-3846.7493 3439.5479 -3846.7693 3440.3389 -3847.1328 3440.3096 C
-3846.9304 3440.3545 -3846.6672 3440.3623 -3846.8369 3440.6416 C
-3847.5537 3440.0557 -3847.7473 3440.4375 -3848.3992 3439.8115 C
-3848.3184 3440.6252 -3849.2136 3439.8926 -3849.3113 3440.5591 C
-3849.0088 3440.6272 L
-3849.6504 3441.1187 L
-3850.2424 3440.4561 -3849.1262 3440.4429 -3850.0271 3439.9741 C
-3850.8584 3439.8926 -3850.8369 3440.7471 -3851.4905 3440.8101 C
-3851.2751 3440.3286 -3850.7568 3439.9153 -3850.2295 3439.9287 C
-3850.5488 3439.6963 L
-3850.3799 3439.4172 -3849.6504 3439.4756 -3849.2864 3439.5044 C
-3849.8879 3440.0576 -3849.0049 3439.6743 -3848.7312 3440.1062 C
-3848.6809 3439.6406 -3849.0671 3439.7139 -3848.6111 3439.3396 C
-3849.0383 3439.3486 -3849.1008 3439.3877 -3849.6443 3439.2119 C
-3848.4695 3439.4238 -3848.5879 3437.5933 -3847.5625 3437.9854 C
-3848.0352 3438.1963 -3847.3977 3438.6582 -3847.3408 3438.8843 C
-3847.1184 3438.8281 -3846.6672 3438.7173 -3846.4817 3438.6006 C
-3846.6497 3437.927 L
-3846.0522 3437.6353 -3845.8447 3439.0625 -3845.1553 3438.3677 C
-3845.0657 3437.9646 -3845.7617 3438.2312 -3845.6377 3438.1533 C
-3844.6943 3437.73 -3844.3545 3438.8145 -3843.5168 3439.3223 C
-3843.4695 3439.1201 -3843.4792 3438.6934 -3843.1863 3438.3369 C
-3843.2783 3438.7412 -3843.0615 3438.9478 -3843.3911 3439.2437 C
-3843.1111 3439.4153 -3842.7793 3439.1182 -3842.5322 3438.9602 C
-3843.1152 3438.7236 -3842.2937 3438.3799 -3842.1863 3438.1377 C
-3841.8843 3438.2061 -3842.2783 3438.5413 -3842.4641 3438.6582 C
-3842.2217 3438.7661 -3841.9336 3439.3623 -3841.7959 3438.7566 C
-3841.7864 3439.1814 -3842.4736 3439.8772 -3842.9231 3439.9873 C
-3842.6201 3440.0557 L
-3842.8289 3440.2732 -3842.8679 3440.2119 -3843.1687 3440.1455 C
-3842.8743 3440.4756 -3842.9033 3440.8396 -3842.9719 3441.1431 C
-3843.0105 3441.0811 -3842.9504 3441.0422 -3842.9873 3440.9812 C
-3843.2295 3440.873 -3843.4153 3440.9893 -3843.3591 3441.2158 C
-3843.5769 3441.7876 -3843.0232 3441.573 -3842.8591 3441.8584 C
-3842.7351 3441.8213 -3842.6111 3441.7822 -3842.4895 3441.7437 C
-3841.2312 3439.9072 L
-3840.6936 3439.6934 -3840.4519 3440.1328 -3840.0481 3440.4102 C
-3839.9373 3439.9185 L
-3839.4695 3439.969 -3839.0281 3440.1252 -3839.3279 3440.7471 C
-3839.3447 3440.5833 -3839.4065 3440.6221 -3839.5081 3440.5977 C
-3839.5215 3440.6653 -3839.5449 3440.7124 -3839.5745 3440.7515 C
-3839.5842 3440.7803 -3839.5896 3440.8086 -3839.5977 3440.8369 C
-3839.0967 3440.6782 -3838.7839 3440.5752 -3838.7551 3440.5564 C
-3839.6057 3441.2695 -3838.7976 3441.4478 -3838.9399 3442.3186 C
-3838.0808 3442.0352 L
-3838.6016 3441.7593 -3838.0903 3441.6094 -3837.9055 3441.4912 C
-3837.8545 3441.9812 -3837.2136 3441.4873 -3836.9121 3441.5557 C
-3836.9343 3441.6563 L
-3836.6553 3441.8262 -3836.1663 3441.7783 -3835.8184 3441.6455 C
-3835.8342 3441.4812 -3835.3879 3440.6807 -3835.1736 3440.198 C
-3835.7705 3440.0142 -3835.4163 3439.8184 -3835.4641 3439.5142 C
-3835.4023 3439.5422 -3835.2913 3439.5479 -3835.2783 3439.4854 C
-3835.1929 3439.3462 -3835.3943 3439.2998 -3835.4111 3439.1377 C
-3836.0457 3439.3662 -3836.6985 3439.4307 -3836.9573 3440.1143 C
-3836.7625 3440.4238 -3836.6252 3439.8184 -3836.4072 3440.0254 C
-3836.7217 3440.4854 -3837.1272 3440.394 -3837.6543 3440.3809 C
-3837.8271 3439.9712 L
-3838.3577 3440.1934 L
-3838.1362 3439.9766 -3838.2695 3439.5479 -3837.7129 3439.4646 C
-3837.7839 3439.0791 -3838.2649 3439.5537 -3838.6057 3439.4238 C
-3838.78 3439.9683 L
-3838.7129 3439.6653 -3839.4424 3439.6062 -3838.9241 3439.1924 C
-3838.0808 3438.7471 L
-3838.3152 3438.3752 L
-3837.6023 3438.2705 L
-3837.7705 3438.5518 L
-3836.6252 3438.1753 -3837.4329 3439.6353 -3836.28 3438.9927 C
-3835.9192 3438.3333 -3835.5313 3438.2622 -3834.8247 3438.4229 C
-3835.3359 3438.5703 -3834.8772 3438.8877 -3835.0696 3439.2695 C
-3834.5481 3439.5449 -3834.3721 3439.0015 -3834.1016 3438.7437 C
-3833.9688 3439.0923 -3833.8743 3439.3772 -3834.3401 3439.3262 C
-3834.3984 3440.0557 -3833.7273 3439.1997 -3833.6848 3439.9512 C
-3832.1416 3439.9287 -3832.4482 3437.5254 -3830.6443 3438.4639 C
-3830.7119 3438.7661 L
-3829.5664 3438.3894 -3828.9055 3438.7515 -3827.8447 3438.5127 C
-3827.0095 3439.2832 L
-3827.1963 3439.4014 -3827.6985 3439.9771 -3827.4641 3440.3486 C
-3827.8704 3439.5686 -3828.3015 3439.8413 -3828.7393 3439.4238 C
-3828.7839 3439.6265 -3828.6057 3439.7725 -3828.5281 3439.8975 C
-3828.7922 3439.8894 -3828.9248 3439.5413 -3829.2737 3439.6763 C
-3829.2568 3439.8369 -3828.8762 3440.0303 -3829.1631 3440.1252 C
-3829.6377 3439.6455 L
-3830.2727 3439.8743 -3829.9504 3440.7935 -3830.6963 3440.573 C
-3830.5576 3440.1455 -3830.2744 3439.5264 -3829.9856 3439.4238 C
-3830.3264 3439.3311 -3829.5313 3439.1653 -3829.8423 3438.9092 C
-3830.3333 3439.5435 -3830.5703 3439.0413 -3831.2231 3439.4385 C
-3831.1465 3439.3496 -3831.1262 3439.2256 -3830.9656 3439.1865 C
-3831.9128 3438.9185 L
-3831.6785 3439.2896 -3832.6953 3439.3262 -3832.6072 3439.8772 C
-3831.5977 3440.1052 -3831.8943 3439.7725 -3830.7439 3440.0852 C
-3831.0696 3440.21 -3831.4895 3440.7705 -3831.6863 3441.2854 C
-3831.6963 3441.2644 -3831.7129 3441.2471 -3831.7483 3441.2373 C
-3831.9241 3441.7822 -3831.7449 3441.9287 -3831.7483 3442.8809 C
-3831.2231 3442.2041 -3830.8721 3442.7617 -3830.2527 3442.3716 C
-3830.1362 3441.8496 -3830.6121 3441.7061 -3830.9199 3441.8408 C
-3830.3743 3441.4951 L
-3830.4817 3441.7349 L
-3829.0967 3441.9102 L
-3829.3591 3441.9385 -3829.4482 3442.2407 -3829.5852 3442.4688 C
-3829.4065 3442.4893 -3829.2295 3442.6272 -3829.0413 3442.7783 C
-3829.0808 3442.2803 -3829.0559 3441.9287 -3828.8816 3441.9385 C
-3827.9905 3442.0564 -3827.4951 3442.5039 -3827.1663 3443.0728 C
-3827.1321 3443.0615 -3827.0935 3443.0493 -3827.0625 3443.0376 C
-3827.2119 3442.5269 -3826.4297 3442.1201 -3826.1536 3441.5977 C
-3826.1672 3442.1265 -3825.6943 3441.9153 -3825.4375 3442.1846 C
-3825.3008 3441.5791 -3825.4832 3440.7432 -3825.7959 3440.248 C
-3826.3984 3440.8013 -3826.1335 3440.8062 -3826.4182 3441.5923 C
-3827.3848 3442.1157 L
-3827.1687 3441.6328 L
-3827.6511 3441.4199 -3828.1145 3442.0576 -3828.0791 3441.4292 C
-3827.8242 3441.0103 -3827.4033 3441.2644 -3827.1504 3440.8438 C
-3827.4695 3440.6143 L
-3826.9065 3439.9966 -3827.1809 3441.2092 -3826.4993 3440.7783 C
-3826.75 3440.2437 -3826.4375 3440.7393 -3826.1455 3440.3809 C
-3826.3799 3440.0093 -3827.3457 3440.5342 -3827.1409 3439.6265 C
-3826.7864 3439.2295 -3825.9482 3440.6904 -3825.4792 3439.7876 C
-3825.5022 3439.8894 L
-3824.8103 3440.0078 -3824.5671 3439.4893 -3824.3081 3439.1631 C
-3824.0137 3439.4573 -3823.6072 3439.0435 -3823.2881 3439.0103 C
-3823.2959 3439.2744 L
-3822.8457 3439.1641 L
-3823.0601 3439.6455 -3823.3733 3439.1509 -3823.76 3439.2212 C
-3823.7119 3439.7119 L
-3824.1577 3439.1294 -3824.4551 3440.0142 -3824.8008 3440.4375 C
-3824.2976 3440.0127 -3823.3799 3440.5576 -3823.2617 3439.5977 C
-3822.9504 3440.094 L
-3822.8015 3439.9153 L
-3822.5696 3440.2871 -3822.8064 3440.8701 -3823.2561 3440.9812 C
-3823.3342 3440.8574 -3823.3733 3440.7959 -3823.3496 3440.6934 C
-3823.5583 3440.9126 -3823.75 3441.2935 -3824.2551 3441.1807 C
-3823.9856 3440.9209 L
-3824.6145 3440.8853 -3825.1863 3441.0752 -3825.4016 3441.5576 C
-3824.4937 3441.7622 -3823.6008 3441.8057 -3822.7483 3441.7832 C
-3822.4968 3440.6743 -3822.1985 3440.0518 -3822.0703 3439.0212 C
-3821.4983 3438.8311 -3820.7217 3438.6895 -3820.2249 3439.0664 C
-3820.2705 3439.2695 L
-3820.0281 3439.3752 -3819.8047 3439.3186 -3819.6184 3439.2017 C
-3819.3623 3439.4727 -3819.7937 3439.7471 -3819.6152 3439.8936 C
-3818.7959 3439.5479 L
-3818.8464 3440.0142 -3819.5359 3440.0166 -3819.8633 3440.0493 C
-3819.8015 3440.0103 -3819.6768 3439.9326 -3819.7168 3439.8701 C
-3820.0977 3439.6782 -3820.8071 3440.4727 -3820.9736 3439.7979 C
-3821.1592 3439.9153 -3820.5967 3439.2998 -3821.2249 3439.2644 C
-3821.6455 3439.0103 -3821.7825 3439.6157 -3821.8264 3439.8184 C
-3821.8333 3440.0833 -3821.1663 3440.1807 -3821.3977 3440.4993 C
-3821.0703 3440.4646 -3820.9399 3440.1252 -3820.5212 3440.3799 C
-3820.8457 3440.4121 -3821.2864 3440.9478 -3821.4592 3440.5376 C
-3822.1008 3441.0303 -3822.0088 3442.2705 -3821.7063 3442.3389 C
-3821.7783 3441.9502 -3820.5359 3441.8599 -3821.3772 3441.3535 C
-3820.9993 3440.8535 -3820.3088 3440.8496 -3819.8145 3440.5376 C
-3819.8369 3440.6377 L
-3819.2231 3440.5127 L
-3819.3096 3440.6509 -3819.4951 3440.7695 -3819.5012 3441.0313 C
-3818.6511 3440.323 L
-3819.1296 3440.7998 -3818.3545 3440.6543 -3818.1367 3440.8643 C
-3818.0457 3440.46 -3817.7136 3440.1641 -3818.0322 3439.9326 C
-3818.3904 3439.6392 -3818.2407 3440.1509 -3818.5664 3440.1814 C
-3818.1052 3439.5449 L
-3818.0657 3439.6062 L
-3817.7881 3439.0852 L
-3817.1599 3439.1221 -3818.0625 3440.2979 -3817.2576 3439.7876 C
-3817.3623 3439.0767 L
-3816.4304 3439.1814 -3815.2336 3439.9812 -3814.5752 3439.6533 C
-3814.7568 3440.0576 -3814.8369 3440.7083 -3814.5872 3441.0933 C
-3814.8711 3440.9712 -3815.4417 3440.9966 -3815.8489 3441.0632 C
-3815.9272 3440.9385 -3815.3401 3440.2227 -3814.8977 3440.3765 C
-3815.1121 3439.2119 -3816.0105 3441.0791 -3816.0625 3439.8982 C
-3817.1897 3439.4873 -3816.9033 3441.0354 -3817.8601 3440.3433 C
-3817.8733 3440.8701 -3818.1321 3440.6006 -3818.1824 3441.0654 C
-3817.8992 3441.9253 -3816.9033 3441.0354 -3816.2825 3441.3369 C
-3816.3433 3441.3752 -3816.4656 3441.4541 -3816.4895 3441.5537 C
-3816.0457 3441.7083 -3815.8623 3441.5908 -3815.5522 3441.3955 C
-3815.5913 3441.3333 L
-3815.0496 3440.8184 -3815.2561 3441.7261 -3814.9373 3441.9583 C
-3814.8137 3441.8799 -3814.3704 3442.0313 -3814.4417 3441.6455 C
-3813.8643 3442.1465 L
-3813.8921 3441.5576 L
-3813.5664 3441.5225 -3813.4951 3441.9121 -3813.2 3441.5537 C
-3813.1863 3441.0269 L
-3813.9951 3440.8438 L
-3813.5852 3440.6719 -3813.8809 3440.3396 -3813.4304 3440.2295 C
-3813.9336 3440.8057 -3813.0745 3440.5215 -3813.0249 3441.0103 C
-3812.6936 3440.7139 L
-3812.7783 3440.8545 L
-3812.5183 3441.1252 -3812.4688 3440.6582 -3812.1653 3440.7271 C
-3812.5232 3440.4336 -3812.7576 3440.0632 -3813.2136 3440.4375 C
-3812.8816 3440.1416 -3812.2231 3439.8135 -3812.0615 3439.7959 C
-3811.7129 3439.5752 -3811.4695 3439.9766 -3811.1433 3440.0354 C
-3811.7693 3440.2471 -3810.9241 3441.6328 -3812.1785 3441.2544 C
-3812.1553 3441.1533 -3812.0537 3441.1763 -3812.0144 3441.2383 C
-3812.1816 3440.5654 -3812.7664 3441.2803 -3813.0383 3441.5376 C
-3812.9683 3441.9253 -3813.2527 3442.0212 -3812.7705 3442.2349 C
-3812.9287 3441.9873 -3812.3643 3441.3716 -3811.9055 3441.6895 C
-3811.9863 3442.5181 L
-3811.3184 3442.6157 L
-3811.3809 3442.6553 L
-3811.1296 3443.1895 -3810.6682 3442.5518 -3810.2083 3442.8662 C
-3809.8762 3442.5703 -3808.6023 3442.8057 -3809.1504 3441.9385 C
-3808.7375 3442.4573 -3808.3752 3441.7959 -3807.9248 3441.6846 C
-3808.4863 3441.3462 L
-3807.8225 3440.7522 -3808.0137 3441.1353 -3807.4824 3440.1924 C
-3807.4287 3440.4185 -3807.3103 3440.6052 -3807.4182 3440.8438 C
-3806.5264 3440.8877 -3805.2527 3441.1221 -3804.7295 3440.4429 C
-3804.1008 3440.4792 -3804.0022 3441.4561 -3803.1201 3441.0728 C
-3802.9343 3440.9561 -3803.2649 3440.2979 -3802.6809 3440.5354 C
-3802.6416 3440.5977 -3803.2432 3441.1504 -3802.5928 3441.0852 C
-3802.1296 3440.4473 -3801.5049 3441.4375 -3800.9023 3440.8843 C
-3800.5842 3441.1143 -3800.0322 3441.0269 -3800.1472 3441.5313 C
-3800.6511 3441.4172 -3801.3643 3441.5225 -3801.4729 3441.7644 C
-3801.4033 3441.46 -3801.8313 3441.469 -3801.46 3441.2349 C
-3802.2217 3440.8535 -3801.9543 3441.5479 -3802.6377 3441.2871 C
-3802.6848 3441.4893 -3802.2864 3441.8457 -3802.1399 3441.6653 C
-3802.1367 3442.3545 -3803.4873 3441.998 -3802.8799 3442.8247 C
-3802.1497 3442.8843 -3801.9329 3441.4473 -3801.3 3442.1729 C
-3801.5537 3442.5923 -3801.9504 3442.2373 -3802.2727 3442.9602 C
-3801.7527 3443.2383 L
-3801.3752 3442.7393 L
-3801.3977 3442.8413 L
-3800.4792 3443.4727 -3800.5481 3442.1316 -3799.7263 3441.7854 C
-3800.2024 3441.3076 -3799.6162 3440.5908 -3799.9744 3440.2979 C
-3799.4248 3440.21 -3799.0212 3440.3013 -3799.0176 3440.9912 C
-3800.0457 3441.5537 -3799.0759 3441.7207 -3800.0264 3442.4077 C
-3799.8704 3442.6553 -3800.2527 3443.4172 -3799.6863 3443.4932 C
-3799.0481 3443.0015 -3799.8772 3442.9185 -3799.2407 3442.6909 C
-3799.2031 3442.7522 -3799.1641 3442.8145 -3799.1863 3442.9163 C
-3798.8936 3442.5576 -3798.8447 3443.0454 -3798.4905 3442.6494 C
-3798.5745 3442.7876 L
-3798.1377 3443.2061 -3798.0967 3442.3135 -3797.7207 3442.7695 C
-3797.8711 3442.2573 -3797.4683 3442.3496 -3797.2351 3442.0303 C
-3797.6162 3441.8369 -3797.8225 3441.1021 -3798.5745 3441.1431 C
-3798.6653 3441.5479 -3798.6104 3441.7725 -3798.9192 3441.9683 C
-3798.4304 3441.9185 L
-3798.5359 3441.9854 -3798.6162 3442.0894 -3798.7129 3442.1709 C
-3799.1824 3441.9602 L
-3798.5872 3441.6719 -3798.8601 3441.2393 -3798.6072 3440.8184 C
-3798.0625 3440.9951 -3798.1577 3440.7073 -3797.8152 3440.8389 C
-3797.8496 3441.4326 -3796.7649 3441.8535 -3796.1377 3442.2349 C
-3796.2351 3442.2119 -3796.3608 3442.2271 -3796.4287 3442.2119 C
-3796.8843 3442.5869 -3796.1152 3442.7073 -3796.0984 3442.8701 C
-3795.7664 3442.573 L
-3795.8289 3442.6143 -3795.9153 3442.7522 -3795.7737 3442.8369 C
-3795.3242 3442.7261 -3795.3503 3442.1377 -3794.9016 3442.0264 C
-3794.8679 3442.3535 -3795.2473 3442.8496 -3794.9683 3443.0212 C
-3794.8721 3443.3062 -3794.5657 3444.0654 -3793.9695 3443.7764 C
-3793.9272 3443.6509 -3793.7727 3443.5811 -3793.5935 3443.5269 C
-3793.6184 3443.5449 -3793.6497 3443.5576 -3793.6609 3443.5811 C
-3793.2649 3443.9375 L
-3793.6023 3444.4951 -3793.9473 3443.6743 -3794.2864 3444.2344 C
-3794.3152 3444.7644 L
-3794.5791 3444.7661 -3794.9375 3444.9956 -3795.1023 3445.2705 C
-3794.7 3445.3604 -3794.6152 3445.2212 -3794.1653 3445.1106 C
-3794.1023 3445.4463 -3794.4192 3445.6953 -3794.4648 3445.7312 C
-3794.3977 3445.4292 L
-3794.9343 3444.9902 -3795.2 3445.9375 -3795.8679 3445.8389 C
-3795.9688 3445.8174 -3795.9072 3445.7783 -3795.8848 3445.677 C
-3796.4255 3446.1909 -3796.9561 3445.4873 -3797.4817 3446.1653 C
-3797.3103 3445.8853 L
-3797.6682 3446.1106 -3798.3679 3446.6328 -3799.0671 3447.1377 C
-3799.0728 3447.3438 L
-3798.9951 3447.4683 -3799.2576 3447.4602 -3799.3984 3447.3772 C
-3799.3977 3447.3743 L
-3799.7483 3447.6265 -3800.0852 3447.8584 -3800.3608 3448.0313 C
-3800.2727 3448.1592 -3800.1599 3448.2661 -3800.0305 3448.2959 C
-3799.9209 3448.0537 -3799.2783 3448.2522 -3799.3665 3447.7017 C
-3799.0696 3448.0342 -3798.5913 3447.5576 -3798.3733 3447.7661 C
-3798.7705 3447.4126 -3798.0967 3447.2471 -3798.0271 3446.9429 C
-3797.8936 3447.2913 -3797.4385 3446.9172 -3797.4905 3447.3843 C
-3797.4121 3447.5059 -3797.6855 3447.0742 -3797.8545 3447.3545 C
-3798.2705 3447.7896 -3797.0928 3447.7373 -3797.6111 3448.1509 C
-3796.9519 3447.823 -3796.0833 3447.9646 -3795.4033 3447.5352 C
-3795.7839 3447.3438 L
-3795.4817 3447.4126 -3794.7664 3447.3086 -3794.7129 3447.5342 C
-3794.9375 3447.5889 -3795.2 3447.5833 -3795.4873 3447.6768 C
-3795.5012 3448.2041 -3794.7969 3447.6729 -3794.7649 3447.9993 C
-3793.9304 3447.1265 L
-3794.2959 3447.0967 L
-3794.0657 3446.7764 -3793.3015 3447.1631 -3792.7351 3447.2373 C
-3793.0601 3447.9592 -3793.5896 3447.2559 -3794.1855 3447.5454 C
-3794.6184 3447.8186 -3793.9182 3448.2422 -3794.3279 3448.4153 C
-3794.2217 3448.5833 -3793.9543 3448.5632 -3793.8225 3448.3809 C
-3793.6609 3448.5127 L
-3794.0264 3449.1685 -3794.8457 3449.0225 -3795.3911 3449.5869 C
-3795.3433 3449.5166 -3795.3015 3449.4424 -3795.2864 3449.3662 C
-3795.7063 3449.1118 -3796.1328 3449.1221 -3796.5422 3449.2959 C
-3796.3257 3449.5022 -3796.24 3449.3623 -3796.1162 3449.2854 C
-3796.1008 3449.4478 -3796.4873 3449.5181 -3796.6335 3449.698 C
-3796.2527 3449.8894 -3796.5625 3450.0852 -3796.3215 3450.1934 C
-3796.5696 3450.3496 -3796.7705 3450.3037 -3797.0728 3450.2349 C
-3797.2295 3449.9873 -3796.9431 3449.8936 -3796.9751 3449.5686 C
-3797.2864 3449.7644 -3797.4287 3448.9873 -3797.8843 3449.3623 C
-3797.2783 3449.4993 -3798.0439 3450.0686 -3798.2527 3450.2876 C
-3798.1511 3450.3101 L
-3798.3433 3450.6909 -3798.5063 3450.7073 -3798.6392 3450.3584 C
-3798.3911 3450.2017 -3798.1511 3450.3101 -3798.2217 3449.9229 C
-3798.3855 3449.9395 -3798.5488 3449.9561 -3798.7344 3450.0728 C
-3798.5657 3449.7935 L
-3799.3799 3449.8743 L
-3799.5088 3450.2158 -3799.7241 3450.698 -3799.8369 3451.2017 C
-3800.0322 3450.8926 -3800.3042 3451.1504 -3800.4895 3451.2695 C
-3800.4033 3451.1272 L
-3800.7625 3450.8352 -3801.5615 3451.0791 -3801.6289 3451.3809 C
-3801.8855 3451.1118 -3799.8152 3449.4573 -3801.6289 3449.7373 C
-3802.3184 3449.7393 -3802.0583 3450.7017 -3802.4519 3451.0354 C
-3802.4297 3450.9375 -3802.4688 3450.8743 V
-3802.7705 3450.8037 -3802.8008 3451.1709 -3803.0488 3451.3262 C
-3802.8679 3451.4727 -3802.6057 3451.4792 -3802.5212 3451.3396 C
-3802.6121 3451.7432 -3803.1497 3451.3037 -3803.3809 3451.6221 C
-3803.0808 3451 -3803.9641 3451.3848 -3803.7312 3451.0654 C
-3804.3313 3450.6653 -3804.9729 3451.1572 -3805.2881 3451.6157 C
-3805.6953 3450.8352 -3806.0022 3451.719 -3806.6631 3451.3584 C
-3806.5615 3451.3809 -3806.3772 3451.2644 -3806.2351 3451.3486 C
-3805.8584 3450.8535 -3806.9199 3451.0889 -3806.3401 3450.6353 C
-3806.4641 3450.7139 -3806.3489 3450.8982 -3806.2217 3450.8213 C
-3805.9993 3450.7656 -3805.7898 3450.5479 -3805.8457 3450.3223 C
-3806.3843 3449.8843 L
-3806.1963 3449.7644 L
-3807.0137 3449.1582 L
-3807.0359 3449.2573 -3806.9592 3449.3809 -3806.9199 3449.4429 C
-3807.8679 3449.1768 -3808.9519 3449.5142 -3809.7825 3449.4336 C
-3809.9385 3450.8311 -3811.8271 3450.0313 -3812.4983 3450.8894 C
-3812.3184 3450.4893 -3812.22 3449.7822 -3812.3313 3449.4912 C
-3812.1816 3449.4326 -3811.8752 3448.8677 -3811.5359 3448.9854 C
-3811.4817 3449.21 -3811.0625 3449.4639 -3811.3323 3449.7207 C
-3810.3943 3449.5615 -3811.4592 3449.1079 -3811.1824 3448.5879 C
-3812.2217 3448.7236 -3812.8313 3449.5422 -3813.4873 3449.8711 C
-3813.5039 3449.7061 L
-3813.9993 3450.0181 L
-3813.5945 3450.1106 -3813.6145 3450.9033 -3814.1362 3450.6265 C
-3814.0728 3450.5869 L
-3814.3704 3450.2544 -3814.9895 3450.6455 -3815.4543 3450.594 C
-3815.7695 3451.0518 L
-3816.2351 3451 -3816.2551 3450.1475 -3816.4065 3449.6367 C
-3817.1362 3449.5767 -3817.5576 3450.2759 -3818.0759 3450.6909 C
-3818.3103 3450.3186 -3819.4033 3450.2312 -3818.8242 3449.7803 C
-3819.4824 3450.1079 -3819.3496 3452.1006 -3820.4785 3450.9966 C
-3820.1855 3450.6377 L
-3821.2649 3450.7124 -3822.8042 3451.4263 -3823.3015 3451.0488 C
-3822.9033 3449.7598 -3824.6497 3449.7373 -3824.8416 3448.4736 c
-3824.7881 3448.7622 -3825.1936 3448.8584 -3825.2527 3449.0127 C
-3825.3416 3448.8643 -3825.4895 3448.7207 -3825.6465 3448.9812 C
-3825.2256 3449.2349 -3825.9424 3450.2935 -3825.1377 3449.7832 C
-3825.5449 3450.6494 -3826.0696 3451.3262 -3826.9617 3451.2832 C
-3826.9482 3450.7559 L
-3826.2424 3450.9163 L
-3826.3137 3450.5269 -3825.9504 3450.5564 -3825.8015 3450.3772 C
-3827.1145 3450.0811 -3825.6296 3449.1431 -3826.9719 3449.2119 C
-3827.1016 3449.5537 -3827.0176 3449.4126 -3827.3665 3449.5479 C
-3827.2024 3449.5303 -3827.1729 3449.1672 -3827.4373 3449.1597 C
-3827.6912 3449.5811 L
-3828.1599 3448.7017 -3826.9153 3449.0088 -3827.3152 3448.3911 C
-3826.7969 3447.9771 -3825.8992 3447.7559 -3826.0664 3447.0833 C
-3826.9128 3446.8389 -3826.8279 3448.3433 -3827.7129 3448.0376 C
-3827.8071 3447.7515 L
-3828.1184 3447.9463 -3828.1687 3448.4102 -3828.3391 3448.6904 C
-3828.3545 3448.5269 -3828.4336 3448.4053 -3828.6335 3448.3584 C
-3829.1592 3449.0354 -3829.5081 3449.1685 -3829.9929 3449.9077 C
-3828.7024 3449.3535 -3828.8896 3450.4229 -3827.5576 3449.9287 C
-3827.7664 3450.1475 -3828.7041 3450.3076 -3828.7617 3451.0354 C
-3828.7493 3450.5078 L
-3829.1824 3450.7822 -3829.6152 3451.0537 -3830.1592 3450.8799 C
-3829.8271 3450.5833 L
-3830.5481 3450.9502 -3831.0256 3449.7822 -3831.5945 3450.6597 C
-3831.3936 3450.7073 -3831.2305 3450.6909 -3831.1064 3450.6106 c
-3831.4775 3450.8462 -3831.9431 3450.7935 -3832.3464 3450.7041 C
-3833.1809 3451.5752 L
-3833.1736 3451.3135 -3833.7024 3451.2979 -3833.4473 3450.8799 C
-3834.0481 3450.4785 -3834.3313 3451.2644 -3834.6785 3451.3955 C
-3835.2937 3450.8352 -3834.1455 3451.1455 -3834.0852 3450.4172 C
-3834.9329 3450.1729 -3835.8313 3450.3936 -3836.3096 3450.8677 C
-3836.1367 3450.9741 -3836.0527 3451.0654 -3836.0615 3451.1934 C
-3836.0872 3451.0269 -3836.4287 3451.0703 -3836.6191 3451.0654 C
-3836.75 3451.4077 L
-3837.0671 3451.1763 -3837.0225 3450.9741 -3836.7527 3450.7158 C
-3837.0559 3450.6494 -3837.4172 3451.3086 -3837.7295 3450.8145 C
-3837.2119 3450.4014 -3836.5522 3450.7617 -3836.2825 3450.5044 C
-3837.3643 3450.8423 -3837.3711 3449.4602 -3838.7424 3449.8955 C
-3838.7593 3449.7312 -3838.5271 3449.4126 -3838.7913 3449.4077 C
-3839.4033 3449.5342 -3838.9512 3450.1143 -3839.1423 3450.4951 C
-3838.6711 3450.2822 -3838.4519 3450.4912 -3838.1785 3450.9238 C
-3838.3042 3451.2017 L
-3838.3232 3451.0576 -3838.6191 3451.0493 -3838.7063 3450.9102 C
-3838.7825 3451.4771 L
-3838.7473 3450.8496 -3839.2207 3450.3716 -3839.5928 3450.6062 C
-3839.2168 3451.0615 -3839.3184 3451.0376 -3839.2161 3451.7522 C
-3839.7393 3452.4292 -3839.8064 3451.0869 -3840.3928 3451.8037 C
-3840.3489 3451.6021 -3839.8369 3451.4517 -3840.2793 3451.2979 C
-3840.6455 3451.2705 -3840.5967 3451.7593 -3840.8423 3451.9153 C
-3840.5657 3451.3926 -3840.6367 3451.0044 -3840.3369 3450.3843 C
-3839.6863 3450.3184 -3840.0745 3450.3911 -3839.4385 3450.1631 C
-3839.9768 3449.7212 L
-3839.4255 3449.6353 -3839.5759 3449.123 -3839.5305 3448.9229 C
-3840.4719 3448.3911 -3840.24 3449.7168 -3840.8457 3449.5796 C
-3841.1377 3449.9385 -3840.2783 3449.6553 -3840.7351 3450.0303 C
-3841.3015 3449.9541 -3840.8643 3450.3716 -3841.5 3450.5977 C
-3841.3936 3450.3584 L
-3841.5879 3450.0479 -3841.78 3450.4307 -3842.0049 3450.4829 C
-3842.2522 3450.6416 -3841.7249 3452.2998 -3842.7417 3452.3352 C
-3842.6919 3452.1895 -3842.6736 3452.0967 -3842.6736 3452.0354 C
-3841.6816 3447.6455 L
-3842.7119 3447.6563 -3843.8992 3447.5342 -3845.0923 3447.2393 C
-3845.3733 3446.3809 -3844.2407 3446.5313 -3844.3137 3446.1455 C
-3843.7695 3446.3213 L
-3843.8 3446.6851 -3844.9097 3446.4336 -3844.4182 3447.0767 C
-3843.4573 3446.8145 -3843.0212 3447.2334 -3842.1096 3446.4829 C
-3842.3928 3445.623 -3843.3103 3446.6353 -3843.9033 3445.9712 C
-3843.6543 3446.0269 -3843.4441 3445.9326 -3843.24 3445.8096 C
-3843.7969 3445.6997 -3844.3928 3445.5811 -3845.0264 3445.4478 C
-3845.1687 3445.6563 L
-3844.7417 3445.7522 -3844.4463 3445.8262 -3844.4082 3445.8574 C
-3844.9744 3445.7822 -3845.4519 3446.2583 -3845.4895 3446.8877 C
-3845.3889 3446.9102 L
-3845.5935 3447.1062 L
-3845.7263 3447.0664 -3845.8591 3447.0269 -3845.9912 3446.9854 C
f
-3882.6936 3446.8369 m
-3882.6592 3446.7764 -3882.6321 3446.7061 -3882.6121 3446.6182 c
-3882.6328 3446.71 -3882.6096 3446.7695 -3882.6936 3446.8369 C
f
0 D
-3834.9033 3444.8752 m
-3835.6584 3444.7832 -3836.4199 3444.6118 -3837.1455 3444.5354 C
-3835.8359 3445.7793 -3834.9153 3446.7207 -3837.1008 3446.6963 C
-3837.2439 3446.7854 L
-3836.9583 3446.9385 -3836.4656 3446.9573 -3836.0022 3446.8672 C
-3835.6272 3446.4263 -3834.4172 3444.8062 -3834.4304 3444.6631 C
-3834.5632 3444.3145 -3834.7568 3444.6953 -3834.9983 3444.5889 C
-3834.9033 3444.8752 L
f
-3834.3665 3446.9583 m
-3833.9385 3447.0967 -3834.0359 3446.8213 -3833.9695 3446.573 C
-3834.1201 3446.6052 -3834.2705 3446.6377 -3834.4192 3446.6672 C
-3834.3623 3446.7295 -3834.3342 3446.8174 -3834.3665 3446.9583 C
f
1 D
-3833.9951 3446.3252 m
-3834.0432 3446.3186 -3834.0842 3446.3076 -3834.1057 3446.2744 C
-3833.9951 3446.3252 L
f
0 D
-3842.3191 3446.0103 m
-3842.3 3446.0044 -3842.2932 3445.9993 -3842.2751 3445.9951 C
-3842.3762 3445.9751 -3842.4775 3445.9573 -3842.5833 3445.9375 C
-3842.5422 3445.9771 -3842.4641 3446.0078 -3842.3191 3446.0103 C
f
-3841.4504 3446.6182 m
-3841.3489 3446.1641 L
-3841.4431 3446.1475 -3841.5393 3446.1294 -3841.6377 3446.1118 C
-3841.6052 3446.3174 -3841.5713 3446.4966 -3841.4504 3446.6182 C
f
-3838.6584 3448.1118 m
-3838.4824 3447.5664 -3837.8928 3447.5422 -3837.8567 3446.9126 C
-3837.8191 3446.7515 -3837.9431 3446.6895 -3838.0823 3446.6377 C
-3838.2375 3446.623 -3838.4033 3446.6055 -3838.5791 3446.5852 C
-3838.5852 3446.6768 -3838.6201 3446.7622 -3838.6785 3446.8438 C
-3838.5049 3446.9229 -3838.3889 3447.0791 -3838.4592 3447.4646 C
-3838.9055 3446.623 -3838.8591 3448.0654 -3839.3416 3447.8496 C
-3839.4951 3448.2935 -3838.8047 3448.2896 -3838.6584 3448.1118 C
f
1 D
-3801.5752 3446.4727 m
-3801.5615 3446.5269 -3801.5144 3446.6685 -3801.4482 3446.8438 C
-3801.7881 3447.1553 L
-3802.3943 3447.0181 -3802.8799 3446.1143 -3803.4255 3446.8916 C
-3803.6809 3446.6963 -3803.8176 3446.2832 -3803.9482 3445.9429 C
-3803.8232 3445.9683 -3803.7063 3446.0015 -3803.6089 3446.0537 C
-3802.0791 3444.9153 -3802.8113 3447.2544 -3801.5752 3446.4727 C
f
0 D
-3808.5449 3445.3643 m
-3808.4824 3445.3252 -3808.46 3445.2227 Y
-3809.8145 3446.3772 -3810.9297 3446.7119 -3811.6599 3446.6672 C
-3811.5183 3447.1252 -3810.8633 3447.4792 -3810.5522 3447.6685 C
-3810.8279 3448.1904 L
-3811 3447.7803 L
-3811.4785 3448.2544 L
-3811.3447 3448.6052 -3810.9583 3448.5313 -3810.7 3448.8013 C
-3810.6775 3448.7017 -3809.8503 3448.0933 -3809.6191 3447.7725 C
-3810.28 3447.4121 L
-3810.1016 3447.5576 -3809.2249 3447.4375 -3808.8772 3447.3037 C
-3808.8704 3447.0422 -3809.4695 3446.6392 -3809.5449 3447.2073 C
-3809.6162 3446.8186 -3808.9255 3446.8145 -3809.3623 3446.3982 C
-3808.8447 3445.9854 -3808.0212 3446.3311 -3807.6392 3446.5225 C
-3807.5745 3447.1753 L
-3807.1553 3447.4287 -3807.2913 3446.3894 -3806.7932 3446.7661 C
-3807.4055 3446.8936 -3806.6897 3447.4812 -3807.1768 3447.5303 C
-3807.0212 3447.7764 -3807.1736 3448.219 -3806.6855 3448.1709 C
-3806.2793 3447.3076 -3806.1711 3448.7119 -3805.7871 3447.9502 C
-3805.5305 3448.219 -3806.0632 3448.469 -3805.5583 3448.5852 C
-3804.9792 3448.1316 -3805.0127 3447.8062 -3804.9768 3447.1782 C
-3805.5183 3447.0022 -3805.5852 3447.9951 -3806.0281 3447.8423 C
-3805.1472 3446.7661 L
-3805.3096 3446.6143 -3805.4297 3446.5977 -3805.5305 3446.6416 C
-3805.3535 3446.5791 -3805.2031 3446.4199 -3805.0745 3446.1997 c
-3805.0012 3446.0767 -3804.9336 3445.9712 -3804.8711 3445.8809 C
-3805.3704 3445.8752 -3805.8137 3445.8599 -3805.8921 3445.5923 C
-3805.8232 3445.2876 L
-3806 3445.0078 -3806.2881 3445.2271 -3806.4209 3445.4502 C
-3806.8679 3445.4829 -3807.3145 3445.9077 -3807.4121 3445.5132 C
-3807.2424 3445.2344 L
-3807.7922 3445.3223 -3807.8535 3445.3604 -3808.5449 3445.3643 C
f
-3826.5625 3444.6709 m
-3826.2295 3445.7876 -3825.8623 3446.7744 -3824.3081 3446.5791 C
-3824.4304 3446.6563 L
-3823.6472 3447.3574 -3822.9033 3445.7295 -3821.9504 3446.5078 C
-3822.4128 3446.9287 -3822.3879 3446.8894 -3822.8984 3447.8535 C
-3822.4023 3447.5376 L
-3822.5398 3448.1455 -3822.0449 3447.8311 -3821.6809 3447.8599 C
-3822.0022 3448.5833 L
-3822.2207 3448.3752 -3822.7871 3448.2998 -3822.7705 3448.4646 C
-3822.6465 3448.3848 -3823.5183 3447.5518 -3823.9919 3447.7622 C
-3823.9431 3448.2522 -3822.9431 3448.0537 -3823.3896 3448.8545 C
-3822.9961 3448.5181 -3822.9473 3449.0066 -3822.5359 3448.8352 C
-3822.9304 3449.1709 -3822.6335 3449.5022 -3822.9272 3449.8599 C
-3822.2527 3449.6934 L
-3822.2351 3449.8562 -3823.2351 3450.0557 -3822.6824 3450.6582 C
-3822.4121 3450.4014 -3821.6904 3450.7236 -3821.6775 3450.1963 C
-3821.6609 3450.3584 L
-3821.1553 3450.4727 -3821.4385 3449.6118 -3820.8176 3449.9126 C
-3820.8103 3449.6475 -3820.9287 3449.4639 -3821.1511 3449.5181 C
-3821.3391 3449.6353 -3821.3679 3449.9993 -3821.7551 3450.0728 C
-3821.9287 3449.6597 -3821.2881 3450.1243 -3821.5569 3449.4263 c
-3821.6904 3449.0791 -3822.5791 3449.7261 -3822.2959 3448.9424 C
-3821.7913 3449.0557 L
-3821.7783 3448.5269 -3821.4128 3448.5576 -3821.4231 3448.1316 C
-3821.1145 3447.9375 -3820.8232 3448.5313 -3820.5081 3448.0728 C
-3820.3772 3447.7312 -3820.6057 3447.0967 -3820.0842 3447.373 C
-3819.6768 3448.1543 -3818.4761 3448.0022 -3818.0264 3447.8894 C
-3817.6328 3447.5537 L
-3817.6663 3447.2295 -3818.3848 3447.5977 -3818.1321 3447.1768 C
-3817.5183 3447.0493 L
-3817.5657 3447.2522 L
-3817.3623 3447.2979 -3817.1543 3447.0796 -3816.9688 3446.9639 C
-3817.1599 3447.3438 -3817.6023 3447.1909 -3817.5144 3447.7412 C
-3817.2263 3447.8496 -3817.1824 3448.0537 -3816.9172 3447.9478 C
-3816.9751 3447.9873 -3817.0249 3448.0413 -3817.0176 3448.1182 C
-3816.4343 3448.3562 -3816.4543 3447.5022 -3816.3081 3447.323 c
-3815.7217 3446.6084 -3816.8992 3446.6597 -3816.8242 3446.0933 C
-3815.1121 3445.7913 L
-3815.2583 3445.969 -3815.4055 3446.1475 -3815.3503 3446.373 C
-3814.9304 3446.6272 -3815.3408 3446.7998 -3814.7512 3446.7732 C
-3814.7932 3446.0215 -3814.0088 3446.3047 -3813.5923 3445.8701 C
-3813.3977 3446.1782 -3813.3577 3446.2393 -3813.7832 3446.2493 C
-3813.7344 3446.7373 -3813.1631 3446.5493 -3812.96 3446.594 C
-3812.8423 3446.4727 -3812.6416 3446.4019 -3812.5144 3446.2935 C
-3812.6848 3446.0493 -3812.6121 3445.7437 -3812.2432 3445.5354 C
-3812.2217 3445.4336 L
-3812.8264 3445.2998 -3813.7664 3444.7661 -3814.1455 3445.2661 C
-3814.0383 3445.0244 L
-3814.7383 3444.6021 -3815.5615 3445.9014 -3815.8843 3444.9792 C
-3815.8545 3444.6143 -3816.0249 3444.8955 -3816.0127 3444.3677 C
-3816.5281 3444.7803 L
-3816.4209 3444.5413 L
-3817.2976 3444.6597 L
-3817.2744 3444.5615 L
-3817.6912 3445.0391 -3818.0176 3445.4287 -3818.2783 3445.7471 C
-3818.2793 3445.9771 -3818.2522 3446.0479 -3818.3911 3446.2173 C
-3818.5305 3446.3311 -3818.6362 3446.3486 -3818.7305 3446.3184 C
-3818.7312 3446.3186 -3818.7312 3446.3186 -3818.7312 3446.3213 C
-3818.7312 3446.3186 -3818.7312 3446.3186 -3818.7312 3446.3184 C
-3818.9463 3446.2515 -3819.0896 3445.9209 -3819.3545 3445.7854 C
-3818.5393 3445.7295 L
-3818.4729 3445.3389 -3818.5422 3444.9336 -3818.9417 3444.6597 C
-3818.7783 3444.6455 -3818.71 3444.3408 -3818.9121 3444.2959 C
-3818.9343 3444.3975 -3819.4463 3444.5454 -3819.2512 3444.8562 C
-3820.0256 3444.9993 -3821.2793 3443.9736 -3822.4551 3444.7158 C
-3821.6104 3444.2695 -3823.1321 3444.1924 -3822.1943 3444.0313 C
-3822.8489 3443.4072 -3822.7576 3444.6475 -3823.4248 3444.5493 C
-3823.4817 3444.3252 -3823.0615 3444.5791 -3822.9082 3444.1353 C
-3824.0176 3443.8853 -3824.78 3445.1455 -3825.8533 3444.9561 C
-3825.8992 3444.4688 L
-3826.1023 3444.5313 -3826.3279 3444.6006 -3826.5625 3444.6709 C
f
-3828.6855 3445.2783 m
-3828.8921 3445.3333 -3829.1016 3445.3894 -3829.3145 3445.4463 C
-3829.2937 3445.4541 -3829.2744 3445.4541 -3829.2527 3445.4602 C
-3829.8733 3445.8535 L
-3829.4919 3446.0435 -3829.2407 3446.5791 -3829.7744 3446.8286 C
-3829.7295 3446.6272 -3829.8855 3446.3799 -3829.7 3446.2622 C
-3830.0576 3445.969 -3830.8423 3445.6865 -3830.6377 3446.4229 C
-3829.9504 3445.7271 -3830.4775 3447.3604 -3829.9375 3446.8438 C
-3830.2273 3447.323 -3830.5144 3447.1079 -3830.7881 3447.3223 C
-3830.5032 3446.9209 -3830.8545 3446.4126 -3831.2825 3446.2212 C
-3831.4688 3446.3396 -3831.9729 3446.2261 -3832.2825 3446.4209 C
-3832.1721 3446.8711 -3832.4417 3447.1289 -3831.9373 3447.2422 C
-3832.1223 3447.3604 -3832.4087 3447.4541 -3832.7295 3447.2227 C
-3832.6023 3447.1455 -3832.3799 3447.0894 -3832.3953 3446.927 C
-3832.6023 3446.5127 -3832.8447 3446.5313 -3832.9785 3446.3545 C
-3833.0852 3446.3799 -3833.1929 3446.4019 -3833.2976 3446.4263 C
-3833.2664 3446.4646 -3833.2393 3446.5166 -3833.22 3446.5811 C
-3833.5745 3446.9785 L
-3833.1023 3446.7661 -3833.3562 3447.1865 -3833.3623 3447.4502 c
-3833.3496 3446.9229 -3833.6663 3447.3809 -3833.8279 3447.3982 C
-3833.4768 3447.9561 L
-3833.6465 3448.2349 -3834.0759 3447.5537 -3833.9873 3448.1052 C
-3833.2424 3448.3262 -3832.9561 3448.2312 -3832.2825 3448.0654 C
-3832.5559 3447.6328 L
-3831.7959 3447.3267 -3832.0872 3448.3752 -3831.2344 3448.3545 C
-3830.8799 3447.9592 -3829.9519 3448.3267 -3829.9343 3447.5352 C
-3830.0413 3447.7764 -3829.4033 3448.2393 -3829.1111 3447.8809 C
-3828.7881 3447.1572 -3827.8113 3447.0596 -3828.1072 3446.7295 C
-3828.3711 3446.7207 -3828.7263 3447.1182 -3828.9385 3446.6475 C
-3828.4265 3446.4966 L
-3828.7625 3446.1021 L
-3828.5889 3446.2437 -3828.6057 3445.8584 -3828.6855 3445.2783 C
f
1 D
-3840.1455 3440.8389 m
-3840.1511 3440.8352 -3840.1584 3440.8333 -3840.1653 3440.8286 C
-3840.1577 3440.8311 -3840.1504 3440.8311 -3840.1433 3440.8311 C
-3840.1455 3440.8389 L
f
*U
0 D
-3793.9968 3444.8311 m
-3793.8496 3444.6509 -3793.4856 3444.6807 -3793.5569 3444.2935 C
-3793.5481 3444.719 -3794.2073 3444.3584 -3793.9968 3444.8311 C
f
-3793.5615 3445.248 m
-3793.5359 3445.1465 -3793.5537 3444.9829 -3793.3904 3444.9683 C
-3793.8401 3445.0767 L
-3793.5615 3445.248 L
f
-3793.1052 3448.1597 m
-3792.8733 3447.8423 -3792.7263 3447.6631 -3792.3623 3447.6919 C
-3792.2256 3448.7312 -3792.9583 3447.9824 -3793.1233 3448.9517 C
-3792.4561 3449.0493 -3792.2512 3448.1416 -3791.7024 3448.0537 C
-3791.9744 3447.6201 -3793.0852 3447.3701 -3793.1052 3448.1597 C
f
-3793.4016 3449.4736 m
-3793.0305 3449.2393 L
-3793.0671 3449.1782 L
-3793.4385 3449.4126 L
-3793.4016 3449.4736 L
f
-3801.4385 3440.4429 m
-3801.4719 3440.1182 -3801.7031 3440.4385 -3801.8271 3440.5166 C
-3801.7263 3440.5376 -3801.5852 3440.623 -3801.4385 3440.4429 C
f
-3874.3503 3440.1052 m
-3877.1809 3440.4185 L
-3876.3665 3440.3369 -3875.6145 3440.2959 -3874.3503 3440.1052 C
f
-3810.8313 3442.5664 m
-3810.0713 3442.2603 -3809.7336 3441.6997 -3808.9592 3441.5576 C
-3809.9775 3440.9033 -3810.3042 3442.5796 -3811.1592 3441.9092 C
-3810.8313 3442.5664 L
f
-3810.5632 3439.9751 m
-3810.4373 3440.5869 -3811.1497 3440.6919 -3811.0393 3441.1406 C
-3810.5271 3440.9912 -3810.8008 3440.5576 -3810.3359 3440.6104 C
-3810.5632 3439.9751 L
f
-3807.1191 3450.0889 m
-3807.3496 3450.4072 L
-3807.1641 3450.2913 L
-3807.1191 3450.0889 L
f
-3814.0271 3440.5181 m
-3813.9431 3440.3799 L
-3814.3242 3440.1865 L
-3814.0271 3440.5181 L
f
-3813.8591 3440.2393 m
-3813.9431 3440.3799 L
-3813.9431 3440.3799 L
-3813.8591 3440.2393 L
f
-3807.4153 3451.4014 m
-3807.0728 3451.5313 L
-3806.9033 3451.2515 L
-3807.4153 3451.4014 L
f
-3810.4385 3448.1187 m
-3810.1321 3447.9229 L
-3810.1929 3447.9602 -3810.6121 3447.7092 -3810.4385 3448.1187 C
f
-3816.3545 3440.2583 m
-3816.7273 3440.4932 L
-3816.6892 3440.5537 L
-3816.3176 3440.3186 L
-3816.3545 3440.2583 L
f
-3812.8369 3449.8057 m
-3812.6252 3450.2759 -3813.4482 3449.9326 -3813.0127 3450.3486 C
-3812.6252 3450.2759 -3812.7825 3450.0303 -3812.8369 3449.8057 C
f
-3817.3352 3446.6157 m
-3817.3855 3446.6157 -3817.4385 3446.6328 -3817.4895 3446.6851 C
-3817.4287 3446.6653 -3817.3777 3446.6406 -3817.3352 3446.6157 C
f
-3817.3352 3446.6157 m
-3817.1729 3446.6157 -3817.0105 3446.7959 -3816.8992 3446.6597 C
-3817.1016 3446.4473 -3817.1753 3446.5269 -3817.3352 3446.6157 C
f
-3819.1953 3446.7256 m
-3819.0481 3446.7593 L
-3819.1985 3446.9912 -3819.1272 3446.9573 -3818.9929 3446.7705 C
-3818.8369 3446.7544 -3818.8457 3446.6055 -3818.8271 3446.5039 C
-3818.7959 3446.4473 -3818.7649 3446.3853 -3818.7312 3446.3213 C
-3818.7793 3446.3809 -3818.8225 3446.4404 -3818.8591 3446.4912 C
-3819.1008 3446.4873 -3819.2483 3446.5103 -3819.1953 3446.7256 C
f
-3826.1052 3438.7998 m
-3825.5615 3438.9751 -3825.4209 3439.0596 -3825.4504 3439.4248 C
-3824.9343 3439.5413 -3825.0144 3438.9126 -3824.7031 3438.7661 C
-3825.2871 3438.8369 -3825.4065 3438.6685 -3826.1052 3438.7998 C
f
-3824.7031 3438.7661 m
-3824.6377 3438.7593 -3824.5752 3438.7515 -3824.4993 3438.7373 C
-3824.5842 3438.7261 -3824.6472 3438.7412 -3824.7031 3438.7661 C
f
-3817.0212 3450.7173 m
-3817.3591 3451.2759 L
-3817.2351 3451.198 L
-3817.0212 3450.7173 L
f
-3826.9121 3438.6157 m
-3826.8113 3438.6392 -3826.6497 3438.623 -3826.5703 3438.748 C
-3826.5413 3438.3809 -3827.0127 3438.5933 -3826.9121 3438.6157 c
f
-3824.8152 3445.7744 m
-3824.76 3445.998 -3824.4121 3445.8643 -3824.2705 3445.9502 C
-3824.4736 3445.9033 -3824.6392 3445.23 -3824.8152 3445.7744 C
f
-3828.4719 3440.1221 m
-3828.3711 3440.1455 -3828.2161 3440.3911 -3828.2832 3440.6934 C
-3828.1367 3440.5142 -3827.9385 3439.8701 -3828.4719 3440.1221 C
f
-3825.8088 3445.7092 m
-3825.7312 3445.8333 L
-3825.3591 3445.5977 L
-3825.8088 3445.7092 L
f
-3824.4817 3451.1006 m
-3824.0632 3450.6653 -3825.1455 3450.0493 -3824.4248 3449.6807 C
-3825.3545 3449.2246 -3824.3535 3450.2979 -3825.0393 3450.2271 C
-3824.6377 3450.3743 -3824.4409 3450.9253 -3824.4817 3451.1006 C
f
-3825.0393 3450.2271 m
-3825.0977 3450.2041 -3825.1609 3450.1909 -3825.2295 3450.1895 C
-3825.1536 3450.21 -3825.0923 3450.2212 -3825.0393 3450.2271 C
f
-3830.9287 3447.469 m
-3830.8679 3447.4238 -3830.8264 3447.3743 -3830.7881 3447.3223 C
-3830.8359 3447.3584 -3830.8816 3447.4033 -3830.9287 3447.469 C
f
-3827.2295 3450.5869 m
-3826.6023 3449.9326 L
-3827.0212 3450.3677 -3828.0752 3450.3413 -3828.0095 3450.9927 C
-3827.6682 3451.1252 -3827.2576 3450.9517 -3827.0889 3450.6709 C
-3827.2295 3450.5869 L
f
-3834.4287 3438.7764 m
-3834.1577 3438.5181 L
-3834.4961 3438.4424 L
-3834.3992 3438.54 -3834.5745 3439.0181 -3834.4287 3438.7764 C
f
-3834.5615 3438.4287 m
-3834.4961 3438.4424 L
-3834.5105 3438.4263 -3834.5313 3438.4199 -3834.5615 3438.4287 C
f
-3829.7424 3447.1543 m
-3829.5398 3447.1997 -3829.3777 3447.1814 -3829.1929 3447.0664 C
-3829.2695 3446.9429 -3829.7744 3446.8286 -3829.7424 3447.1543 C
f
-3836.3369 3439.7236 m
-3835.8896 3439.6118 L
-3836.3777 3439.6597 L
-3836.3369 3439.7236 L
f
-3838.4241 3438.6157 m
-3838.5012 3438.4932 L
-3838.8721 3438.7271 L
-3838.7937 3438.8496 L
-3838.4241 3438.6157 L
f
-3835.6943 3451.4326 m
-3835.3911 3451.5022 -3835.1543 3450.9172 -3835.2336 3450.7935 C
-3835.8215 3450.8186 L
-3835.6721 3451.3311 -3835.6584 3450.8037 -3835.3176 3450.9336 C
-3835.6943 3451.4326 L
f
-3853.9153 3439.573 m
-3853.7839 3439.2312 -3853.1409 3439.4292 -3853.1072 3439.7544 C
-3853.1936 3439.8955 -3853.5422 3440.0303 -3853.3232 3440.2373 C
-3852.8145 3439.3975 L
-3852.1377 3439.9209 -3853.3289 3440.5015 -3853.6631 3440.7979 C
-3852.9736 3440.9063 -3852.7693 3440.3545 -3852.0359 3440.3574 C
-3852.2522 3440.2822 -3852.3889 3440.0728 -3852.5032 3439.8926 C
-3852.5281 3439.3013 -3851.8447 3439.5632 -3851.3562 3439.5166 C
-3851.6672 3439.2598 -3851.4873 3439.0435 -3851.2607 3438.8115 C
-3851.22 3438.7935 -3851.1929 3438.7593 -3851.1736 3438.719 C
-3851.1472 3438.6919 -3851.1223 3438.6653 -3851.0967 3438.6367 C
-3851.1553 3438.6377 L
-3851.1511 3438.5713 -3851.1641 3438.4912 -3851.2063 3438.3809 C
-3851.6162 3438.5537 -3851.9297 3438.0596 -3852.1936 3438.0518 C
-3851.9329 3439.0132 -3853.0923 3438.2744 -3853.4241 3438.5703 C
-3853.8071 3438.6653 L
-3853.9504 3438.6672 L
-3853.9792 3438.5615 -3853.9385 3438.4292 -3853.72 3438.2393 C
-3853.9023 3438.4287 -3854.5105 3438.3623 -3854.4543 3438.6709 C
-3855.8423 3438.6846 L
-3855.8855 3438.6455 -3855.9287 3438.5967 -3855.9607 3438.5269 C
-3856.0088 3438.5879 -3856.0168 3438.6377 -3856.0105 3438.6865 C
-3862.0576 3438.748 L
-3861.7593 3438.823 -3861.5012 3439.0435 -3861.1936 3439.1494 C
-3861.6553 3439.7876 -3860.6892 3439.2644 -3860.8247 3439.8677 C
-3861.0322 3440.0869 -3861.3359 3440.0181 -3861.5168 3439.8716 C
-3861.5842 3440.1763 -3861.3264 3440.4463 -3861.3562 3440.8101 C
-3860.5935 3441.1934 -3860.4768 3439.7349 -3859.7312 3439.9573 C
-3859.7607 3440.3223 -3859.9912 3440.6416 -3859.5032 3440.5923 C
-3859.6272 3440.6709 L
-3858.8457 3440.2622 -3859.0183 3441.4966 -3858.5264 3440.4951 C
-3858.5393 3441.0225 L
-3858.1848 3440.6252 -3857.4951 3440.6221 -3857.1064 3440.5493 C
-3857.1296 3440.6509 L
-3856.0393 3440.0479 -3856.5176 3440.5225 -3855.2932 3440.2705 C
-3855.8567 3440.8853 L
-3855.4343 3441.1394 -3855.3391 3440.4712 -3855.0359 3440.54 C
-3855.0576 3440.6416 -3854.9873 3441.0269 -3855.2737 3441.123 C
-3853.7881 3440.1851 L
-3853.4336 3439.7876 -3853.8601 3439.7979 -3853.9153 3439.573 C
f
-3852.0359 3440.3574 m
-3851.9573 3440.3853 -3851.8679 3440.3975 -3851.7625 3440.3772 C
-3851.8643 3440.3604 -3851.9519 3440.3574 -3852.0359 3440.3574 C
f
-3862.4824 3438.7522 m
-3862.0576 3438.748 L
-3862.1892 3438.7158 -3862.3264 3438.7061 -3862.4824 3438.7522 C
f
-3849.9065 3439.2061 m
-3850.1641 3438.9336 -3849.7136 3438.8247 -3849.6687 3438.6221 C
-3850.5913 3438.6316 L
-3850.5872 3438.8352 -3850.6785 3439.0625 -3850.6599 3439.248 C
-3849.9065 3439.2061 L
f
-3850.8584 3438.2493 m
-3850.8896 3438.3894 -3850.9873 3438.5166 -3851.0967 3438.6367 C
-3850.5913 3438.6316 L
-3850.5945 3438.4792 -3850.6511 3438.3408 -3850.8584 3438.2493 C
f
-3850.7607 3449.0894 m
-3850.9241 3449.1079 L
-3851.1711 3449.2644 L
-3850.7607 3449.0894 L
f
-3853.3152 3448.1963 m
-3853.1201 3448.5044 -3852.75 3448.2705 -3852.6262 3448.1924 C
-3853.0527 3448.2017 -3852.8679 3448.0852 -3853.3152 3448.1963 C
f
-3852.7881 3451.4966 m
-3853.1992 3451.6709 L
-3853.1609 3451.7312 L
-3852.7881 3451.4966 L
f
-3865.6223 3440.8281 m
-3865.6897 3440.8396 -3865.7551 3440.8486 -3865.8232 3440.8623 C
-3865.7312 3440.8643 -3865.6711 3440.8496 -3865.6223 3440.8281 C
f
-3862.0945 3440.3252 m
-3863.0752 3439.7334 -3861.4519 3439.8333 -3861.76 3439.0752 C
-3862.2937 3439.3262 L
-3862.2483 3439.123 L
-3862.8992 3439.1895 L
-3862.7656 3439.5376 -3862.6653 3439.5591 -3862.6943 3439.9248 C
-3863.5632 3439.7822 -3862.9683 3439.4912 -3863.6057 3439.0303 C
-3864.5769 3439.0967 L
-3864.4983 3438.9873 L
-3864.5801 3438.9951 -3864.6162 3439.0413 -3864.6443 3439.1006 C
-3867.9172 3439.3281 L
-3868.5127 3439.6182 -3867.5879 3439.9854 -3868.0271 3440.5225 C
-3867.3369 3440.5212 -3866.3113 3440.9102 -3866.2527 3440.1814 C
-3866.2759 3440.2822 -3866.3215 3440.4829 -3866.1816 3440.5686 C
-3865.7825 3439.969 L
-3866.1631 3439.7783 L
-3865.7617 3439.1807 -3864.4656 3439.3135 -3864.2312 3439.6846 C
-3864.9683 3439.8887 -3864.5984 3440.6084 -3865.6252 3440.2173 C
-3865.5791 3440.4019 -3865.3911 3440.7271 -3865.6223 3440.8281 C
-3864.4192 3440.6157 -3863.3408 3440.9478 -3862.0945 3440.3252 C
f
-3874.1631 3440.6763 m
-3874.1536 3440.6104 L
-3874.1753 3440.6455 -3874.1824 3440.6719 -3874.1631 3440.6763 C
f
-3873.7593 3440.7661 m
-3873.1729 3440.0518 L
-3874.0872 3440.1094 L
-3874.1536 3440.6104 L
-3874.0728 3440.4829 -3873.7522 3440.2295 -3873.6279 3440.4253 C
-3873.7593 3440.7661 L
f
-3872.4919 3439.6201 m
-3872.9641 3439.8333 -3872.9385 3440.4229 -3872.6809 3440.6919 C
-3873.1145 3440.9646 -3872.9097 3440.0576 -3873.2083 3440.6807 C
-3873.1985 3441.1062 -3872.6641 3440.8562 -3872.5413 3440.7783 C
-3872.4919 3439.6201 L
f
-3869.0081 3439.9307 m
-3869.1409 3440.1753 L
-3868.8137 3440.2393 L
-3869.0081 3439.9307 L
f
-3869.1409 3440.1753 m
-3869.4656 3440.1094 L
-3869.4431 3440.2913 -3869.4209 3440.4683 -3869.3679 3440.5923 C
-3869.1409 3440.1753 L
f
-3870.3176 3439.9395 m
-3870.4551 3439.8955 -3870.6072 3439.8623 -3870.7922 3439.8462 C
-3870.3176 3439.9395 L
f
-3869.9463 3440.0894 m
-3869.9573 3440.0127 L
-3870.3176 3439.9395 L
-3870.1848 3439.9854 -3870.0657 3440.0354 -3869.9463 3440.0894 C
f
-3869.4656 3440.1094 m
-3869.5183 3439.6963 -3869.5801 3439.2622 -3870.0496 3439.3772 C
-3869.9573 3440.0127 L
-3869.4656 3440.1094 L
f
-3855.7783 3450.8743 m
-3856.1497 3451.1079 L
-3856.1104 3451.1719 L
-3855.7393 3450.9375 L
-3855.7783 3450.8743 L
f
-3857.9209 3450.4966 m
-3858.0127 3450.5686 -3858.0823 3450.6455 -3858.1455 3450.7236 C
-3858.0488 3450.6782 -3857.9719 3450.6094 -3857.9209 3450.4966 C
f
-3859.5137 3453.3186 m
-3859.9504 3452.9033 -3858.9111 3452.7695 -3859.72 3452.5852 C
-3859.7913 3452.198 -3859.4121 3451.6992 -3859.0313 3451.8916 C
-3859.0615 3452.2559 -3859.4023 3452.1252 -3859.1682 3452.4966 C
-3858.9153 3452.0752 -3858.8191 3452.3623 -3858.9072 3451.8135 C
-3858.4817 3451.4712 -3858.4343 3451.0811 -3858.1455 3450.7236 C
-3858.6599 3450.9646 -3859.74 3450.4019 -3860.3928 3451.1062 C
-3860.7527 3451.7661 -3860.5344 3452.6672 -3860.5359 3453.6201 C
-3860.4817 3453.8438 -3859.5488 3453.9502 -3859.5137 3453.3186 C
f
-3858.8264 3454.2705 m
-3858.6243 3454.3174 -3858.5625 3454.2793 -3858.4385 3454.1997 C
-3858.4719 3453.8743 -3858.6631 3454.2559 -3858.8264 3454.2705 C
f
-3863.4719 3447.094 m
-3863.5105 3447.2295 -3863.8762 3447.3975 -3863.7976 3447.6316 C
-3863.2432 3447.4602 L
-3863.3733 3447.4385 -3863.4192 3447.2725 -3863.4719 3447.094 C
f
-3863 3447.3877 m
-3863.2432 3447.4602 L
-3863.1824 3447.4727 -3863.1072 3447.4541 -3863 3447.3877 C
f
-3863.4983 3447.0093 m
-3863.4895 3447.0376 -3863.4817 3447.0664 -3863.4719 3447.094 C
-3863.4641 3447.0654 -3863.4656 3447.0354 -3863.4983 3447.0093 C
f
-3871.6631 3439.7017 m
-3871.6553 3439.4404 -3871.9023 3439.5967 -3872.0264 3439.6743 C
-3871.9255 3439.6963 -3871.7839 3439.7822 -3871.6631 3439.7017 C
f
-3880.9641 3440.7312 m
-3881.1824 3440.5225 L
-3881.1052 3440.6475 -3881.0657 3440.7092 -3880.9641 3440.7312 C
f
-3884.3279 3447.8765 m
-3884.3342 3447.927 -3884.3503 3447.969 -3884.3721 3448.0093 C
-3884.3503 3447.9771 -3884.3352 3447.9336 -3884.3279 3447.8765 c
f
-3884.3721 3448.0093 m
-3884.5212 3448.2271 -3884.9817 3447.8887 -3885.1472 3448.219 C
-3885.1262 3448.1187 L
-3885.4343 3448.3145 L
-3885.1455 3448.2854 -3884.5393 3448.3267 -3884.3721 3448.0093 C
f
U
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 40)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7756.4521 7325.5977 m
-7364.6909 7325.5977 L
-7364.6909 7233.9082 L
-7756.4521 7233.9082 L
-7756.4521 7325.5977 L
n
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
1 XR
-7369.3535 7267.9209 m
-7371.1113 7267.9209 -7490.7817 7270.0918 -7566.6519 7271.4717 C
-7587.4663 7270.5352 -7608.2529 7269.2227 -7629.0547 7267.5024 C
-7631.5327 7267.1514 -7634.3472 7266.7949 -7635.8584 7266.6006 c
-7636.7114 7266.4863 -7637.5732 7266.3857 -7638.4375 7266.2935 C
-7637.9829 7266.0605 -7637.54 7265.7998 -7637.1167 7265.4941 C
-7636.25 7264.7324 -7635.3955 7263.8325 -7634.8735 7262.4541 C
-7634.8979 7262.1689 -7634.6997 7261.8193 -7634.6523 7261.5293 c
-7634.5532 7260.9121 -7634.6382 7260.1631 -7634.7319 7259.6274 c
-7634.7939 7259.2725 -7634.9551 7259.0254 -7635.0259 7258.7314 c
-7635.0488 7258.6348 -7634.9785 7258.5762 -7635.0059 7258.5024 c
-7635.1396 7258.1484 -7635.5313 7257.5518 -7635.7539 7257.2266 c
-7635.8579 7257.0762 -7635.9873 7256.9775 -7636.1035 7256.8193 c
-7636.1196 7256.7969 -7636.0669 7256.7354 -7636.0928 7256.7061 c
-7636.6484 7256.0664 -7637.4312 7255.5415 -7638.3955 7255.0762 c
-7638.4546 7255.0508 -7638.4639 7255.1445 -7638.5366 7255.0869 C
-7638.8213 7254.9658 -7639.1143 7254.8535 -7639.3945 7254.7915 c
-7640.8965 7254.4629 -7642.7163 7254.8477 -7643.8027 7255.6328 c
-7644.7998 7256.3555 -7645.5308 7257.8623 -7645.4678 7259.0742 c
-7645.4126 7260.1094 -7644.6665 7261.2578 -7643.4458 7262.0352 c
-7642.3604 7262.7295 -7641.0479 7262.9834 -7640.2373 7262.3594 C
-7640.6499 7262.2295 -7640.9688 7262.0332 -7641.0811 7261.7529 C
-7641.0908 7261.4766 -7641.0967 7261.1992 -7640.8755 7260.8594 C
-7640.4517 7260.4863 -7639.7925 7260.2485 -7639.1235 7260.7158 c
-7638.1846 7261.3701 -7638.0728 7262.7891 -7639.0342 7263.5361 C
-7639.3086 7263.6406 -7639.5586 7263.8789 -7639.75 7263.9834 c
-7640.1826 7264.2188 -7640.5586 7264.3857 -7640.9751 7264.5435 c
-7642.0938 7264.9595 -7643.4839 7265.4185 -7644.5327 7265.5977 c
-7644.7114 7265.6289 -7644.8989 7265.6475 -7645.0806 7265.6738 C
-7648.4038 7265.3789 -7651.54 7265.0693 -7654.1416 7264.5264 C
-7654.1138 7264.5234 -7654.0908 7264.5244 -7654.0586 7264.5205 c
-7653.2378 7264.4199 -7652.6309 7264.2529 -7651.9043 7264.0137 c
-7651.6328 7263.9238 -7651.3184 7263.9121 -7651.0825 7263.8154 c
-7650.9985 7263.7852 -7650.9409 7263.6602 -7650.8472 7263.6133 c
-7650.5371 7263.4609 -7650.2129 7263.3662 -7649.8999 7263.1602 c
-7648.9097 7262.5059 -7647.8774 7261.3359 -7647.7617 7259.8682 C
-7647.9463 7258.8262 -7648.3643 7257.8525 -7649.5938 7257.0781 c
-7649.7217 7256.9961 -7649.8662 7256.96 -7649.9995 7256.8828 C
-7651.8516 7256.2168 -7653.5913 7257.3135 -7653.8066 7259.2061 C
-7653.7119 7259.3755 -7653.6499 7259.5527 -7653.6616 7259.7524 C
-7653.2939 7260.4492 -7651.9033 7261.0557 -7651.3057 7260.6143 C
-7651.6133 7260.5566 -7651.7495 7260.5254 -7651.8638 7260.2637 C
-7651.8892 7259.6074 -7651.0679 7259.4336 -7650.6528 7260.0176 C
-7650.4966 7260.7021 -7650.7676 7261.2529 -7651.2939 7261.8105 c
-7651.5068 7262.0361 -7651.7837 7262.1689 -7652.0566 7262.3545 c
-7652.4199 7262.6016 -7652.7495 7262.8828 -7653.1118 7263.0332 c
-7653.4385 7263.1689 -7653.8115 7263.2012 -7654.1445 7263.2891 c
-7654.2349 7263.3105 -7654.2969 7263.3613 -7654.3706 7263.3789 c
-7654.6274 7263.4336 -7654.8359 7263.5146 -7655.0879 7263.5469 c
-7655.4209 7263.5854 -7655.7739 7263.5488 -7656.1528 7263.5854 c
-7656.3398 7263.6055 -7656.5195 7263.6953 -7656.7144 7263.7109 c
-7656.8413 7263.7207 -7656.9722 7263.7207 -7657.1025 7263.7227 C
-7659.8135 7262.8213 -7662.0957 7261.6094 -7663.9814 7259.2793 c
-7667.6704 7254.7227 -7662.0415 7250.5566 -7660.9902 7254.5977 C
-7662.9668 7256.0361 -7666.5874 7259.1201 -7658.8892 7259.2471 C
-7650.6045 7257.7549 -7657.6982 7242.4922 -7667.6509 7246.5576 c
-7676.0151 7249.9746 -7672.1328 7258.6387 -7666.4658 7262.2935 c
-7657.9902 7267.7559 -7648.5376 7268.4922 -7638.7012 7268.5845 C
-7649.3862 7273.0488 -7663.9243 7270.4033 -7671.9897 7262.3809 c
-7676.1011 7258.2935 -7680.0435 7251.9912 -7678.8193 7245.8896 c
-7677.5742 7239.6816 -7671.1616 7245.4238 -7676.0957 7245.4424 C
-7675.8896 7251.0059 -7662.6387 7244.9648 -7668.9307 7236.8281 c
-7674.6011 7229.4922 -7684.5698 7237.5225 -7686.3242 7243.9482 c
-7692.0239 7264.8359 -7662.3545 7270.7129 -7648.3813 7271.4238 C
-7660.1143 7274.7754 -7676.3892 7272.2734 -7687.5547 7267.7852 c
-7691.9663 7266.0098 -7696.9707 7262.8926 -7699.5479 7258.7773 c
-7703.4619 7252.5264 -7696.4268 7248.2842 -7695.8955 7250.4033 c
-7695.4697 7252.0957 -7701.3765 7252.6235 -7696.8267 7255.6992 c
-7692.8091 7258.4185 -7689.2759 7252.2095 -7688.4619 7249.0781 c
-7684.6782 7234.5322 -7706.0601 7236.4609 -7708.3667 7250.1982 c
-7713.5103 7280.8271 -7667.3071 7274.4575 -7651.4902 7273.5928 C
-7651.7124 7273.7617 -7651.9331 7273.9189 -7652.1543 7274.0825 C
-7657.4346 7275.5854 -7662.6416 7277.7861 -7667.46 7280.5469 C
-7681.9546 7282.2813 -7694.7495 7271.8906 -7710.5913 7266.6152 c
-7719.5635 7263.6289 -7730.0933 7267.9277 -7738.2778 7263.3145 c
-7742.6235 7260.8545 -7745.6982 7258.2656 -7747.2959 7253.0518 C
-7748.9092 7244.1104 -7739.2979 7242.9717 -7741.1396 7247.6416 C
-7742.8428 7247.9688 -7742.1772 7246.8345 -7743.3354 7246.8418 C
-7747.2861 7250.5479 -7739.0244 7255.7314 -7735.1606 7252.4316 c
-7728.4497 7246.7031 -7733.2563 7238.3325 -7740.0864 7236.0557 C
-7758.5703 7236.25 -7759 7258.8613 -7753.0474 7271.3594 c
-7737.2217 7304.5854 -7703.1445 7292.5825 -7675.5376 7285.5479 C
-7679.2817 7288.0732 -7681.8975 7291.6426 -7684.5747 7295.2158 c
-7689.2197 7301.4165 -7691.6694 7310.8545 -7683.0024 7314.8613 C
-7682.1616 7318.9834 -7680.6392 7322.8857 -7676.5669 7324.7695 c
-7671.7471 7327 -7666.8457 7324.5586 -7665.5508 7319.4512 C
-7665.4766 7316.6729 -7666.1968 7314.8262 -7668.5938 7313.3887 c
-7670.1733 7312.4414 -7675.5176 7312.5313 -7672.8574 7315.5342 C
-7670.9663 7314.0415 -7671.1323 7316.4873 -7672.0112 7317.6006 C
-7674.8823 7317.5693 -7675.5771 7315.4873 -7675.5156 7312.5186 c
-7675.5151 7312.4961 -7675.5142 7312.4697 -7675.5146 7312.4434 C
-7675.3574 7305.1367 -7674.1343 7299.3242 -7672.0718 7294.7285 C
-7672.0713 7294.7305 -7672.0708 7294.7314 -7672.0698 7294.7324 c
-7671.8242 7295.2158 -7671.4819 7295.5 -7671.2485 7295.8945 c
-7671.1729 7296.0234 -7671.2495 7296.1387 -7671.1753 7296.2334 c
-7670.8262 7296.6855 -7669.9971 7297.3701 -7669.5313 7297.7402 c
-7669.3135 7297.9121 -7669.0835 7297.9985 -7668.8477 7298.1729 c
-7668.8125 7298.1973 -7668.8613 7298.3105 -7668.8115 7298.3418 c
-7667.7256 7299.0176 -7666.3638 7299.4277 -7664.7661 7299.6709 C
-7664.6699 7299.6816 -7664.6978 7299.5435 -7664.5669 7299.5938 C
-7664.1035 7299.6406 -7663.6309 7299.6738 -7663.1982 7299.6387 c
-7660.8862 7299.4453 -7658.4316 7298.0845 -7657.2129 7296.4668 c
-7656.0942 7294.9854 -7655.7095 7292.4854 -7656.3379 7290.7646 c
-7656.8774 7289.2949 -7658.4629 7287.9697 -7660.5684 7287.3906 c
-7662.4419 7286.8735 -7664.4492 7287.0845 -7665.3408 7288.3477 C
-7664.6875 7288.3535 -7664.1406 7288.4941 -7663.8545 7288.8477 C
-7663.7178 7289.2422 -7663.5859 7289.6387 -7663.7539 7290.2266 C
-7664.2002 7290.9541 -7665.0469 7291.5898 -7666.2178 7291.2129 c
-7667.4604 7290.8135 -7668.2119 7289.5781 -7668.0532 7288.3486 C
-7662.7505 7282.2031 -7655.0386 7279.6465 -7646.2539 7279.0537 C
-7646.2886 7279.0684 -7646.3218 7279.0801 -7646.3604 7279.0977 c
-7647.5015 7279.6064 -7648.3027 7280.1143 -7649.2437 7280.7832 c
-7649.5957 7281.0332 -7650.0439 7281.1914 -7650.3428 7281.4316 c
-7650.4492 7281.5166 -7650.4766 7281.7227 -7650.5913 7281.8301 c
-7650.9707 7282.1895 -7651.3975 7282.4688 -7651.7563 7282.9063 c
-7652.8945 7284.2891 -7653.8662 7286.4346 -7653.3809 7288.6016 C
-7652.6523 7290.0234 -7651.6162 7291.2441 -7649.4995 7291.8145 c
-7649.2788 7291.8755 -7649.0542 7291.8633 -7648.8276 7291.9185 C
-7645.8613 7292.0537 -7643.8369 7289.7021 -7644.3667 7286.8755 C
-7644.5781 7286.6738 -7644.7471 7286.4434 -7644.8184 7286.1514 C
-7645.6582 7285.3105 -7647.9336 7285.0508 -7648.5996 7285.9521 C
-7648.1309 7285.9004 -7647.9199 7285.8848 -7647.6387 7286.2109 C
-7647.3105 7287.1475 -7648.4189 7287.7617 -7649.2759 7287.1045 C
-7649.8052 7286.1865 -7649.6587 7285.2695 -7649.1479 7284.2314 c
-7648.9409 7283.8105 -7648.5991 7283.5 -7648.2881 7283.1104 c
-7647.8735 7282.5938 -7647.5239 7282.0415 -7647.0669 7281.6621 c
-7646.6563 7281.3232 -7646.1318 7281.1094 -7645.6899 7280.8369 c
-7645.5708 7280.7646 -7645.5039 7280.6641 -7645.4043 7280.6074 c
-7645.0596 7280.4121 -7644.7935 7280.2031 -7644.4438 7280.0469 c
-7643.9819 7279.8418 -7643.4561 7279.7373 -7642.9253 7279.5146 c
-7642.6636 7279.4063 -7642.4443 7279.1953 -7642.1709 7279.0854 c
-7642.0063 7279.0215 -7641.8311 7278.9688 -7641.6592 7278.9141 C
-7640.2695 7278.9185 -7638.8613 7278.9575 -7637.4375 7279.0342 c
-7635.7285 7279.0801 -7633.4653 7279.0938 -7631.5728 7279.1665 C
-7599.4688 7275.6533 -7566.98 7274.7305 -7534.4746 7274.2822 C
-7461.0664 7275.6152 -7370.8774 7277.2485 -7369.3535 7277.2485 c
-7366.7773 7277.2485 -7364.6909 7275.1602 -7364.6909 7272.5845 c
-7364.6909 7270.0078 -7366.7773 7267.9209 -7369.3535 7267.9209 c
f
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -
( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -
(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -
(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -
( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Chalk - Scribble/ A) -
(dobe ArtOnPath Brush Tool/ Floral Stem/ Adobe PatternOnPath Br) -
(ush Tool/ Decorative Border/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 pt. Round)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. Oval)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Oval)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt. Round)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Chalk - Scribble)
(1 / Unnamed 3/ / / / / 5 0 0 0 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Floral Stem)
(1 / Unnamed Brush Pat 40/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Decorative Border)
(1 / New Pattern 1/ / New Pattern 2/ / / 5 0 0.00392157 0.00392) -
(157 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs
([Registration])
Pc
0 0 0 0 1 1 1 Xa
(White)
Pc
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
(Black)
Pc
0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa
(CMYK Red)
Pc
0.038819 0 0.932555 0 1 0.94902 0 Xa
(CMYK Yellow)
Pc
0.827542 0.064729 0.957824 0.002594 0 0.65098 0.317647 Xa
(CMYK Green)
Pc
0.693446 0.140078 0 0 0 0.682353 0.937255 Xa
(CMYK Cyan)
Pc
0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa
(CMYK Blue)
Pc
0.006653 0.990021 0.005615 0 0.92549 0 0.54902 Xa
(CMYK Magenta)
Pc
0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa
(C=15 M=100 Y=90 K=10)
Pc
0 0.897398 0.84744 0 0.937255 0.254902 0.211765 Xa
(C=0 M=90 Y=85 K=0)
Pc
0 0.79855 0.939544 0.000092 0.945098 0.352941 0.160784 Xa
(C=0 M=80 Y=95 K=0)
Pc
0.000732 0.495003 0.984894 0 0.968627 0.580392 0.117647 Xa
(C=0 M=50 Y=100 K=0)
Pc
0 0.349462 0.845243 0 0.984314 0.690196 0.25098 Xa
(C=0 M=35 Y=85 K=0)
Pc
0.05594 0 0.899687 0 0.976471 0.929412 0.196078 Xa
(C=5 M=0 Y=90 K=0)
Pc
0.197513 0.001373 0.983734 0 0.843137 0.87451 0.137255 Xa
(C=20 M=0 Y=100 K=0)
Pc
0.49723 0.00293 0.989471 0 0.552941 0.776471 0.247059 Xa
(C=50 M=0 Y=100 K=0)
Pc
0.746151 0 0.99704 0.000092 0.223529 0.709804 0.290196 Xa
(C=75 M=0 Y=100 K=0)
Pc
0.861662 0.165713 1 0.032532 0 0.580392 0.266667 Xa
(C=85 M=10 Y=100 K=10)
Pc
0.902037 0.334844 0.976532 0.260471 0 0.407843 0.219608 Xa
(C=90 M=30 Y=95 K=30)
Pc
0.750637 0 0.748928 0 0.168627 0.713726 0.45098 Xa
(C=75 M=0 Y=75 K=0)
Pc
0.788235 0.104707 0.45008 0.000885 0 0.654902 0.615686 Xa
(C=80 M=10 Y=45 K=0)
Pc
0.702144 0.15375 0 0 0.152941 0.666667 0.882353 Xa
(C=70 M=15 Y=0 K=0)
Pc
0.848356 0.500084 0 0 0.109804 0.458824 0.737255 Xa
(C=85 M=50 Y=0 K=0)
Pc
0.993927 0.930846 0.059907 0.003601 0.168627 0.223529 0.564706 Xa
(C=100 M=95 Y=5 K=0)
Pc
1 1 0.301427 0.214023 0.14902 0.133333 0.384314 Xa
(C=100 M=100 Y=25 K=25)
Pc
0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa
(C=75 M=100 Y=0 K=0)
Pc
0.501945 0.992706 0.014649 0.00116 0.572549 0.152941 0.560784 Xa
(C=50 M=100 Y=0 K=0)
Pc
0.360327 1 0.353826 0.089052 0.619608 0.121569 0.388235 Xa
(C=35 M=100 Y=35 K=10)
Pc
0.092134 0.99704 0.484413 0.004273 0.854902 0.109804 0.360784 Xa
(C=10 M=100 Y=50 K=0)
Pc
0 0.946166 0.204593 0 0.933333 0.164706 0.482353 Xa
(C=0 M=95 Y=20 K=0)
Pc
0.251163 0.245762 0.398383 0 0.760784 0.709804 0.607843 Xa
(C=25 M=25 Y=40 K=0)
Pc
0.391943 0.442054 0.491554 0.061463 0.607843 0.521569 0.47451 Xa
(C=40 M=45 Y=50 K=5)
Pc
0.514702 0.509239 0.616327 0.227451 0.447059 0.4 0.345098 Xa
(C=50 M=50 Y=60 K=25)
Pc
0.549706 0.600061 0.645899 0.398749 0.34902 0.290196 0.258824 Xa
(C=55 M=60 Y=65 K=40)
Pc
0.233463 0.391485 0.638086 0.01416 0.768627 0.603922 0.423529 Xa
(C=25 M=40 Y=65 K=0)
Pc
0.304051 0.497078 0.750851 0.094057 0.662745 0.486275 0.313726 Xa
(C=30 M=50 Y=75 K=10)
Pc
0.358953 0.60058 0.803098 0.236179 0.545098 0.368627 0.235294 Xa
(C=35 M=60 Y=80 K=25)
Pc
0.392248 0.642969 0.886656 0.354772 0.458824 0.298039 0.160784 Xa
(C=40 M=65 Y=90 K=35)
Pc
0.418647 0.692348 0.974792 0.488502 0.376471 0.223529 0.07451 Xa
(C=40 M=70 Y=100 K=50)
Pc
0.516899 0.701045 0.792386 0.691859 0.235294 0.141176 0.082353 Xa
(C=50 M=70 Y=80 K=70)
Pc
Bb
2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Fade to Black)
Pc
Bb
0 0 0 0 Bh
2 (Super Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Super Soft Black Vignette)
Pc
Bb
2 (Green, Yellow, Orange) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Green, Yellow, Orange)
Pc
Bb
0 0 0 0 Bh
2 (Purple Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Purple Radial)
Pc
(Laguna) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Laguna)
Pc
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
(C=0 M=0 Y=0 K=100)
Pc
0.677577 0.618402 0.58056 0.456641 0.254902 0.25098 0.258824 Xa
(C=0 M=0 Y=0 K=90)
Pc
0.638788 0.555108 0.526177 0.275181 0.345098 0.34902 0.356863 Xa
(C=0 M=0 Y=0 K=80)
Pc
0.583215 0.494575 0.46363 0.148043 0.427451 0.431373 0.443137 Xa
(C=0 M=0 Y=0 K=70)
Pc
0.522423 0.426978 0.407874 0.062379 0.501961 0.509804 0.521569 Xa
(C=0 M=0 Y=0 K=60)
Pc
0.450904 0.360815 0.34818 0.01294 0.576471 0.584314 0.596078 Xa
(C=0 M=0 Y=0 K=50)
Pc
0.36173 0.282292 0.271336 0 0.654902 0.662745 0.67451 Xa
(C=0 M=0 Y=0 K=40)
Pc
0.264164 0.199466 0.195499 0 0.737255 0.745098 0.752941 Xa
(C=0 M=0 Y=0 K=30)
Pc
0.169863 0.120485 0.123751 0 0.819608 0.827451 0.831373 Xa
(C=0 M=0 Y=0 K=20)
Pc
0.08426 0.057374 0.057435 0 0.901961 0.905882 0.909804 Xa
(C=0 M=0 Y=0 K=10)
Pc
0.040528 0.02359 0.026154 0 0.945098 0.94902 0.94902 Xa
(C=0 M=0 Y=0 K=5)
Pc
0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa
(C=0 M=100 Y=100 K=0)
Pc
0.001678 0.745113 0.986419 0.000305 0.94902 0.396078 0.133333 Xa
(C=0 M=75 Y=100 K=0)
Pc
0.017365 0.087495 0.969451 0 1 0.870588 0.090196 Xa
(C=0 M=10 Y=95 K=0)
Pc
0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 Xa
(C=85 M=10 Y=100 K=0)
Pc
0.995392 0.873075 0.030457 0.001434 0.129412 0.25098 0.603922 Xa
(C=100 M=90 Y=0 K=0)
Pc
0.594476 0.896818 0 0.000122 0.498039 0.247059 0.596078 Xa
(C=60 M=90 Y=0 K=0)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 0 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
1 Ap
0 R
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA
0 J 0 j 1 w 4 M []0 d0 XR
256.2627 -353.4717 m
253.7773 -353.4717 251.7627 -355.4873 251.7627 -357.9717 c
251.7627 -360.458 253.7773 -362.4717 256.2627 -362.4717 c
258.748 -362.4717 260.7627 -360.458 260.7627 -357.9717 c
260.7627 -355.4873 258.748 -353.4717 256.2627 -353.4717 c
s
505.1504 -353.4717 m
502.666 -353.4717 500.6504 -355.4873 500.6504 -357.9717 c
500.6504 -360.458 502.666 -362.4717 505.1504 -362.4717 c
507.6367 -362.4717 509.6504 -360.458 509.6504 -357.9717 c
509.6504 -355.4873 507.6367 -353.4717 505.1504 -353.4717 c
s
666.4688 -398.4131 m
663.9844 -398.4131 661.9688 -400.4268 661.9688 -402.9131 c
661.9688 -405.3975 663.9844 -407.4131 666.4688 -407.4131 c
668.9551 -407.4131 670.9688 -405.3975 670.9688 -402.9131 c
670.9688 -400.4268 668.9551 -398.4131 666.4688 -398.4131 c
s
182.4492 -391.4639 m
179.9639 -391.4639 177.9492 -393.4795 177.9492 -395.9639 c
177.9492 -398.4502 179.9639 -400.4639 182.4492 -400.4639 c
184.9346 -400.4639 186.9492 -398.4502 186.9492 -395.9639 c
186.9492 -393.4795 184.9346 -391.4639 182.4492 -391.4639 c
s
0 Ap
560.6426 -333.8994 m
560.6426 -326.2686 L
560.6426 -325.0146 561.6582 -324.001 562.9111 -324.001 C
562.9111 -323.999 L
702 -323.999 L
716.7959 -323.999 730.1963 -329.9541 739.9492 -339.5928 C
739.9619 -339.6045 739.9766 -339.6123 739.9883 -339.624 c
740.874 -340.5107 740.874 -341.9463 739.9883 -342.8311 C
740.002 -342.8447 L
739.5742 -343.2725 L
729.5381 -353.3076 L
726.0234 -356.8232 726.0234 -362.5225 729.5381 -366.0361 c
733.0527 -369.5498 738.752 -369.5498 742.2656 -366.0361 C
748.7705 -359.5322 L
749.1455 -359.1963 L
749.1455 -359.1943 L
750.0244 -358.3154 751.4443 -358.3115 752.332 -359.1787 C
752.7783 -359.6064 752.8926 -359.9287 v
754.9004 -365.5791 756 -371.6592 756 -377.999 C
756 -382.8994 L
756 -472.8975 L
756 -1015.2852 L
756 -1015.2861 756.001 -1015.2881 756.001 -1015.29 c
756.001 -1016.542 754.9863 -1017.5576 753.7334 -1017.5576 c
753.668 -1017.5576 753.6074 -1017.5439 753.543 -1017.5381 C
753.543 -1017.5576 L
746.1006 -1017.5576 L
741.1309 -1017.5576 737.1006 -1021.5869 737.1006 -1026.5576 c
737.1006 -1031.5273 741.1309 -1035.5576 746.1006 -1035.5576 C
753.543 -1035.5576 L
753.543 -1035.5771 L
753.6074 -1035.5713 753.668 -1035.5576 753.7334 -1035.5576 c
754.9863 -1035.5576 756.001 -1036.5732 756.001 -1037.8262 c
756.001 -1037.8271 756 -1037.8291 756 -1037.8311 C
756 -1255.1006 L
756 -1345.0986 L
756 -1350 L
756 -1356.1357 754.9658 -1362.0283 753.0791 -1367.5244 c
753.0391 -1367.6436 752.9023 -1367.8799 Y
752.7969 -1368.2168 752.6201 -1368.5371 752.3535 -1368.8037 c
751.4668 -1369.6895 750.0313 -1369.6904 749.1455 -1368.8047 C
749.1387 -1368.7979 749.1348 -1368.79 749.1289 -1368.7832 C
749.1074 -1368.8047 L
742.2656 -1361.9639 L
738.752 -1358.4492 733.0527 -1358.4492 729.5381 -1361.9639 c
726.0234 -1365.4775 726.0234 -1371.1768 729.5381 -1374.6914 C
739.9883 -1385.1416 L
739.9746 -1385.1563 L
739.9785 -1385.1602 739.9844 -1385.1631 739.9883 -1385.168 C
740.874 -1386.0537 740.874 -1387.4893 739.9883 -1388.375 c
739.9746 -1388.3887 739.959 -1388.3975 739.9453 -1388.4102 c
730.1924 -1398.0459 716.7939 -1404 702 -1404 C
443.2705 -1404 L
442.0176 -1404 441.002 -1402.9844 441.002 -1401.7324 C
441.002 -1394.0996 L
441.002 -1389.1299 436.9727 -1385.0996 432.002 -1385.0996 c
427.0322 -1385.0996 423.002 -1389.1299 423.002 -1394.0996 C
423.002 -1401.7324 L
423.002 -1402.9844 421.9863 -1404 420.7344 -1404 C
165.4902 -1404 L
164.2373 -1404 163.2217 -1402.9844 163.2217 -1401.7324 C
163.2217 -1391.2383 L
163.2217 -1386.2676 159.1914 -1382.2383 154.2217 -1382.2383 c
149.252 -1382.2383 145.2217 -1386.2676 145.2217 -1391.2383 C
145.2217 -1398.1289 L
145.2217 -1399.3818 144.2061 -1400.3965 142.9531 -1400.3965 c
142.5244 -1400.3965 142.127 -1400.2705 141.7842 -1400.0635 C
121.9824 -1392.0586 108 -1372.6709 108 -1350 C
108 -972.3467 L
108 -972.3447 108 -972.3428 108 -972.3418 c
108 -971.0889 109.0156 -970.0732 110.2676 -970.0732 c
110.2695 -970.0732 110.2705 -970.0742 110.2725 -970.0742 C
124.0303 -970.0742 L
129 -970.0742 133.0303 -966.0439 133.0303 -961.0742 c
133.0303 -956.1035 129 -952.0742 124.0303 -952.0742 C
110.2676 -952.0742 L
110.2676 -952.0732 L
109.0156 -952.0732 108 -951.0576 108 -949.8057 c
108 -949.8037 108 -949.8018 108 -949.8008 C
108 -658.7588 L
108 -658.7568 108 -658.7568 108 -658.7549 c
108 -657.501 109.0156 -656.4854 110.2676 -656.4854 c
110.2695 -656.4854 110.2705 -656.4873 110.2725 -656.4873 C
124.0303 -656.4873 L
129 -656.4873 133.0303 -652.4561 133.0303 -647.4873 c
133.0303 -642.5166 129 -638.4873 124.0303 -638.4873 C
110.2676 -638.4873 L
110.2676 -638.4854 L
109.0156 -638.4854 108 -637.4697 108 -636.2178 c
108 -636.2158 108 -636.2158 108 -636.2139 C
108 -377.999 L
108 -348.1768 132.1777 -323.999 162 -323.999 C
173.8574 -323.999 L
182.9902 -323.999 L
184.2422 -323.999 185.2578 -325.0146 185.2578 -326.2666 C
185.2578 -333.8994 L
185.2578 -338.8682 189.2871 -342.8994 194.2578 -342.8994 c
199.2285 -342.8994 203.2578 -338.8682 203.2578 -333.8994 C
203.2578 -326.2666 L
203.2578 -325.0146 204.2734 -323.999 205.5264 -323.999 C
221.043 -323.999 L
231.999 -323.999 L
540.375 -323.999 L
540.375 -324.001 L
541.627 -324.001 542.6426 -325.0146 542.6426 -326.2686 C
542.6426 -333.8994 L
542.6426 -338.8701 546.6729 -342.8994 551.6426 -342.8994 c
556.6133 -342.8994 560.6426 -338.8701 560.6426 -333.8994 C
s
1 Ap
584.8574 -975.8877 m
582.3721 -975.8877 580.3574 -977.9023 580.3574 -980.3877 c
580.3574 -982.873 582.3721 -984.8877 584.8574 -984.8877 c
587.3428 -984.8877 589.3574 -982.873 589.3574 -980.3877 c
589.3574 -977.9023 587.3428 -975.8877 584.8574 -975.8877 c
s
182.377 -975.8877 m
179.8926 -975.8877 177.877 -977.9023 177.877 -980.3877 c
177.877 -982.873 179.8926 -984.8877 182.377 -984.8877 c
184.8633 -984.8877 186.877 -982.873 186.877 -980.3877 c
186.877 -977.9023 184.8633 -975.8877 182.377 -975.8877 c
s
155.5195 -670.6084 m
153.0352 -670.6084 151.0195 -672.624 151.0195 -675.1084 c
151.0195 -677.5947 153.0352 -679.6084 155.5195 -679.6084 c
158.0059 -679.6084 160.0195 -677.5947 160.0195 -675.1084 c
160.0195 -672.624 158.0059 -670.6084 155.5195 -670.6084 c
s
504.7568 -391.4639 m
502.2715 -391.4639 500.2568 -393.4795 500.2568 -395.9639 c
500.2568 -398.4502 502.2715 -400.4639 504.7568 -400.4639 c
507.2422 -400.4639 509.2568 -398.4502 509.2568 -395.9639 c
509.2568 -393.4795 507.2422 -391.4639 504.7568 -391.4639 c
s
864 0 m
0 0 L
0 -1728 L
864 -1728 L
864 0 L
s
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
